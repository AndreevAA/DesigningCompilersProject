Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    WITH
    DEFINITION
    RECORD
    DOTDOT
    ASH
    COMMENT
    HALT
    IN
    TYPE

Grammar

Rule 0     S' -> module
Rule 1     module -> MODULE ID ; importList declarationList statementBlock END ID .
Rule 2     module -> MODULE ID ; importList declarationList statementBlock END ID
Rule 3     importList -> IMPORT importedModulesList ;
Rule 4     importList -> <empty>
Rule 5     importedModulesList -> importedModules , importedModulesList
Rule 6     importedModulesList -> importedModules
Rule 7     importedModules -> ID ASSIGN ID
Rule 8     importedModules -> ID
Rule 9     declarationList -> identifierDeclarationList procedureDeclarationList
Rule 10    identifierDeclarationList -> CONST constantDeclarationList identifierDeclarationList
Rule 11    identifierDeclarationList -> VAR variableDeclarationList identifierDeclarationList
Rule 12    identifierDeclarationList -> <empty>
Rule 13    constantDeclarationList -> ID = expression ; constantDeclarationList
Rule 14    constantDeclarationList -> <empty>
Rule 15    variableDeclarationList -> identifierList : type ; clearVariables variableDeclarationList
Rule 16    variableDeclarationList -> <empty>
Rule 17    clearVariables -> <empty>
Rule 18    identifierList -> ID
Rule 19    identifierList -> ID , identifierList
Rule 20    procedureDeclarationList -> procedureDeclaration ; procedureDeclarationList
Rule 21    procedureDeclarationList -> forwardDeclaration ; procedureDeclarationList
Rule 22    procedureDeclarationList -> <empty>
Rule 23    procedureDeclaration -> PROCEDURE receiver ID createTable optionalFormalParameters ; declarationList insertEntry statementBlock END ID popTable
Rule 24    insertEntry -> <empty>
Rule 25    popTable -> <empty>
Rule 26    createTable -> <empty>
Rule 27    receiver -> ( optionalVAR ID : ID )
Rule 28    receiver -> <empty>
Rule 29    optionalVAR -> VAR
Rule 30    optionalVAR -> <empty>
Rule 31    optionalFormalParameters -> ( optionalFormalParameterList ) : qualident
Rule 32    optionalFormalParameters -> ( optionalFormalParameterList )
Rule 33    optionalFormalParameters -> <empty>
Rule 34    optionalFormalParameterList -> formalParameterList
Rule 35    optionalFormalParameterList -> <empty>
Rule 36    formalParameterList -> formalParameter ; formalParameterList
Rule 37    formalParameterList -> formalParameter
Rule 38    formalParameter -> optionalVAR identifierList : type
Rule 39    forwardDeclaration -> PROCEDURE ^ receiver ID createTable optionalFormalParameters popTable2
Rule 40    popTable2 -> <empty>
Rule 41    statementBlock -> BEGIN beginquad statementList boolMarker
Rule 42    statementBlock -> <empty>
Rule 43    beginquad -> <empty>
Rule 44    statementList -> statementList boolMarker statement ;
Rule 45    statementList -> statement ;
Rule 46    statementList -> <empty>
Rule 47    statement -> IF expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END
Rule 48    elsifList -> ELSIF expression THEN boolMarker statementList nMarker boolMarker elsifList
Rule 49    elsifList -> <empty>
Rule 50    optionalElse -> ELSE statementList
Rule 51    optionalElse -> <empty>
Rule 52    statement -> CASE expression OF caseList optionalElse END
Rule 53    caseList -> case | caseList
Rule 54    caseList -> case
Rule 55    case -> expression : statementList
Rule 56    case -> <empty>
Rule 57    statement -> WHILE boolMarker expression DO boolMarker statementList END
Rule 58    statement -> REPEAT boolMarker statementList UNTIL boolMarker expression
Rule 59    statement -> FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END
Rule 60    forAssign -> <empty>
Rule 61    toValue -> <empty>
Rule 62    optionalBY -> BY expression
Rule 63    optionalBY -> <empty>
Rule 64    statement -> LOOP boolMarker statementList END
Rule 65    statement -> EXIT
Rule 66    statement -> READINT ( designator )
Rule 67    statement -> READREAL ( designator )
Rule 68    statement -> RETURN
Rule 69    statement -> RETURN expression
Rule 70    statement -> designator
Rule 71    statement -> designator checkConstant ASSIGN expression
Rule 72    checkConstant -> <empty>
Rule 73    statement -> DEC ( designator checkConstant )
Rule 74    statement -> DEC ( designator checkConstant , expression )
Rule 75    statement -> INC ( designator checkConstant )
Rule 76    statement -> INC ( designator checkConstant , expression )
Rule 77    builtIn -> ABS ( expression )
Rule 78    builtIn -> SIZE ( INTEGER )
Rule 79    builtIn -> SIZE ( REAL )
Rule 80    builtIn -> SIZE ( BOOLEAN )
Rule 81    builtIn -> SIZE ( CHAR )
Rule 82    builtIn -> MIN ( INTEGER )
Rule 83    builtIn -> MIN ( REAL )
Rule 84    builtIn -> MIN ( BOOLEAN )
Rule 85    builtIn -> MIN ( CHAR )
Rule 86    builtIn -> MAX ( INTEGER )
Rule 87    builtIn -> MAX ( REAL )
Rule 88    builtIn -> MAX ( BOOLEAN )
Rule 89    builtIn -> MAX ( CHAR )
Rule 90    builtIn -> CHR ( expression )
Rule 91    builtIn -> ORD ( expression )
Rule 92    builtIn -> CAP ( expression )
Rule 93    designator -> ID suffix
Rule 94    designator -> builtIn
Rule 95    suffix -> . ID suffix
Rule 96    suffix -> [ optionalExpressionList ] suffix
Rule 97    suffix -> ^ suffix
Rule 98    suffix -> ( optionalExpressionList ) suffix
Rule 99    suffix -> <empty>
Rule 100   optionalExpressionList -> expressionList
Rule 101   optionalExpressionList -> <empty>
Rule 102   qualident -> ID
Rule 103   qualident -> ID . ID
Rule 104   qualident -> INTEGER
Rule 105   qualident -> CHAR
Rule 106   qualident -> REAL
Rule 107   qualident -> BOOLEAN
Rule 108   type -> qualident
Rule 109   type -> ARRAY expression OF type
Rule 110   type -> POINTER TO ARRAY expression OF type
Rule 111   expressionList -> expression , expressionList
Rule 112   expressionList -> expression
Rule 113   expression -> - expression
Rule 114   expression -> + expression
Rule 115   expression -> factor
Rule 116   boolMarker -> <empty>
Rule 117   nMarker -> <empty>
Rule 118   expression -> expression OR boolMarker expression
Rule 119   expression -> expression & boolMarker expression
Rule 120   expression -> expression # expression
Rule 121   expression -> expression = expression
Rule 122   expression -> expression < expression
Rule 123   expression -> expression LESSEQUAL expression
Rule 124   expression -> expression > expression
Rule 125   expression -> expression MOREEQUAL expression
Rule 126   expression -> expression + expression
Rule 127   expression -> expression - expression
Rule 128   expression -> expression * expression
Rule 129   expression -> expression / expression
Rule 130   expression -> expression DIV expression
Rule 131   expression -> expression MOD expression
Rule 132   factor -> NIL
Rule 133   factor -> designator
Rule 134   factor -> INTEGERCONSTANT
Rule 135   factor -> CHARACTERCONSTANT
Rule 136   factor -> REALCONSTANT
Rule 137   factor -> STRINGCONSTANT
Rule 138   factor -> BOOLEANCONSTANT
Rule 139   factor -> ~ factor
Rule 140   factor -> ( expression )

Terminals, with rules where they appear

#                    : 120
&                    : 119
(                    : 27 31 32 66 67 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 98 140
)                    : 27 31 32 66 67 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 98 140
*                    : 128
+                    : 114 126
,                    : 5 19 74 76 111
-                    : 113 127
.                    : 1 95 103
/                    : 129
:                    : 15 27 31 38 55
;                    : 1 2 3 13 15 20 21 23 36 44 45
<                    : 122
=                    : 13 121
>                    : 124
ABS                  : 77
ARRAY                : 109 110
ASH                  : 
ASSIGN               : 7 59 71
BEGIN                : 41
BOOLEAN              : 80 84 88 107
BOOLEANCONSTANT      : 138
BY                   : 62
CAP                  : 92
CASE                 : 52
CHAR                 : 81 85 89 105
CHARACTERCONSTANT    : 135
CHR                  : 90
COMMENT              : 
CONST                : 10
DEC                  : 73 74
DEFINITION           : 
DIV                  : 130
DO                   : 57 59
DOTDOT               : 
ELSE                 : 50
ELSIF                : 48
END                  : 1 2 23 47 52 57 59 64
EXIT                 : 65
FOR                  : 59
HALT                 : 
ID                   : 1 1 2 2 7 7 8 13 18 19 23 23 27 27 39 59 93 95 102 103 103
IF                   : 47
IMPORT               : 3
IN                   : 
INC                  : 75 76
INTEGER              : 78 82 86 104
INTEGERCONSTANT      : 134
LESSEQUAL            : 123
LOOP                 : 64
MAX                  : 86 87 88 89
MIN                  : 82 83 84 85
MOD                  : 131
MODULE               : 1 2
MOREEQUAL            : 125
NIL                  : 132
OF                   : 52 109 110
OR                   : 118
ORD                  : 91
POINTER              : 110
PROCEDURE            : 23 39
READINT              : 66
READREAL             : 67
REAL                 : 79 83 87 106
REALCONSTANT         : 136
RECORD               : 
REPEAT               : 58
RETURN               : 68 69
SIZE                 : 78 79 80 81
STRINGCONSTANT       : 137
THEN                 : 47 48
TO                   : 59 110
TYPE                 : 
UNTIL                : 58
VAR                  : 11 29
WHILE                : 57
WITH                 : 
[                    : 96
]                    : 96
^                    : 39 97
error                : 
|                    : 53
~                    : 139

Nonterminals, with rules where they appear

beginquad            : 41
boolMarker           : 41 44 47 47 48 48 57 57 58 58 59 59 64 118 119
builtIn              : 94
case                 : 53 54
caseList             : 52 53
checkConstant        : 71 73 74 75 76
clearVariables       : 15
constantDeclarationList : 10 13
createTable          : 23 39
declarationList      : 1 2 23
designator           : 66 67 70 71 73 74 75 76 133
elsifList            : 47 48
expression           : 13 47 48 52 55 57 58 59 59 62 69 71 74 76 77 90 91 92 109 110 111 112 113 114 118 118 119 119 120 120 121 121 122 122 123 123 124 124 125 125 126 126 127 127 128 128 129 129 130 130 131 131 140
expressionList       : 100 111
factor               : 115 139
forAssign            : 59
formalParameter      : 36 37
formalParameterList  : 34 36
forwardDeclaration   : 21
identifierDeclarationList : 9 10 11
identifierList       : 15 19 38
importList           : 1 2
importedModules      : 5 6
importedModulesList  : 3 5
insertEntry          : 23
module               : 0
nMarker              : 47 48
optionalBY           : 59
optionalElse         : 47 52
optionalExpressionList : 96 98
optionalFormalParameterList : 31 32
optionalFormalParameters : 23 39
optionalVAR          : 27 38
popTable             : 23
popTable2            : 39
procedureDeclaration : 20
procedureDeclarationList : 9 20 21
qualident            : 31 108
receiver             : 23 39
statement            : 44 45
statementBlock       : 1 2 23
statementList        : 41 44 47 48 50 55 57 58 59 64
suffix               : 93 95 96 97 98
toValue              : 59
type                 : 15 38 109 110
variableDeclarationList : 11 15

Parsing method: LALR

state 0

    (0) S' -> . module
    (1) module -> . MODULE ID ; importList declarationList statementBlock END ID .
    (2) module -> . MODULE ID ; importList declarationList statementBlock END ID

    MODULE          shift and go to state 1

    module                         shift and go to state 2

state 1

    (1) module -> MODULE . ID ; importList declarationList statementBlock END ID .
    (2) module -> MODULE . ID ; importList declarationList statementBlock END ID

    ID              shift and go to state 3


state 2

    (0) S' -> module .



state 3

    (1) module -> MODULE ID . ; importList declarationList statementBlock END ID .
    (2) module -> MODULE ID . ; importList declarationList statementBlock END ID

    ;               shift and go to state 4


state 4

    (1) module -> MODULE ID ; . importList declarationList statementBlock END ID .
    (2) module -> MODULE ID ; . importList declarationList statementBlock END ID
    (3) importList -> . IMPORT importedModulesList ;
    (4) importList -> .

    IMPORT          shift and go to state 6
    CONST           reduce using rule 4 (importList -> .)
    VAR             reduce using rule 4 (importList -> .)
    BEGIN           reduce using rule 4 (importList -> .)
    END             reduce using rule 4 (importList -> .)
    PROCEDURE       reduce using rule 4 (importList -> .)

    importList                     shift and go to state 5

state 5

    (1) module -> MODULE ID ; importList . declarationList statementBlock END ID .
    (2) module -> MODULE ID ; importList . declarationList statementBlock END ID
    (9) declarationList -> . identifierDeclarationList procedureDeclarationList
    (10) identifierDeclarationList -> . CONST constantDeclarationList identifierDeclarationList
    (11) identifierDeclarationList -> . VAR variableDeclarationList identifierDeclarationList
    (12) identifierDeclarationList -> .

    CONST           shift and go to state 10
    VAR             shift and go to state 9
    PROCEDURE       reduce using rule 12 (identifierDeclarationList -> .)
    BEGIN           reduce using rule 12 (identifierDeclarationList -> .)
    END             reduce using rule 12 (identifierDeclarationList -> .)

    declarationList                shift and go to state 7
    identifierDeclarationList      shift and go to state 8

state 6

    (3) importList -> IMPORT . importedModulesList ;
    (5) importedModulesList -> . importedModules , importedModulesList
    (6) importedModulesList -> . importedModules
    (7) importedModules -> . ID ASSIGN ID
    (8) importedModules -> . ID

    ID              shift and go to state 13

    importedModulesList            shift and go to state 11
    importedModules                shift and go to state 12

state 7

    (1) module -> MODULE ID ; importList declarationList . statementBlock END ID .
    (2) module -> MODULE ID ; importList declarationList . statementBlock END ID
    (41) statementBlock -> . BEGIN beginquad statementList boolMarker
    (42) statementBlock -> .

    BEGIN           shift and go to state 15
    END             reduce using rule 42 (statementBlock -> .)

    statementBlock                 shift and go to state 14

state 8

    (9) declarationList -> identifierDeclarationList . procedureDeclarationList
    (20) procedureDeclarationList -> . procedureDeclaration ; procedureDeclarationList
    (21) procedureDeclarationList -> . forwardDeclaration ; procedureDeclarationList
    (22) procedureDeclarationList -> .
    (23) procedureDeclaration -> . PROCEDURE receiver ID createTable optionalFormalParameters ; declarationList insertEntry statementBlock END ID popTable
    (39) forwardDeclaration -> . PROCEDURE ^ receiver ID createTable optionalFormalParameters popTable2

    BEGIN           reduce using rule 22 (procedureDeclarationList -> .)
    END             reduce using rule 22 (procedureDeclarationList -> .)
    PROCEDURE       shift and go to state 19

    forwardDeclaration             shift and go to state 16
    procedureDeclarationList       shift and go to state 17
    procedureDeclaration           shift and go to state 18

state 9

    (11) identifierDeclarationList -> VAR . variableDeclarationList identifierDeclarationList
    (15) variableDeclarationList -> . identifierList : type ; clearVariables variableDeclarationList
    (16) variableDeclarationList -> .
    (18) identifierList -> . ID
    (19) identifierList -> . ID , identifierList

    CONST           reduce using rule 16 (variableDeclarationList -> .)
    VAR             reduce using rule 16 (variableDeclarationList -> .)
    PROCEDURE       reduce using rule 16 (variableDeclarationList -> .)
    BEGIN           reduce using rule 16 (variableDeclarationList -> .)
    END             reduce using rule 16 (variableDeclarationList -> .)
    ID              shift and go to state 22

    variableDeclarationList        shift and go to state 20
    identifierList                 shift and go to state 21

state 10

    (10) identifierDeclarationList -> CONST . constantDeclarationList identifierDeclarationList
    (13) constantDeclarationList -> . ID = expression ; constantDeclarationList
    (14) constantDeclarationList -> .

    ID              shift and go to state 24
    CONST           reduce using rule 14 (constantDeclarationList -> .)
    VAR             reduce using rule 14 (constantDeclarationList -> .)
    PROCEDURE       reduce using rule 14 (constantDeclarationList -> .)
    BEGIN           reduce using rule 14 (constantDeclarationList -> .)
    END             reduce using rule 14 (constantDeclarationList -> .)

    constantDeclarationList        shift and go to state 23

state 11

    (3) importList -> IMPORT importedModulesList . ;

    ;               shift and go to state 25


state 12

    (5) importedModulesList -> importedModules . , importedModulesList
    (6) importedModulesList -> importedModules .

    ,               shift and go to state 26
    ;               reduce using rule 6 (importedModulesList -> importedModules .)


state 13

    (7) importedModules -> ID . ASSIGN ID
    (8) importedModules -> ID .

    ASSIGN          shift and go to state 27
    ,               reduce using rule 8 (importedModules -> ID .)
    ;               reduce using rule 8 (importedModules -> ID .)


state 14

    (1) module -> MODULE ID ; importList declarationList statementBlock . END ID .
    (2) module -> MODULE ID ; importList declarationList statementBlock . END ID

    END             shift and go to state 28


state 15

    (41) statementBlock -> BEGIN . beginquad statementList boolMarker
    (43) beginquad -> .

    IF              reduce using rule 43 (beginquad -> .)
    CASE            reduce using rule 43 (beginquad -> .)
    WHILE           reduce using rule 43 (beginquad -> .)
    REPEAT          reduce using rule 43 (beginquad -> .)
    FOR             reduce using rule 43 (beginquad -> .)
    LOOP            reduce using rule 43 (beginquad -> .)
    EXIT            reduce using rule 43 (beginquad -> .)
    READINT         reduce using rule 43 (beginquad -> .)
    READREAL        reduce using rule 43 (beginquad -> .)
    RETURN          reduce using rule 43 (beginquad -> .)
    DEC             reduce using rule 43 (beginquad -> .)
    INC             reduce using rule 43 (beginquad -> .)
    ID              reduce using rule 43 (beginquad -> .)
    ABS             reduce using rule 43 (beginquad -> .)
    SIZE            reduce using rule 43 (beginquad -> .)
    MIN             reduce using rule 43 (beginquad -> .)
    MAX             reduce using rule 43 (beginquad -> .)
    CHR             reduce using rule 43 (beginquad -> .)
    ORD             reduce using rule 43 (beginquad -> .)
    CAP             reduce using rule 43 (beginquad -> .)
    END             reduce using rule 43 (beginquad -> .)

    beginquad                      shift and go to state 29

state 16

    (21) procedureDeclarationList -> forwardDeclaration . ; procedureDeclarationList

    ;               shift and go to state 30


state 17

    (9) declarationList -> identifierDeclarationList procedureDeclarationList .

    BEGIN           reduce using rule 9 (declarationList -> identifierDeclarationList procedureDeclarationList .)
    END             reduce using rule 9 (declarationList -> identifierDeclarationList procedureDeclarationList .)


state 18

    (20) procedureDeclarationList -> procedureDeclaration . ; procedureDeclarationList

    ;               shift and go to state 31


state 19

    (23) procedureDeclaration -> PROCEDURE . receiver ID createTable optionalFormalParameters ; declarationList insertEntry statementBlock END ID popTable
    (39) forwardDeclaration -> PROCEDURE . ^ receiver ID createTable optionalFormalParameters popTable2
    (27) receiver -> . ( optionalVAR ID : ID )
    (28) receiver -> .

    ^               shift and go to state 34
    (               shift and go to state 32
    ID              reduce using rule 28 (receiver -> .)

    receiver                       shift and go to state 33

state 20

    (11) identifierDeclarationList -> VAR variableDeclarationList . identifierDeclarationList
    (10) identifierDeclarationList -> . CONST constantDeclarationList identifierDeclarationList
    (11) identifierDeclarationList -> . VAR variableDeclarationList identifierDeclarationList
    (12) identifierDeclarationList -> .

    CONST           shift and go to state 10
    VAR             shift and go to state 9
    PROCEDURE       reduce using rule 12 (identifierDeclarationList -> .)
    BEGIN           reduce using rule 12 (identifierDeclarationList -> .)
    END             reduce using rule 12 (identifierDeclarationList -> .)

    identifierDeclarationList      shift and go to state 35

state 21

    (15) variableDeclarationList -> identifierList . : type ; clearVariables variableDeclarationList

    :               shift and go to state 36


state 22

    (18) identifierList -> ID .
    (19) identifierList -> ID . , identifierList

    :               reduce using rule 18 (identifierList -> ID .)
    ,               shift and go to state 37


state 23

    (10) identifierDeclarationList -> CONST constantDeclarationList . identifierDeclarationList
    (10) identifierDeclarationList -> . CONST constantDeclarationList identifierDeclarationList
    (11) identifierDeclarationList -> . VAR variableDeclarationList identifierDeclarationList
    (12) identifierDeclarationList -> .

    CONST           shift and go to state 10
    VAR             shift and go to state 9
    PROCEDURE       reduce using rule 12 (identifierDeclarationList -> .)
    BEGIN           reduce using rule 12 (identifierDeclarationList -> .)
    END             reduce using rule 12 (identifierDeclarationList -> .)

    identifierDeclarationList      shift and go to state 38

state 24

    (13) constantDeclarationList -> ID . = expression ; constantDeclarationList

    =               shift and go to state 39


state 25

    (3) importList -> IMPORT importedModulesList ; .

    CONST           reduce using rule 3 (importList -> IMPORT importedModulesList ; .)
    VAR             reduce using rule 3 (importList -> IMPORT importedModulesList ; .)
    BEGIN           reduce using rule 3 (importList -> IMPORT importedModulesList ; .)
    END             reduce using rule 3 (importList -> IMPORT importedModulesList ; .)
    PROCEDURE       reduce using rule 3 (importList -> IMPORT importedModulesList ; .)


state 26

    (5) importedModulesList -> importedModules , . importedModulesList
    (5) importedModulesList -> . importedModules , importedModulesList
    (6) importedModulesList -> . importedModules
    (7) importedModules -> . ID ASSIGN ID
    (8) importedModules -> . ID

    ID              shift and go to state 13

    importedModules                shift and go to state 12
    importedModulesList            shift and go to state 40

state 27

    (7) importedModules -> ID ASSIGN . ID

    ID              shift and go to state 41


state 28

    (1) module -> MODULE ID ; importList declarationList statementBlock END . ID .
    (2) module -> MODULE ID ; importList declarationList statementBlock END . ID

    ID              shift and go to state 42


state 29

    (41) statementBlock -> BEGIN beginquad . statementList boolMarker
    (44) statementList -> . statementList boolMarker statement ;
    (45) statementList -> . statement ;
    (46) statementList -> .
    (47) statement -> . IF expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END
    (52) statement -> . CASE expression OF caseList optionalElse END
    (57) statement -> . WHILE boolMarker expression DO boolMarker statementList END
    (58) statement -> . REPEAT boolMarker statementList UNTIL boolMarker expression
    (59) statement -> . FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END
    (64) statement -> . LOOP boolMarker statementList END
    (65) statement -> . EXIT
    (66) statement -> . READINT ( designator )
    (67) statement -> . READREAL ( designator )
    (68) statement -> . RETURN
    (69) statement -> . RETURN expression
    (70) statement -> . designator
    (71) statement -> . designator checkConstant ASSIGN expression
    (73) statement -> . DEC ( designator checkConstant )
    (74) statement -> . DEC ( designator checkConstant , expression )
    (75) statement -> . INC ( designator checkConstant )
    (76) statement -> . INC ( designator checkConstant , expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for READINT resolved as shift
  ! shift/reduce conflict for READREAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ABS resolved as shift
  ! shift/reduce conflict for SIZE resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAX resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
  ! shift/reduce conflict for CAP resolved as shift
    END             reduce using rule 46 (statementList -> .)
    IF              shift and go to state 60
    CASE            shift and go to state 48
    WHILE           shift and go to state 45
    REPEAT          shift and go to state 54
    FOR             shift and go to state 55
    LOOP            shift and go to state 65
    EXIT            shift and go to state 63
    READINT         shift and go to state 56
    READREAL        shift and go to state 46
    RETURN          shift and go to state 43
    DEC             shift and go to state 49
    INC             shift and go to state 66
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

  ! IF              [ reduce using rule 46 (statementList -> .) ]
  ! CASE            [ reduce using rule 46 (statementList -> .) ]
  ! WHILE           [ reduce using rule 46 (statementList -> .) ]
  ! REPEAT          [ reduce using rule 46 (statementList -> .) ]
  ! FOR             [ reduce using rule 46 (statementList -> .) ]
  ! LOOP            [ reduce using rule 46 (statementList -> .) ]
  ! EXIT            [ reduce using rule 46 (statementList -> .) ]
  ! READINT         [ reduce using rule 46 (statementList -> .) ]
  ! READREAL        [ reduce using rule 46 (statementList -> .) ]
  ! RETURN          [ reduce using rule 46 (statementList -> .) ]
  ! DEC             [ reduce using rule 46 (statementList -> .) ]
  ! INC             [ reduce using rule 46 (statementList -> .) ]
  ! ID              [ reduce using rule 46 (statementList -> .) ]
  ! ABS             [ reduce using rule 46 (statementList -> .) ]
  ! SIZE            [ reduce using rule 46 (statementList -> .) ]
  ! MIN             [ reduce using rule 46 (statementList -> .) ]
  ! MAX             [ reduce using rule 46 (statementList -> .) ]
  ! CHR             [ reduce using rule 46 (statementList -> .) ]
  ! ORD             [ reduce using rule 46 (statementList -> .) ]
  ! CAP             [ reduce using rule 46 (statementList -> .) ]

    designator                     shift and go to state 57
    statementList                  shift and go to state 50
    builtIn                        shift and go to state 58
    statement                      shift and go to state 52

state 30

    (21) procedureDeclarationList -> forwardDeclaration ; . procedureDeclarationList
    (20) procedureDeclarationList -> . procedureDeclaration ; procedureDeclarationList
    (21) procedureDeclarationList -> . forwardDeclaration ; procedureDeclarationList
    (22) procedureDeclarationList -> .
    (23) procedureDeclaration -> . PROCEDURE receiver ID createTable optionalFormalParameters ; declarationList insertEntry statementBlock END ID popTable
    (39) forwardDeclaration -> . PROCEDURE ^ receiver ID createTable optionalFormalParameters popTable2

    BEGIN           reduce using rule 22 (procedureDeclarationList -> .)
    END             reduce using rule 22 (procedureDeclarationList -> .)
    PROCEDURE       shift and go to state 19

    forwardDeclaration             shift and go to state 16
    procedureDeclarationList       shift and go to state 67
    procedureDeclaration           shift and go to state 18

state 31

    (20) procedureDeclarationList -> procedureDeclaration ; . procedureDeclarationList
    (20) procedureDeclarationList -> . procedureDeclaration ; procedureDeclarationList
    (21) procedureDeclarationList -> . forwardDeclaration ; procedureDeclarationList
    (22) procedureDeclarationList -> .
    (23) procedureDeclaration -> . PROCEDURE receiver ID createTable optionalFormalParameters ; declarationList insertEntry statementBlock END ID popTable
    (39) forwardDeclaration -> . PROCEDURE ^ receiver ID createTable optionalFormalParameters popTable2

    BEGIN           reduce using rule 22 (procedureDeclarationList -> .)
    END             reduce using rule 22 (procedureDeclarationList -> .)
    PROCEDURE       shift and go to state 19

    forwardDeclaration             shift and go to state 16
    procedureDeclarationList       shift and go to state 68
    procedureDeclaration           shift and go to state 18

state 32

    (27) receiver -> ( . optionalVAR ID : ID )
    (29) optionalVAR -> . VAR
    (30) optionalVAR -> .

    VAR             shift and go to state 70
    ID              reduce using rule 30 (optionalVAR -> .)

    optionalVAR                    shift and go to state 69

state 33

    (23) procedureDeclaration -> PROCEDURE receiver . ID createTable optionalFormalParameters ; declarationList insertEntry statementBlock END ID popTable

    ID              shift and go to state 71


state 34

    (39) forwardDeclaration -> PROCEDURE ^ . receiver ID createTable optionalFormalParameters popTable2
    (27) receiver -> . ( optionalVAR ID : ID )
    (28) receiver -> .

    (               shift and go to state 32
    ID              reduce using rule 28 (receiver -> .)

    receiver                       shift and go to state 72

state 35

    (11) identifierDeclarationList -> VAR variableDeclarationList identifierDeclarationList .

    PROCEDURE       reduce using rule 11 (identifierDeclarationList -> VAR variableDeclarationList identifierDeclarationList .)
    BEGIN           reduce using rule 11 (identifierDeclarationList -> VAR variableDeclarationList identifierDeclarationList .)
    END             reduce using rule 11 (identifierDeclarationList -> VAR variableDeclarationList identifierDeclarationList .)


state 36

    (15) variableDeclarationList -> identifierList : . type ; clearVariables variableDeclarationList
    (108) type -> . qualident
    (109) type -> . ARRAY expression OF type
    (110) type -> . POINTER TO ARRAY expression OF type
    (102) qualident -> . ID
    (103) qualident -> . ID . ID
    (104) qualident -> . INTEGER
    (105) qualident -> . CHAR
    (106) qualident -> . REAL
    (107) qualident -> . BOOLEAN

    ARRAY           shift and go to state 80
    POINTER         shift and go to state 75
    ID              shift and go to state 81
    INTEGER         shift and go to state 78
    CHAR            shift and go to state 76
    REAL            shift and go to state 73
    BOOLEAN         shift and go to state 77

    type                           shift and go to state 79
    qualident                      shift and go to state 74

state 37

    (19) identifierList -> ID , . identifierList
    (18) identifierList -> . ID
    (19) identifierList -> . ID , identifierList

    ID              shift and go to state 22

    identifierList                 shift and go to state 82

state 38

    (10) identifierDeclarationList -> CONST constantDeclarationList identifierDeclarationList .

    PROCEDURE       reduce using rule 10 (identifierDeclarationList -> CONST constantDeclarationList identifierDeclarationList .)
    BEGIN           reduce using rule 10 (identifierDeclarationList -> CONST constantDeclarationList identifierDeclarationList .)
    END             reduce using rule 10 (identifierDeclarationList -> CONST constantDeclarationList identifierDeclarationList .)


state 39

    (13) constantDeclarationList -> ID = . expression ; constantDeclarationList
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 95

state 40

    (5) importedModulesList -> importedModules , importedModulesList .

    ;               reduce using rule 5 (importedModulesList -> importedModules , importedModulesList .)


state 41

    (7) importedModules -> ID ASSIGN ID .

    ,               reduce using rule 7 (importedModules -> ID ASSIGN ID .)
    ;               reduce using rule 7 (importedModules -> ID ASSIGN ID .)


state 42

    (1) module -> MODULE ID ; importList declarationList statementBlock END ID . .
    (2) module -> MODULE ID ; importList declarationList statementBlock END ID .

    .               shift and go to state 96
    $end            reduce using rule 2 (module -> MODULE ID ; importList declarationList statementBlock END ID .)


state 43

    (68) statement -> RETURN .
    (69) statement -> RETURN . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    ;               reduce using rule 68 (statement -> RETURN .)
    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 97

state 44

    (92) builtIn -> CAP . ( expression )

    (               shift and go to state 98


state 45

    (57) statement -> WHILE . boolMarker expression DO boolMarker statementList END
    (116) boolMarker -> .

    -               reduce using rule 116 (boolMarker -> .)
    +               reduce using rule 116 (boolMarker -> .)
    NIL             reduce using rule 116 (boolMarker -> .)
    INTEGERCONSTANT reduce using rule 116 (boolMarker -> .)
    CHARACTERCONSTANT reduce using rule 116 (boolMarker -> .)
    REALCONSTANT    reduce using rule 116 (boolMarker -> .)
    STRINGCONSTANT  reduce using rule 116 (boolMarker -> .)
    BOOLEANCONSTANT reduce using rule 116 (boolMarker -> .)
    ~               reduce using rule 116 (boolMarker -> .)
    (               reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 99

state 46

    (67) statement -> READREAL . ( designator )

    (               shift and go to state 100


state 47

    (86) builtIn -> MAX . ( INTEGER )
    (87) builtIn -> MAX . ( REAL )
    (88) builtIn -> MAX . ( BOOLEAN )
    (89) builtIn -> MAX . ( CHAR )

    (               shift and go to state 101


state 48

    (52) statement -> CASE . expression OF caseList optionalElse END
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 102

state 49

    (73) statement -> DEC . ( designator checkConstant )
    (74) statement -> DEC . ( designator checkConstant , expression )

    (               shift and go to state 103


state 50

    (41) statementBlock -> BEGIN beginquad statementList . boolMarker
    (44) statementList -> statementList . boolMarker statement ;
    (116) boolMarker -> .

    IF              reduce using rule 116 (boolMarker -> .)
    CASE            reduce using rule 116 (boolMarker -> .)
    WHILE           reduce using rule 116 (boolMarker -> .)
    REPEAT          reduce using rule 116 (boolMarker -> .)
    FOR             reduce using rule 116 (boolMarker -> .)
    LOOP            reduce using rule 116 (boolMarker -> .)
    EXIT            reduce using rule 116 (boolMarker -> .)
    READINT         reduce using rule 116 (boolMarker -> .)
    READREAL        reduce using rule 116 (boolMarker -> .)
    RETURN          reduce using rule 116 (boolMarker -> .)
    DEC             reduce using rule 116 (boolMarker -> .)
    INC             reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)
    END             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 104

state 51

    (93) designator -> ID . suffix
    (95) suffix -> . . ID suffix
    (96) suffix -> . [ optionalExpressionList ] suffix
    (97) suffix -> . ^ suffix
    (98) suffix -> . ( optionalExpressionList ) suffix
    (99) suffix -> .

    .               shift and go to state 107
    [               shift and go to state 108
    ^               shift and go to state 109
    (               shift and go to state 106
    ASSIGN          reduce using rule 99 (suffix -> .)
    ;               reduce using rule 99 (suffix -> .)
    OR              reduce using rule 99 (suffix -> .)
    &               reduce using rule 99 (suffix -> .)
    #               reduce using rule 99 (suffix -> .)
    =               reduce using rule 99 (suffix -> .)
    <               reduce using rule 99 (suffix -> .)
    LESSEQUAL       reduce using rule 99 (suffix -> .)
    >               reduce using rule 99 (suffix -> .)
    MOREEQUAL       reduce using rule 99 (suffix -> .)
    +               reduce using rule 99 (suffix -> .)
    -               reduce using rule 99 (suffix -> .)
    *               reduce using rule 99 (suffix -> .)
    /               reduce using rule 99 (suffix -> .)
    DIV             reduce using rule 99 (suffix -> .)
    MOD             reduce using rule 99 (suffix -> .)
    OF              reduce using rule 99 (suffix -> .)
    THEN            reduce using rule 99 (suffix -> .)
    )               reduce using rule 99 (suffix -> .)
    DO              reduce using rule 99 (suffix -> .)
    ,               reduce using rule 99 (suffix -> .)
    ]               reduce using rule 99 (suffix -> .)
    :               reduce using rule 99 (suffix -> .)
    TO              reduce using rule 99 (suffix -> .)
    BY              reduce using rule 99 (suffix -> .)

    suffix                         shift and go to state 105

state 52

    (45) statementList -> statement . ;

    ;               shift and go to state 110


state 53

    (78) builtIn -> SIZE . ( INTEGER )
    (79) builtIn -> SIZE . ( REAL )
    (80) builtIn -> SIZE . ( BOOLEAN )
    (81) builtIn -> SIZE . ( CHAR )

    (               shift and go to state 111


state 54

    (58) statement -> REPEAT . boolMarker statementList UNTIL boolMarker expression
    (116) boolMarker -> .

    IF              reduce using rule 116 (boolMarker -> .)
    CASE            reduce using rule 116 (boolMarker -> .)
    WHILE           reduce using rule 116 (boolMarker -> .)
    REPEAT          reduce using rule 116 (boolMarker -> .)
    FOR             reduce using rule 116 (boolMarker -> .)
    LOOP            reduce using rule 116 (boolMarker -> .)
    EXIT            reduce using rule 116 (boolMarker -> .)
    READINT         reduce using rule 116 (boolMarker -> .)
    READREAL        reduce using rule 116 (boolMarker -> .)
    RETURN          reduce using rule 116 (boolMarker -> .)
    DEC             reduce using rule 116 (boolMarker -> .)
    INC             reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)
    UNTIL           reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 112

state 55

    (59) statement -> FOR . ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END

    ID              shift and go to state 113


state 56

    (66) statement -> READINT . ( designator )

    (               shift and go to state 114


state 57

    (70) statement -> designator .
    (71) statement -> designator . checkConstant ASSIGN expression
    (72) checkConstant -> .

    ;               reduce using rule 70 (statement -> designator .)
    ASSIGN          reduce using rule 72 (checkConstant -> .)

    checkConstant                  shift and go to state 115

state 58

    (94) designator -> builtIn .

    THEN            reduce using rule 94 (designator -> builtIn .)
    OR              reduce using rule 94 (designator -> builtIn .)
    &               reduce using rule 94 (designator -> builtIn .)
    #               reduce using rule 94 (designator -> builtIn .)
    =               reduce using rule 94 (designator -> builtIn .)
    <               reduce using rule 94 (designator -> builtIn .)
    LESSEQUAL       reduce using rule 94 (designator -> builtIn .)
    >               reduce using rule 94 (designator -> builtIn .)
    MOREEQUAL       reduce using rule 94 (designator -> builtIn .)
    +               reduce using rule 94 (designator -> builtIn .)
    -               reduce using rule 94 (designator -> builtIn .)
    *               reduce using rule 94 (designator -> builtIn .)
    /               reduce using rule 94 (designator -> builtIn .)
    DIV             reduce using rule 94 (designator -> builtIn .)
    MOD             reduce using rule 94 (designator -> builtIn .)
    ;               reduce using rule 94 (designator -> builtIn .)
    OF              reduce using rule 94 (designator -> builtIn .)
    )               reduce using rule 94 (designator -> builtIn .)
    DO              reduce using rule 94 (designator -> builtIn .)
    ,               reduce using rule 94 (designator -> builtIn .)
    ]               reduce using rule 94 (designator -> builtIn .)
    :               reduce using rule 94 (designator -> builtIn .)
    TO              reduce using rule 94 (designator -> builtIn .)
    BY              reduce using rule 94 (designator -> builtIn .)
    ASSIGN          reduce using rule 94 (designator -> builtIn .)


state 59

    (77) builtIn -> ABS . ( expression )

    (               shift and go to state 116


state 60

    (47) statement -> IF . expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 117

state 61

    (82) builtIn -> MIN . ( INTEGER )
    (83) builtIn -> MIN . ( REAL )
    (84) builtIn -> MIN . ( BOOLEAN )
    (85) builtIn -> MIN . ( CHAR )

    (               shift and go to state 118


state 62

    (90) builtIn -> CHR . ( expression )

    (               shift and go to state 119


state 63

    (65) statement -> EXIT .

    ;               reduce using rule 65 (statement -> EXIT .)


state 64

    (91) builtIn -> ORD . ( expression )

    (               shift and go to state 120


state 65

    (64) statement -> LOOP . boolMarker statementList END
    (116) boolMarker -> .

    IF              reduce using rule 116 (boolMarker -> .)
    CASE            reduce using rule 116 (boolMarker -> .)
    WHILE           reduce using rule 116 (boolMarker -> .)
    REPEAT          reduce using rule 116 (boolMarker -> .)
    FOR             reduce using rule 116 (boolMarker -> .)
    LOOP            reduce using rule 116 (boolMarker -> .)
    EXIT            reduce using rule 116 (boolMarker -> .)
    READINT         reduce using rule 116 (boolMarker -> .)
    READREAL        reduce using rule 116 (boolMarker -> .)
    RETURN          reduce using rule 116 (boolMarker -> .)
    DEC             reduce using rule 116 (boolMarker -> .)
    INC             reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)
    END             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 121

state 66

    (75) statement -> INC . ( designator checkConstant )
    (76) statement -> INC . ( designator checkConstant , expression )

    (               shift and go to state 122


state 67

    (21) procedureDeclarationList -> forwardDeclaration ; procedureDeclarationList .

    BEGIN           reduce using rule 21 (procedureDeclarationList -> forwardDeclaration ; procedureDeclarationList .)
    END             reduce using rule 21 (procedureDeclarationList -> forwardDeclaration ; procedureDeclarationList .)


state 68

    (20) procedureDeclarationList -> procedureDeclaration ; procedureDeclarationList .

    BEGIN           reduce using rule 20 (procedureDeclarationList -> procedureDeclaration ; procedureDeclarationList .)
    END             reduce using rule 20 (procedureDeclarationList -> procedureDeclaration ; procedureDeclarationList .)


state 69

    (27) receiver -> ( optionalVAR . ID : ID )

    ID              shift and go to state 123


state 70

    (29) optionalVAR -> VAR .

    ID              reduce using rule 29 (optionalVAR -> VAR .)


state 71

    (23) procedureDeclaration -> PROCEDURE receiver ID . createTable optionalFormalParameters ; declarationList insertEntry statementBlock END ID popTable
    (26) createTable -> .

    (               reduce using rule 26 (createTable -> .)
    ;               reduce using rule 26 (createTable -> .)

    createTable                    shift and go to state 124

state 72

    (39) forwardDeclaration -> PROCEDURE ^ receiver . ID createTable optionalFormalParameters popTable2

    ID              shift and go to state 125


state 73

    (106) qualident -> REAL .

    ;               reduce using rule 106 (qualident -> REAL .)
    )               reduce using rule 106 (qualident -> REAL .)


state 74

    (108) type -> qualident .

    ;               reduce using rule 108 (type -> qualident .)
    )               reduce using rule 108 (type -> qualident .)


state 75

    (110) type -> POINTER . TO ARRAY expression OF type

    TO              shift and go to state 126


state 76

    (105) qualident -> CHAR .

    ;               reduce using rule 105 (qualident -> CHAR .)
    )               reduce using rule 105 (qualident -> CHAR .)


state 77

    (107) qualident -> BOOLEAN .

    ;               reduce using rule 107 (qualident -> BOOLEAN .)
    )               reduce using rule 107 (qualident -> BOOLEAN .)


state 78

    (104) qualident -> INTEGER .

    ;               reduce using rule 104 (qualident -> INTEGER .)
    )               reduce using rule 104 (qualident -> INTEGER .)


state 79

    (15) variableDeclarationList -> identifierList : type . ; clearVariables variableDeclarationList

    ;               shift and go to state 127


state 80

    (109) type -> ARRAY . expression OF type
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    expression                     shift and go to state 128
    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89

state 81

    (102) qualident -> ID .
    (103) qualident -> ID . . ID

    ;               reduce using rule 102 (qualident -> ID .)
    )               reduce using rule 102 (qualident -> ID .)
    .               shift and go to state 129


state 82

    (19) identifierList -> ID , identifierList .

    :               reduce using rule 19 (identifierList -> ID , identifierList .)


state 83

    (137) factor -> STRINGCONSTANT .

    OF              reduce using rule 137 (factor -> STRINGCONSTANT .)
    OR              reduce using rule 137 (factor -> STRINGCONSTANT .)
    &               reduce using rule 137 (factor -> STRINGCONSTANT .)
    #               reduce using rule 137 (factor -> STRINGCONSTANT .)
    =               reduce using rule 137 (factor -> STRINGCONSTANT .)
    <               reduce using rule 137 (factor -> STRINGCONSTANT .)
    LESSEQUAL       reduce using rule 137 (factor -> STRINGCONSTANT .)
    >               reduce using rule 137 (factor -> STRINGCONSTANT .)
    MOREEQUAL       reduce using rule 137 (factor -> STRINGCONSTANT .)
    +               reduce using rule 137 (factor -> STRINGCONSTANT .)
    -               reduce using rule 137 (factor -> STRINGCONSTANT .)
    *               reduce using rule 137 (factor -> STRINGCONSTANT .)
    /               reduce using rule 137 (factor -> STRINGCONSTANT .)
    DIV             reduce using rule 137 (factor -> STRINGCONSTANT .)
    MOD             reduce using rule 137 (factor -> STRINGCONSTANT .)
    BY              reduce using rule 137 (factor -> STRINGCONSTANT .)
    DO              reduce using rule 137 (factor -> STRINGCONSTANT .)
    TO              reduce using rule 137 (factor -> STRINGCONSTANT .)
    ,               reduce using rule 137 (factor -> STRINGCONSTANT .)
    )               reduce using rule 137 (factor -> STRINGCONSTANT .)
    ;               reduce using rule 137 (factor -> STRINGCONSTANT .)
    THEN            reduce using rule 137 (factor -> STRINGCONSTANT .)
    ]               reduce using rule 137 (factor -> STRINGCONSTANT .)
    :               reduce using rule 137 (factor -> STRINGCONSTANT .)


state 84

    (134) factor -> INTEGERCONSTANT .

    OF              reduce using rule 134 (factor -> INTEGERCONSTANT .)
    OR              reduce using rule 134 (factor -> INTEGERCONSTANT .)
    &               reduce using rule 134 (factor -> INTEGERCONSTANT .)
    #               reduce using rule 134 (factor -> INTEGERCONSTANT .)
    =               reduce using rule 134 (factor -> INTEGERCONSTANT .)
    <               reduce using rule 134 (factor -> INTEGERCONSTANT .)
    LESSEQUAL       reduce using rule 134 (factor -> INTEGERCONSTANT .)
    >               reduce using rule 134 (factor -> INTEGERCONSTANT .)
    MOREEQUAL       reduce using rule 134 (factor -> INTEGERCONSTANT .)
    +               reduce using rule 134 (factor -> INTEGERCONSTANT .)
    -               reduce using rule 134 (factor -> INTEGERCONSTANT .)
    *               reduce using rule 134 (factor -> INTEGERCONSTANT .)
    /               reduce using rule 134 (factor -> INTEGERCONSTANT .)
    DIV             reduce using rule 134 (factor -> INTEGERCONSTANT .)
    MOD             reduce using rule 134 (factor -> INTEGERCONSTANT .)
    BY              reduce using rule 134 (factor -> INTEGERCONSTANT .)
    DO              reduce using rule 134 (factor -> INTEGERCONSTANT .)
    TO              reduce using rule 134 (factor -> INTEGERCONSTANT .)
    ,               reduce using rule 134 (factor -> INTEGERCONSTANT .)
    )               reduce using rule 134 (factor -> INTEGERCONSTANT .)
    ;               reduce using rule 134 (factor -> INTEGERCONSTANT .)
    THEN            reduce using rule 134 (factor -> INTEGERCONSTANT .)
    ]               reduce using rule 134 (factor -> INTEGERCONSTANT .)
    :               reduce using rule 134 (factor -> INTEGERCONSTANT .)


state 85

    (138) factor -> BOOLEANCONSTANT .

    OF              reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    OR              reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    &               reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    #               reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    =               reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    <               reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    LESSEQUAL       reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    >               reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    MOREEQUAL       reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    +               reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    -               reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    *               reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    /               reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    DIV             reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    MOD             reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    BY              reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    DO              reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    TO              reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    ,               reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    )               reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    ;               reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    THEN            reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    ]               reduce using rule 138 (factor -> BOOLEANCONSTANT .)
    :               reduce using rule 138 (factor -> BOOLEANCONSTANT .)


state 86

    (140) factor -> ( . expression )
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 130

state 87

    (114) expression -> + . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 131

state 88

    (113) expression -> - . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 132

state 89

    (115) expression -> factor .

    :               reduce using rule 115 (expression -> factor .)
    OR              reduce using rule 115 (expression -> factor .)
    &               reduce using rule 115 (expression -> factor .)
    #               reduce using rule 115 (expression -> factor .)
    =               reduce using rule 115 (expression -> factor .)
    <               reduce using rule 115 (expression -> factor .)
    LESSEQUAL       reduce using rule 115 (expression -> factor .)
    >               reduce using rule 115 (expression -> factor .)
    MOREEQUAL       reduce using rule 115 (expression -> factor .)
    +               reduce using rule 115 (expression -> factor .)
    -               reduce using rule 115 (expression -> factor .)
    *               reduce using rule 115 (expression -> factor .)
    /               reduce using rule 115 (expression -> factor .)
    DIV             reduce using rule 115 (expression -> factor .)
    MOD             reduce using rule 115 (expression -> factor .)
    )               reduce using rule 115 (expression -> factor .)
    ;               reduce using rule 115 (expression -> factor .)
    OF              reduce using rule 115 (expression -> factor .)
    THEN            reduce using rule 115 (expression -> factor .)
    DO              reduce using rule 115 (expression -> factor .)
    ,               reduce using rule 115 (expression -> factor .)
    ]               reduce using rule 115 (expression -> factor .)
    TO              reduce using rule 115 (expression -> factor .)
    BY              reduce using rule 115 (expression -> factor .)


state 90

    (136) factor -> REALCONSTANT .

    OF              reduce using rule 136 (factor -> REALCONSTANT .)
    OR              reduce using rule 136 (factor -> REALCONSTANT .)
    &               reduce using rule 136 (factor -> REALCONSTANT .)
    #               reduce using rule 136 (factor -> REALCONSTANT .)
    =               reduce using rule 136 (factor -> REALCONSTANT .)
    <               reduce using rule 136 (factor -> REALCONSTANT .)
    LESSEQUAL       reduce using rule 136 (factor -> REALCONSTANT .)
    >               reduce using rule 136 (factor -> REALCONSTANT .)
    MOREEQUAL       reduce using rule 136 (factor -> REALCONSTANT .)
    +               reduce using rule 136 (factor -> REALCONSTANT .)
    -               reduce using rule 136 (factor -> REALCONSTANT .)
    *               reduce using rule 136 (factor -> REALCONSTANT .)
    /               reduce using rule 136 (factor -> REALCONSTANT .)
    DIV             reduce using rule 136 (factor -> REALCONSTANT .)
    MOD             reduce using rule 136 (factor -> REALCONSTANT .)
    BY              reduce using rule 136 (factor -> REALCONSTANT .)
    DO              reduce using rule 136 (factor -> REALCONSTANT .)
    TO              reduce using rule 136 (factor -> REALCONSTANT .)
    ,               reduce using rule 136 (factor -> REALCONSTANT .)
    )               reduce using rule 136 (factor -> REALCONSTANT .)
    ;               reduce using rule 136 (factor -> REALCONSTANT .)
    THEN            reduce using rule 136 (factor -> REALCONSTANT .)
    ]               reduce using rule 136 (factor -> REALCONSTANT .)
    :               reduce using rule 136 (factor -> REALCONSTANT .)


state 91

    (135) factor -> CHARACTERCONSTANT .

    OF              reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    OR              reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    &               reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    #               reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    =               reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    <               reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    LESSEQUAL       reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    >               reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    MOREEQUAL       reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    +               reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    -               reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    *               reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    /               reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    DIV             reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    MOD             reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    BY              reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    DO              reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    TO              reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    ,               reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    )               reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    ;               reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    THEN            reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    ]               reduce using rule 135 (factor -> CHARACTERCONSTANT .)
    :               reduce using rule 135 (factor -> CHARACTERCONSTANT .)


state 92

    (133) factor -> designator .

    OF              reduce using rule 133 (factor -> designator .)
    OR              reduce using rule 133 (factor -> designator .)
    &               reduce using rule 133 (factor -> designator .)
    #               reduce using rule 133 (factor -> designator .)
    =               reduce using rule 133 (factor -> designator .)
    <               reduce using rule 133 (factor -> designator .)
    LESSEQUAL       reduce using rule 133 (factor -> designator .)
    >               reduce using rule 133 (factor -> designator .)
    MOREEQUAL       reduce using rule 133 (factor -> designator .)
    +               reduce using rule 133 (factor -> designator .)
    -               reduce using rule 133 (factor -> designator .)
    *               reduce using rule 133 (factor -> designator .)
    /               reduce using rule 133 (factor -> designator .)
    DIV             reduce using rule 133 (factor -> designator .)
    MOD             reduce using rule 133 (factor -> designator .)
    BY              reduce using rule 133 (factor -> designator .)
    DO              reduce using rule 133 (factor -> designator .)
    TO              reduce using rule 133 (factor -> designator .)
    ,               reduce using rule 133 (factor -> designator .)
    )               reduce using rule 133 (factor -> designator .)
    ;               reduce using rule 133 (factor -> designator .)
    THEN            reduce using rule 133 (factor -> designator .)
    ]               reduce using rule 133 (factor -> designator .)
    :               reduce using rule 133 (factor -> designator .)


state 93

    (132) factor -> NIL .

    OF              reduce using rule 132 (factor -> NIL .)
    OR              reduce using rule 132 (factor -> NIL .)
    &               reduce using rule 132 (factor -> NIL .)
    #               reduce using rule 132 (factor -> NIL .)
    =               reduce using rule 132 (factor -> NIL .)
    <               reduce using rule 132 (factor -> NIL .)
    LESSEQUAL       reduce using rule 132 (factor -> NIL .)
    >               reduce using rule 132 (factor -> NIL .)
    MOREEQUAL       reduce using rule 132 (factor -> NIL .)
    +               reduce using rule 132 (factor -> NIL .)
    -               reduce using rule 132 (factor -> NIL .)
    *               reduce using rule 132 (factor -> NIL .)
    /               reduce using rule 132 (factor -> NIL .)
    DIV             reduce using rule 132 (factor -> NIL .)
    MOD             reduce using rule 132 (factor -> NIL .)
    BY              reduce using rule 132 (factor -> NIL .)
    DO              reduce using rule 132 (factor -> NIL .)
    TO              reduce using rule 132 (factor -> NIL .)
    ,               reduce using rule 132 (factor -> NIL .)
    )               reduce using rule 132 (factor -> NIL .)
    ;               reduce using rule 132 (factor -> NIL .)
    THEN            reduce using rule 132 (factor -> NIL .)
    ]               reduce using rule 132 (factor -> NIL .)
    :               reduce using rule 132 (factor -> NIL .)


state 94

    (139) factor -> ~ . factor
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    builtIn                        shift and go to state 58
    designator                     shift and go to state 92
    factor                         shift and go to state 133

state 95

    (13) constantDeclarationList -> ID = expression . ; constantDeclarationList
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    ;               shift and go to state 146
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 96

    (1) module -> MODULE ID ; importList declarationList statementBlock END ID . .

    $end            reduce using rule 1 (module -> MODULE ID ; importList declarationList statementBlock END ID . .)


state 97

    (69) statement -> RETURN expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    ;               reduce using rule 69 (statement -> RETURN expression .)
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 98

    (92) builtIn -> CAP ( . expression )
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 149

state 99

    (57) statement -> WHILE boolMarker . expression DO boolMarker statementList END
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 150

state 100

    (67) statement -> READREAL ( . designator )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    builtIn                        shift and go to state 58
    designator                     shift and go to state 151

state 101

    (86) builtIn -> MAX ( . INTEGER )
    (87) builtIn -> MAX ( . REAL )
    (88) builtIn -> MAX ( . BOOLEAN )
    (89) builtIn -> MAX ( . CHAR )

    INTEGER         shift and go to state 155
    REAL            shift and go to state 152
    BOOLEAN         shift and go to state 154
    CHAR            shift and go to state 153


state 102

    (52) statement -> CASE expression . OF caseList optionalElse END
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    OF              shift and go to state 156
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 103

    (73) statement -> DEC ( . designator checkConstant )
    (74) statement -> DEC ( . designator checkConstant , expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    builtIn                        shift and go to state 58
    designator                     shift and go to state 157

state 104

    (41) statementBlock -> BEGIN beginquad statementList boolMarker .
    (44) statementList -> statementList boolMarker . statement ;
    (47) statement -> . IF expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END
    (52) statement -> . CASE expression OF caseList optionalElse END
    (57) statement -> . WHILE boolMarker expression DO boolMarker statementList END
    (58) statement -> . REPEAT boolMarker statementList UNTIL boolMarker expression
    (59) statement -> . FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END
    (64) statement -> . LOOP boolMarker statementList END
    (65) statement -> . EXIT
    (66) statement -> . READINT ( designator )
    (67) statement -> . READREAL ( designator )
    (68) statement -> . RETURN
    (69) statement -> . RETURN expression
    (70) statement -> . designator
    (71) statement -> . designator checkConstant ASSIGN expression
    (73) statement -> . DEC ( designator checkConstant )
    (74) statement -> . DEC ( designator checkConstant , expression )
    (75) statement -> . INC ( designator checkConstant )
    (76) statement -> . INC ( designator checkConstant , expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    END             reduce using rule 41 (statementBlock -> BEGIN beginquad statementList boolMarker .)
    IF              shift and go to state 60
    CASE            shift and go to state 48
    WHILE           shift and go to state 45
    REPEAT          shift and go to state 54
    FOR             shift and go to state 55
    LOOP            shift and go to state 65
    EXIT            shift and go to state 63
    READINT         shift and go to state 56
    READREAL        shift and go to state 46
    RETURN          shift and go to state 43
    DEC             shift and go to state 49
    INC             shift and go to state 66
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 57
    builtIn                        shift and go to state 58
    statement                      shift and go to state 158

state 105

    (93) designator -> ID suffix .

    THEN            reduce using rule 93 (designator -> ID suffix .)
    OR              reduce using rule 93 (designator -> ID suffix .)
    &               reduce using rule 93 (designator -> ID suffix .)
    #               reduce using rule 93 (designator -> ID suffix .)
    =               reduce using rule 93 (designator -> ID suffix .)
    <               reduce using rule 93 (designator -> ID suffix .)
    LESSEQUAL       reduce using rule 93 (designator -> ID suffix .)
    >               reduce using rule 93 (designator -> ID suffix .)
    MOREEQUAL       reduce using rule 93 (designator -> ID suffix .)
    +               reduce using rule 93 (designator -> ID suffix .)
    -               reduce using rule 93 (designator -> ID suffix .)
    *               reduce using rule 93 (designator -> ID suffix .)
    /               reduce using rule 93 (designator -> ID suffix .)
    DIV             reduce using rule 93 (designator -> ID suffix .)
    MOD             reduce using rule 93 (designator -> ID suffix .)
    ;               reduce using rule 93 (designator -> ID suffix .)
    OF              reduce using rule 93 (designator -> ID suffix .)
    )               reduce using rule 93 (designator -> ID suffix .)
    DO              reduce using rule 93 (designator -> ID suffix .)
    ,               reduce using rule 93 (designator -> ID suffix .)
    ]               reduce using rule 93 (designator -> ID suffix .)
    :               reduce using rule 93 (designator -> ID suffix .)
    TO              reduce using rule 93 (designator -> ID suffix .)
    BY              reduce using rule 93 (designator -> ID suffix .)
    ASSIGN          reduce using rule 93 (designator -> ID suffix .)


state 106

    (98) suffix -> ( . optionalExpressionList ) suffix
    (100) optionalExpressionList -> . expressionList
    (101) optionalExpressionList -> .
    (111) expressionList -> . expression , expressionList
    (112) expressionList -> . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    )               reduce using rule 101 (optionalExpressionList -> .)
    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    expressionList                 shift and go to state 160
    factor                         shift and go to state 89
    optionalExpressionList         shift and go to state 159
    expression                     shift and go to state 161

state 107

    (95) suffix -> . . ID suffix

    ID              shift and go to state 162


state 108

    (96) suffix -> [ . optionalExpressionList ] suffix
    (100) optionalExpressionList -> . expressionList
    (101) optionalExpressionList -> .
    (111) expressionList -> . expression , expressionList
    (112) expressionList -> . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    ]               reduce using rule 101 (optionalExpressionList -> .)
    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    expressionList                 shift and go to state 160
    factor                         shift and go to state 89
    optionalExpressionList         shift and go to state 163
    expression                     shift and go to state 161

state 109

    (97) suffix -> ^ . suffix
    (95) suffix -> . . ID suffix
    (96) suffix -> . [ optionalExpressionList ] suffix
    (97) suffix -> . ^ suffix
    (98) suffix -> . ( optionalExpressionList ) suffix
    (99) suffix -> .

    .               shift and go to state 107
    [               shift and go to state 108
    ^               shift and go to state 109
    (               shift and go to state 106
    ASSIGN          reduce using rule 99 (suffix -> .)
    ;               reduce using rule 99 (suffix -> .)
    OR              reduce using rule 99 (suffix -> .)
    &               reduce using rule 99 (suffix -> .)
    #               reduce using rule 99 (suffix -> .)
    =               reduce using rule 99 (suffix -> .)
    <               reduce using rule 99 (suffix -> .)
    LESSEQUAL       reduce using rule 99 (suffix -> .)
    >               reduce using rule 99 (suffix -> .)
    MOREEQUAL       reduce using rule 99 (suffix -> .)
    +               reduce using rule 99 (suffix -> .)
    -               reduce using rule 99 (suffix -> .)
    *               reduce using rule 99 (suffix -> .)
    /               reduce using rule 99 (suffix -> .)
    DIV             reduce using rule 99 (suffix -> .)
    MOD             reduce using rule 99 (suffix -> .)
    OF              reduce using rule 99 (suffix -> .)
    THEN            reduce using rule 99 (suffix -> .)
    )               reduce using rule 99 (suffix -> .)
    DO              reduce using rule 99 (suffix -> .)
    ,               reduce using rule 99 (suffix -> .)
    ]               reduce using rule 99 (suffix -> .)
    :               reduce using rule 99 (suffix -> .)
    TO              reduce using rule 99 (suffix -> .)
    BY              reduce using rule 99 (suffix -> .)

    suffix                         shift and go to state 164

state 110

    (45) statementList -> statement ; .

    ELSIF           reduce using rule 45 (statementList -> statement ; .)
    ELSE            reduce using rule 45 (statementList -> statement ; .)
    END             reduce using rule 45 (statementList -> statement ; .)
    IF              reduce using rule 45 (statementList -> statement ; .)
    CASE            reduce using rule 45 (statementList -> statement ; .)
    WHILE           reduce using rule 45 (statementList -> statement ; .)
    REPEAT          reduce using rule 45 (statementList -> statement ; .)
    FOR             reduce using rule 45 (statementList -> statement ; .)
    LOOP            reduce using rule 45 (statementList -> statement ; .)
    EXIT            reduce using rule 45 (statementList -> statement ; .)
    READINT         reduce using rule 45 (statementList -> statement ; .)
    READREAL        reduce using rule 45 (statementList -> statement ; .)
    RETURN          reduce using rule 45 (statementList -> statement ; .)
    DEC             reduce using rule 45 (statementList -> statement ; .)
    INC             reduce using rule 45 (statementList -> statement ; .)
    ID              reduce using rule 45 (statementList -> statement ; .)
    ABS             reduce using rule 45 (statementList -> statement ; .)
    SIZE            reduce using rule 45 (statementList -> statement ; .)
    MIN             reduce using rule 45 (statementList -> statement ; .)
    MAX             reduce using rule 45 (statementList -> statement ; .)
    CHR             reduce using rule 45 (statementList -> statement ; .)
    ORD             reduce using rule 45 (statementList -> statement ; .)
    CAP             reduce using rule 45 (statementList -> statement ; .)
    UNTIL           reduce using rule 45 (statementList -> statement ; .)
    |               reduce using rule 45 (statementList -> statement ; .)


state 111

    (78) builtIn -> SIZE ( . INTEGER )
    (79) builtIn -> SIZE ( . REAL )
    (80) builtIn -> SIZE ( . BOOLEAN )
    (81) builtIn -> SIZE ( . CHAR )

    INTEGER         shift and go to state 168
    REAL            shift and go to state 165
    BOOLEAN         shift and go to state 167
    CHAR            shift and go to state 166


state 112

    (58) statement -> REPEAT boolMarker . statementList UNTIL boolMarker expression
    (44) statementList -> . statementList boolMarker statement ;
    (45) statementList -> . statement ;
    (46) statementList -> .
    (47) statement -> . IF expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END
    (52) statement -> . CASE expression OF caseList optionalElse END
    (57) statement -> . WHILE boolMarker expression DO boolMarker statementList END
    (58) statement -> . REPEAT boolMarker statementList UNTIL boolMarker expression
    (59) statement -> . FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END
    (64) statement -> . LOOP boolMarker statementList END
    (65) statement -> . EXIT
    (66) statement -> . READINT ( designator )
    (67) statement -> . READREAL ( designator )
    (68) statement -> . RETURN
    (69) statement -> . RETURN expression
    (70) statement -> . designator
    (71) statement -> . designator checkConstant ASSIGN expression
    (73) statement -> . DEC ( designator checkConstant )
    (74) statement -> . DEC ( designator checkConstant , expression )
    (75) statement -> . INC ( designator checkConstant )
    (76) statement -> . INC ( designator checkConstant , expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for READINT resolved as shift
  ! shift/reduce conflict for READREAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ABS resolved as shift
  ! shift/reduce conflict for SIZE resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAX resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
  ! shift/reduce conflict for CAP resolved as shift
    UNTIL           reduce using rule 46 (statementList -> .)
    IF              shift and go to state 60
    CASE            shift and go to state 48
    WHILE           shift and go to state 45
    REPEAT          shift and go to state 54
    FOR             shift and go to state 55
    LOOP            shift and go to state 65
    EXIT            shift and go to state 63
    READINT         shift and go to state 56
    READREAL        shift and go to state 46
    RETURN          shift and go to state 43
    DEC             shift and go to state 49
    INC             shift and go to state 66
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

  ! IF              [ reduce using rule 46 (statementList -> .) ]
  ! CASE            [ reduce using rule 46 (statementList -> .) ]
  ! WHILE           [ reduce using rule 46 (statementList -> .) ]
  ! REPEAT          [ reduce using rule 46 (statementList -> .) ]
  ! FOR             [ reduce using rule 46 (statementList -> .) ]
  ! LOOP            [ reduce using rule 46 (statementList -> .) ]
  ! EXIT            [ reduce using rule 46 (statementList -> .) ]
  ! READINT         [ reduce using rule 46 (statementList -> .) ]
  ! READREAL        [ reduce using rule 46 (statementList -> .) ]
  ! RETURN          [ reduce using rule 46 (statementList -> .) ]
  ! DEC             [ reduce using rule 46 (statementList -> .) ]
  ! INC             [ reduce using rule 46 (statementList -> .) ]
  ! ID              [ reduce using rule 46 (statementList -> .) ]
  ! ABS             [ reduce using rule 46 (statementList -> .) ]
  ! SIZE            [ reduce using rule 46 (statementList -> .) ]
  ! MIN             [ reduce using rule 46 (statementList -> .) ]
  ! MAX             [ reduce using rule 46 (statementList -> .) ]
  ! CHR             [ reduce using rule 46 (statementList -> .) ]
  ! ORD             [ reduce using rule 46 (statementList -> .) ]
  ! CAP             [ reduce using rule 46 (statementList -> .) ]

    designator                     shift and go to state 57
    builtIn                        shift and go to state 58
    statementList                  shift and go to state 169
    statement                      shift and go to state 52

state 113

    (59) statement -> FOR ID . ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END

    ASSIGN          shift and go to state 170


state 114

    (66) statement -> READINT ( . designator )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    builtIn                        shift and go to state 58
    designator                     shift and go to state 171

state 115

    (71) statement -> designator checkConstant . ASSIGN expression

    ASSIGN          shift and go to state 172


state 116

    (77) builtIn -> ABS ( . expression )
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 173

state 117

    (47) statement -> IF expression . THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    THEN            shift and go to state 174
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 118

    (82) builtIn -> MIN ( . INTEGER )
    (83) builtIn -> MIN ( . REAL )
    (84) builtIn -> MIN ( . BOOLEAN )
    (85) builtIn -> MIN ( . CHAR )

    INTEGER         shift and go to state 178
    REAL            shift and go to state 175
    BOOLEAN         shift and go to state 177
    CHAR            shift and go to state 176


state 119

    (90) builtIn -> CHR ( . expression )
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 179

state 120

    (91) builtIn -> ORD ( . expression )
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 180

state 121

    (64) statement -> LOOP boolMarker . statementList END
    (44) statementList -> . statementList boolMarker statement ;
    (45) statementList -> . statement ;
    (46) statementList -> .
    (47) statement -> . IF expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END
    (52) statement -> . CASE expression OF caseList optionalElse END
    (57) statement -> . WHILE boolMarker expression DO boolMarker statementList END
    (58) statement -> . REPEAT boolMarker statementList UNTIL boolMarker expression
    (59) statement -> . FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END
    (64) statement -> . LOOP boolMarker statementList END
    (65) statement -> . EXIT
    (66) statement -> . READINT ( designator )
    (67) statement -> . READREAL ( designator )
    (68) statement -> . RETURN
    (69) statement -> . RETURN expression
    (70) statement -> . designator
    (71) statement -> . designator checkConstant ASSIGN expression
    (73) statement -> . DEC ( designator checkConstant )
    (74) statement -> . DEC ( designator checkConstant , expression )
    (75) statement -> . INC ( designator checkConstant )
    (76) statement -> . INC ( designator checkConstant , expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for READINT resolved as shift
  ! shift/reduce conflict for READREAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ABS resolved as shift
  ! shift/reduce conflict for SIZE resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAX resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
  ! shift/reduce conflict for CAP resolved as shift
    END             reduce using rule 46 (statementList -> .)
    IF              shift and go to state 60
    CASE            shift and go to state 48
    WHILE           shift and go to state 45
    REPEAT          shift and go to state 54
    FOR             shift and go to state 55
    LOOP            shift and go to state 65
    EXIT            shift and go to state 63
    READINT         shift and go to state 56
    READREAL        shift and go to state 46
    RETURN          shift and go to state 43
    DEC             shift and go to state 49
    INC             shift and go to state 66
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

  ! IF              [ reduce using rule 46 (statementList -> .) ]
  ! CASE            [ reduce using rule 46 (statementList -> .) ]
  ! WHILE           [ reduce using rule 46 (statementList -> .) ]
  ! REPEAT          [ reduce using rule 46 (statementList -> .) ]
  ! FOR             [ reduce using rule 46 (statementList -> .) ]
  ! LOOP            [ reduce using rule 46 (statementList -> .) ]
  ! EXIT            [ reduce using rule 46 (statementList -> .) ]
  ! READINT         [ reduce using rule 46 (statementList -> .) ]
  ! READREAL        [ reduce using rule 46 (statementList -> .) ]
  ! RETURN          [ reduce using rule 46 (statementList -> .) ]
  ! DEC             [ reduce using rule 46 (statementList -> .) ]
  ! INC             [ reduce using rule 46 (statementList -> .) ]
  ! ID              [ reduce using rule 46 (statementList -> .) ]
  ! ABS             [ reduce using rule 46 (statementList -> .) ]
  ! SIZE            [ reduce using rule 46 (statementList -> .) ]
  ! MIN             [ reduce using rule 46 (statementList -> .) ]
  ! MAX             [ reduce using rule 46 (statementList -> .) ]
  ! CHR             [ reduce using rule 46 (statementList -> .) ]
  ! ORD             [ reduce using rule 46 (statementList -> .) ]
  ! CAP             [ reduce using rule 46 (statementList -> .) ]

    designator                     shift and go to state 57
    builtIn                        shift and go to state 58
    statementList                  shift and go to state 181
    statement                      shift and go to state 52

state 122

    (75) statement -> INC ( . designator checkConstant )
    (76) statement -> INC ( . designator checkConstant , expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    builtIn                        shift and go to state 58
    designator                     shift and go to state 182

state 123

    (27) receiver -> ( optionalVAR ID . : ID )

    :               shift and go to state 183


state 124

    (23) procedureDeclaration -> PROCEDURE receiver ID createTable . optionalFormalParameters ; declarationList insertEntry statementBlock END ID popTable
    (31) optionalFormalParameters -> . ( optionalFormalParameterList ) : qualident
    (32) optionalFormalParameters -> . ( optionalFormalParameterList )
    (33) optionalFormalParameters -> .

    (               shift and go to state 184
    ;               reduce using rule 33 (optionalFormalParameters -> .)

    optionalFormalParameters       shift and go to state 185

state 125

    (39) forwardDeclaration -> PROCEDURE ^ receiver ID . createTable optionalFormalParameters popTable2
    (26) createTable -> .

    (               reduce using rule 26 (createTable -> .)
    ;               reduce using rule 26 (createTable -> .)

    createTable                    shift and go to state 186

state 126

    (110) type -> POINTER TO . ARRAY expression OF type

    ARRAY           shift and go to state 187


state 127

    (15) variableDeclarationList -> identifierList : type ; . clearVariables variableDeclarationList
    (17) clearVariables -> .

    ID              reduce using rule 17 (clearVariables -> .)
    CONST           reduce using rule 17 (clearVariables -> .)
    VAR             reduce using rule 17 (clearVariables -> .)
    PROCEDURE       reduce using rule 17 (clearVariables -> .)
    BEGIN           reduce using rule 17 (clearVariables -> .)
    END             reduce using rule 17 (clearVariables -> .)

    clearVariables                 shift and go to state 188

state 128

    (109) type -> ARRAY expression . OF type
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    OF              shift and go to state 189
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 129

    (103) qualident -> ID . . ID

    ID              shift and go to state 190


state 130

    (140) factor -> ( expression . )
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    )               shift and go to state 191
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 131

    (114) expression -> + expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               reduce using rule 114 (expression -> + expression .)
    OR              reduce using rule 114 (expression -> + expression .)
    &               reduce using rule 114 (expression -> + expression .)
    #               reduce using rule 114 (expression -> + expression .)
    =               reduce using rule 114 (expression -> + expression .)
    <               reduce using rule 114 (expression -> + expression .)
    LESSEQUAL       reduce using rule 114 (expression -> + expression .)
    >               reduce using rule 114 (expression -> + expression .)
    MOREEQUAL       reduce using rule 114 (expression -> + expression .)
    +               reduce using rule 114 (expression -> + expression .)
    -               reduce using rule 114 (expression -> + expression .)
    *               reduce using rule 114 (expression -> + expression .)
    /               reduce using rule 114 (expression -> + expression .)
    DIV             reduce using rule 114 (expression -> + expression .)
    MOD             reduce using rule 114 (expression -> + expression .)
    )               reduce using rule 114 (expression -> + expression .)
    ;               reduce using rule 114 (expression -> + expression .)
    OF              reduce using rule 114 (expression -> + expression .)
    THEN            reduce using rule 114 (expression -> + expression .)
    DO              reduce using rule 114 (expression -> + expression .)
    ,               reduce using rule 114 (expression -> + expression .)
    ]               reduce using rule 114 (expression -> + expression .)
    TO              reduce using rule 114 (expression -> + expression .)
    BY              reduce using rule 114 (expression -> + expression .)

  ! OR              [ shift and go to state 143 ]
  ! &               [ shift and go to state 136 ]
  ! #               [ shift and go to state 135 ]
  ! =               [ shift and go to state 138 ]
  ! <               [ shift and go to state 137 ]
  ! LESSEQUAL       [ shift and go to state 145 ]
  ! >               [ shift and go to state 148 ]
  ! MOREEQUAL       [ shift and go to state 134 ]
  ! +               [ shift and go to state 139 ]
  ! -               [ shift and go to state 141 ]
  ! *               [ shift and go to state 140 ]
  ! /               [ shift and go to state 142 ]
  ! DIV             [ shift and go to state 147 ]
  ! MOD             [ shift and go to state 144 ]


state 132

    (113) expression -> - expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               reduce using rule 113 (expression -> - expression .)
    OR              reduce using rule 113 (expression -> - expression .)
    &               reduce using rule 113 (expression -> - expression .)
    #               reduce using rule 113 (expression -> - expression .)
    =               reduce using rule 113 (expression -> - expression .)
    <               reduce using rule 113 (expression -> - expression .)
    LESSEQUAL       reduce using rule 113 (expression -> - expression .)
    >               reduce using rule 113 (expression -> - expression .)
    MOREEQUAL       reduce using rule 113 (expression -> - expression .)
    +               reduce using rule 113 (expression -> - expression .)
    -               reduce using rule 113 (expression -> - expression .)
    *               reduce using rule 113 (expression -> - expression .)
    /               reduce using rule 113 (expression -> - expression .)
    DIV             reduce using rule 113 (expression -> - expression .)
    MOD             reduce using rule 113 (expression -> - expression .)
    )               reduce using rule 113 (expression -> - expression .)
    ;               reduce using rule 113 (expression -> - expression .)
    OF              reduce using rule 113 (expression -> - expression .)
    THEN            reduce using rule 113 (expression -> - expression .)
    DO              reduce using rule 113 (expression -> - expression .)
    ,               reduce using rule 113 (expression -> - expression .)
    ]               reduce using rule 113 (expression -> - expression .)
    TO              reduce using rule 113 (expression -> - expression .)
    BY              reduce using rule 113 (expression -> - expression .)

  ! OR              [ shift and go to state 143 ]
  ! &               [ shift and go to state 136 ]
  ! #               [ shift and go to state 135 ]
  ! =               [ shift and go to state 138 ]
  ! <               [ shift and go to state 137 ]
  ! LESSEQUAL       [ shift and go to state 145 ]
  ! >               [ shift and go to state 148 ]
  ! MOREEQUAL       [ shift and go to state 134 ]
  ! +               [ shift and go to state 139 ]
  ! -               [ shift and go to state 141 ]
  ! *               [ shift and go to state 140 ]
  ! /               [ shift and go to state 142 ]
  ! DIV             [ shift and go to state 147 ]
  ! MOD             [ shift and go to state 144 ]


state 133

    (139) factor -> ~ factor .

    OF              reduce using rule 139 (factor -> ~ factor .)
    OR              reduce using rule 139 (factor -> ~ factor .)
    &               reduce using rule 139 (factor -> ~ factor .)
    #               reduce using rule 139 (factor -> ~ factor .)
    =               reduce using rule 139 (factor -> ~ factor .)
    <               reduce using rule 139 (factor -> ~ factor .)
    LESSEQUAL       reduce using rule 139 (factor -> ~ factor .)
    >               reduce using rule 139 (factor -> ~ factor .)
    MOREEQUAL       reduce using rule 139 (factor -> ~ factor .)
    +               reduce using rule 139 (factor -> ~ factor .)
    -               reduce using rule 139 (factor -> ~ factor .)
    *               reduce using rule 139 (factor -> ~ factor .)
    /               reduce using rule 139 (factor -> ~ factor .)
    DIV             reduce using rule 139 (factor -> ~ factor .)
    MOD             reduce using rule 139 (factor -> ~ factor .)
    BY              reduce using rule 139 (factor -> ~ factor .)
    DO              reduce using rule 139 (factor -> ~ factor .)
    TO              reduce using rule 139 (factor -> ~ factor .)
    ,               reduce using rule 139 (factor -> ~ factor .)
    )               reduce using rule 139 (factor -> ~ factor .)
    ;               reduce using rule 139 (factor -> ~ factor .)
    THEN            reduce using rule 139 (factor -> ~ factor .)
    ]               reduce using rule 139 (factor -> ~ factor .)
    :               reduce using rule 139 (factor -> ~ factor .)


state 134

    (125) expression -> expression MOREEQUAL . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 192

state 135

    (120) expression -> expression # . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 193

state 136

    (119) expression -> expression & . boolMarker expression
    (116) boolMarker -> .

    -               reduce using rule 116 (boolMarker -> .)
    +               reduce using rule 116 (boolMarker -> .)
    NIL             reduce using rule 116 (boolMarker -> .)
    INTEGERCONSTANT reduce using rule 116 (boolMarker -> .)
    CHARACTERCONSTANT reduce using rule 116 (boolMarker -> .)
    REALCONSTANT    reduce using rule 116 (boolMarker -> .)
    STRINGCONSTANT  reduce using rule 116 (boolMarker -> .)
    BOOLEANCONSTANT reduce using rule 116 (boolMarker -> .)
    ~               reduce using rule 116 (boolMarker -> .)
    (               reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 194

state 137

    (122) expression -> expression < . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 195

state 138

    (121) expression -> expression = . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 196

state 139

    (126) expression -> expression + . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 197

state 140

    (128) expression -> expression * . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 198

state 141

    (127) expression -> expression - . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 199

state 142

    (129) expression -> expression / . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 200

state 143

    (118) expression -> expression OR . boolMarker expression
    (116) boolMarker -> .

    -               reduce using rule 116 (boolMarker -> .)
    +               reduce using rule 116 (boolMarker -> .)
    NIL             reduce using rule 116 (boolMarker -> .)
    INTEGERCONSTANT reduce using rule 116 (boolMarker -> .)
    CHARACTERCONSTANT reduce using rule 116 (boolMarker -> .)
    REALCONSTANT    reduce using rule 116 (boolMarker -> .)
    STRINGCONSTANT  reduce using rule 116 (boolMarker -> .)
    BOOLEANCONSTANT reduce using rule 116 (boolMarker -> .)
    ~               reduce using rule 116 (boolMarker -> .)
    (               reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 201

state 144

    (131) expression -> expression MOD . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 202

state 145

    (123) expression -> expression LESSEQUAL . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 203

state 146

    (13) constantDeclarationList -> ID = expression ; . constantDeclarationList
    (13) constantDeclarationList -> . ID = expression ; constantDeclarationList
    (14) constantDeclarationList -> .

    ID              shift and go to state 24
    CONST           reduce using rule 14 (constantDeclarationList -> .)
    VAR             reduce using rule 14 (constantDeclarationList -> .)
    PROCEDURE       reduce using rule 14 (constantDeclarationList -> .)
    BEGIN           reduce using rule 14 (constantDeclarationList -> .)
    END             reduce using rule 14 (constantDeclarationList -> .)

    constantDeclarationList        shift and go to state 204

state 147

    (130) expression -> expression DIV . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 205

state 148

    (124) expression -> expression > . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 206

state 149

    (92) builtIn -> CAP ( expression . )
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    )               shift and go to state 207
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 150

    (57) statement -> WHILE boolMarker expression . DO boolMarker statementList END
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    DO              shift and go to state 208
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 151

    (67) statement -> READREAL ( designator . )

    )               shift and go to state 209


state 152

    (87) builtIn -> MAX ( REAL . )

    )               shift and go to state 210


state 153

    (89) builtIn -> MAX ( CHAR . )

    )               shift and go to state 211


state 154

    (88) builtIn -> MAX ( BOOLEAN . )

    )               shift and go to state 212


state 155

    (86) builtIn -> MAX ( INTEGER . )

    )               shift and go to state 213


state 156

    (52) statement -> CASE expression OF . caseList optionalElse END
    (53) caseList -> . case | caseList
    (54) caseList -> . case
    (55) case -> . expression : statementList
    (56) case -> .
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    |               reduce using rule 56 (case -> .)
    ELSE            reduce using rule 56 (case -> .)
    END             reduce using rule 56 (case -> .)
    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    case                           shift and go to state 215
    caseList                       shift and go to state 214
    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 216

state 157

    (73) statement -> DEC ( designator . checkConstant )
    (74) statement -> DEC ( designator . checkConstant , expression )
    (72) checkConstant -> .

    )               reduce using rule 72 (checkConstant -> .)
    ,               reduce using rule 72 (checkConstant -> .)

    checkConstant                  shift and go to state 217

state 158

    (44) statementList -> statementList boolMarker statement . ;

    ;               shift and go to state 218


state 159

    (98) suffix -> ( optionalExpressionList . ) suffix

    )               shift and go to state 219


state 160

    (100) optionalExpressionList -> expressionList .

    ]               reduce using rule 100 (optionalExpressionList -> expressionList .)
    )               reduce using rule 100 (optionalExpressionList -> expressionList .)


state 161

    (111) expressionList -> expression . , expressionList
    (112) expressionList -> expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    ,               shift and go to state 220
    )               reduce using rule 112 (expressionList -> expression .)
    ]               reduce using rule 112 (expressionList -> expression .)
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 162

    (95) suffix -> . ID . suffix
    (95) suffix -> . . ID suffix
    (96) suffix -> . [ optionalExpressionList ] suffix
    (97) suffix -> . ^ suffix
    (98) suffix -> . ( optionalExpressionList ) suffix
    (99) suffix -> .

    .               shift and go to state 107
    [               shift and go to state 108
    ^               shift and go to state 109
    (               shift and go to state 106
    ASSIGN          reduce using rule 99 (suffix -> .)
    ;               reduce using rule 99 (suffix -> .)
    OR              reduce using rule 99 (suffix -> .)
    &               reduce using rule 99 (suffix -> .)
    #               reduce using rule 99 (suffix -> .)
    =               reduce using rule 99 (suffix -> .)
    <               reduce using rule 99 (suffix -> .)
    LESSEQUAL       reduce using rule 99 (suffix -> .)
    >               reduce using rule 99 (suffix -> .)
    MOREEQUAL       reduce using rule 99 (suffix -> .)
    +               reduce using rule 99 (suffix -> .)
    -               reduce using rule 99 (suffix -> .)
    *               reduce using rule 99 (suffix -> .)
    /               reduce using rule 99 (suffix -> .)
    DIV             reduce using rule 99 (suffix -> .)
    MOD             reduce using rule 99 (suffix -> .)
    OF              reduce using rule 99 (suffix -> .)
    THEN            reduce using rule 99 (suffix -> .)
    )               reduce using rule 99 (suffix -> .)
    DO              reduce using rule 99 (suffix -> .)
    ,               reduce using rule 99 (suffix -> .)
    ]               reduce using rule 99 (suffix -> .)
    :               reduce using rule 99 (suffix -> .)
    TO              reduce using rule 99 (suffix -> .)
    BY              reduce using rule 99 (suffix -> .)

    suffix                         shift and go to state 221

state 163

    (96) suffix -> [ optionalExpressionList . ] suffix

    ]               shift and go to state 222


state 164

    (97) suffix -> ^ suffix .

    ASSIGN          reduce using rule 97 (suffix -> ^ suffix .)
    ;               reduce using rule 97 (suffix -> ^ suffix .)
    OR              reduce using rule 97 (suffix -> ^ suffix .)
    &               reduce using rule 97 (suffix -> ^ suffix .)
    #               reduce using rule 97 (suffix -> ^ suffix .)
    =               reduce using rule 97 (suffix -> ^ suffix .)
    <               reduce using rule 97 (suffix -> ^ suffix .)
    LESSEQUAL       reduce using rule 97 (suffix -> ^ suffix .)
    >               reduce using rule 97 (suffix -> ^ suffix .)
    MOREEQUAL       reduce using rule 97 (suffix -> ^ suffix .)
    +               reduce using rule 97 (suffix -> ^ suffix .)
    -               reduce using rule 97 (suffix -> ^ suffix .)
    *               reduce using rule 97 (suffix -> ^ suffix .)
    /               reduce using rule 97 (suffix -> ^ suffix .)
    DIV             reduce using rule 97 (suffix -> ^ suffix .)
    MOD             reduce using rule 97 (suffix -> ^ suffix .)
    OF              reduce using rule 97 (suffix -> ^ suffix .)
    THEN            reduce using rule 97 (suffix -> ^ suffix .)
    )               reduce using rule 97 (suffix -> ^ suffix .)
    DO              reduce using rule 97 (suffix -> ^ suffix .)
    ,               reduce using rule 97 (suffix -> ^ suffix .)
    ]               reduce using rule 97 (suffix -> ^ suffix .)
    :               reduce using rule 97 (suffix -> ^ suffix .)
    TO              reduce using rule 97 (suffix -> ^ suffix .)
    BY              reduce using rule 97 (suffix -> ^ suffix .)


state 165

    (79) builtIn -> SIZE ( REAL . )

    )               shift and go to state 223


state 166

    (81) builtIn -> SIZE ( CHAR . )

    )               shift and go to state 224


state 167

    (80) builtIn -> SIZE ( BOOLEAN . )

    )               shift and go to state 225


state 168

    (78) builtIn -> SIZE ( INTEGER . )

    )               shift and go to state 226


state 169

    (58) statement -> REPEAT boolMarker statementList . UNTIL boolMarker expression
    (44) statementList -> statementList . boolMarker statement ;
    (116) boolMarker -> .

    UNTIL           shift and go to state 228
    IF              reduce using rule 116 (boolMarker -> .)
    CASE            reduce using rule 116 (boolMarker -> .)
    WHILE           reduce using rule 116 (boolMarker -> .)
    REPEAT          reduce using rule 116 (boolMarker -> .)
    FOR             reduce using rule 116 (boolMarker -> .)
    LOOP            reduce using rule 116 (boolMarker -> .)
    EXIT            reduce using rule 116 (boolMarker -> .)
    READINT         reduce using rule 116 (boolMarker -> .)
    READREAL        reduce using rule 116 (boolMarker -> .)
    RETURN          reduce using rule 116 (boolMarker -> .)
    DEC             reduce using rule 116 (boolMarker -> .)
    INC             reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 227

state 170

    (59) statement -> FOR ID ASSIGN . expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 229

state 171

    (66) statement -> READINT ( designator . )

    )               shift and go to state 230


state 172

    (71) statement -> designator checkConstant ASSIGN . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 231

state 173

    (77) builtIn -> ABS ( expression . )
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    )               shift and go to state 232
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 174

    (47) statement -> IF expression THEN . boolMarker statementList nMarker boolMarker elsifList optionalElse END
    (116) boolMarker -> .

    IF              reduce using rule 116 (boolMarker -> .)
    CASE            reduce using rule 116 (boolMarker -> .)
    WHILE           reduce using rule 116 (boolMarker -> .)
    REPEAT          reduce using rule 116 (boolMarker -> .)
    FOR             reduce using rule 116 (boolMarker -> .)
    LOOP            reduce using rule 116 (boolMarker -> .)
    EXIT            reduce using rule 116 (boolMarker -> .)
    READINT         reduce using rule 116 (boolMarker -> .)
    READREAL        reduce using rule 116 (boolMarker -> .)
    RETURN          reduce using rule 116 (boolMarker -> .)
    DEC             reduce using rule 116 (boolMarker -> .)
    INC             reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)
    ELSIF           reduce using rule 116 (boolMarker -> .)
    ELSE            reduce using rule 116 (boolMarker -> .)
    END             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 233

state 175

    (83) builtIn -> MIN ( REAL . )

    )               shift and go to state 234


state 176

    (85) builtIn -> MIN ( CHAR . )

    )               shift and go to state 235


state 177

    (84) builtIn -> MIN ( BOOLEAN . )

    )               shift and go to state 236


state 178

    (82) builtIn -> MIN ( INTEGER . )

    )               shift and go to state 237


state 179

    (90) builtIn -> CHR ( expression . )
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    )               shift and go to state 238
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 180

    (91) builtIn -> ORD ( expression . )
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    )               shift and go to state 239
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 181

    (64) statement -> LOOP boolMarker statementList . END
    (44) statementList -> statementList . boolMarker statement ;
    (116) boolMarker -> .

    END             shift and go to state 240
    IF              reduce using rule 116 (boolMarker -> .)
    CASE            reduce using rule 116 (boolMarker -> .)
    WHILE           reduce using rule 116 (boolMarker -> .)
    REPEAT          reduce using rule 116 (boolMarker -> .)
    FOR             reduce using rule 116 (boolMarker -> .)
    LOOP            reduce using rule 116 (boolMarker -> .)
    EXIT            reduce using rule 116 (boolMarker -> .)
    READINT         reduce using rule 116 (boolMarker -> .)
    READREAL        reduce using rule 116 (boolMarker -> .)
    RETURN          reduce using rule 116 (boolMarker -> .)
    DEC             reduce using rule 116 (boolMarker -> .)
    INC             reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 227

state 182

    (75) statement -> INC ( designator . checkConstant )
    (76) statement -> INC ( designator . checkConstant , expression )
    (72) checkConstant -> .

    )               reduce using rule 72 (checkConstant -> .)
    ,               reduce using rule 72 (checkConstant -> .)

    checkConstant                  shift and go to state 241

state 183

    (27) receiver -> ( optionalVAR ID : . ID )

    ID              shift and go to state 242


state 184

    (31) optionalFormalParameters -> ( . optionalFormalParameterList ) : qualident
    (32) optionalFormalParameters -> ( . optionalFormalParameterList )
    (34) optionalFormalParameterList -> . formalParameterList
    (35) optionalFormalParameterList -> .
    (36) formalParameterList -> . formalParameter ; formalParameterList
    (37) formalParameterList -> . formalParameter
    (38) formalParameter -> . optionalVAR identifierList : type
    (29) optionalVAR -> . VAR
    (30) optionalVAR -> .

    )               reduce using rule 35 (optionalFormalParameterList -> .)
    VAR             shift and go to state 70
    ID              reduce using rule 30 (optionalVAR -> .)

    optionalVAR                    shift and go to state 243
    formalParameter                shift and go to state 244
    formalParameterList            shift and go to state 245
    optionalFormalParameterList    shift and go to state 246

state 185

    (23) procedureDeclaration -> PROCEDURE receiver ID createTable optionalFormalParameters . ; declarationList insertEntry statementBlock END ID popTable

    ;               shift and go to state 247


state 186

    (39) forwardDeclaration -> PROCEDURE ^ receiver ID createTable . optionalFormalParameters popTable2
    (31) optionalFormalParameters -> . ( optionalFormalParameterList ) : qualident
    (32) optionalFormalParameters -> . ( optionalFormalParameterList )
    (33) optionalFormalParameters -> .

    (               shift and go to state 184
    ;               reduce using rule 33 (optionalFormalParameters -> .)

    optionalFormalParameters       shift and go to state 248

state 187

    (110) type -> POINTER TO ARRAY . expression OF type
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    expression                     shift and go to state 249
    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89

state 188

    (15) variableDeclarationList -> identifierList : type ; clearVariables . variableDeclarationList
    (15) variableDeclarationList -> . identifierList : type ; clearVariables variableDeclarationList
    (16) variableDeclarationList -> .
    (18) identifierList -> . ID
    (19) identifierList -> . ID , identifierList

    CONST           reduce using rule 16 (variableDeclarationList -> .)
    VAR             reduce using rule 16 (variableDeclarationList -> .)
    PROCEDURE       reduce using rule 16 (variableDeclarationList -> .)
    BEGIN           reduce using rule 16 (variableDeclarationList -> .)
    END             reduce using rule 16 (variableDeclarationList -> .)
    ID              shift and go to state 22

    variableDeclarationList        shift and go to state 250
    identifierList                 shift and go to state 21

state 189

    (109) type -> ARRAY expression OF . type
    (108) type -> . qualident
    (109) type -> . ARRAY expression OF type
    (110) type -> . POINTER TO ARRAY expression OF type
    (102) qualident -> . ID
    (103) qualident -> . ID . ID
    (104) qualident -> . INTEGER
    (105) qualident -> . CHAR
    (106) qualident -> . REAL
    (107) qualident -> . BOOLEAN

    ARRAY           shift and go to state 80
    POINTER         shift and go to state 75
    ID              shift and go to state 81
    INTEGER         shift and go to state 78
    CHAR            shift and go to state 76
    REAL            shift and go to state 73
    BOOLEAN         shift and go to state 77

    type                           shift and go to state 251
    qualident                      shift and go to state 74

state 190

    (103) qualident -> ID . ID .

    ;               reduce using rule 103 (qualident -> ID . ID .)
    )               reduce using rule 103 (qualident -> ID . ID .)


state 191

    (140) factor -> ( expression ) .

    OF              reduce using rule 140 (factor -> ( expression ) .)
    OR              reduce using rule 140 (factor -> ( expression ) .)
    &               reduce using rule 140 (factor -> ( expression ) .)
    #               reduce using rule 140 (factor -> ( expression ) .)
    =               reduce using rule 140 (factor -> ( expression ) .)
    <               reduce using rule 140 (factor -> ( expression ) .)
    LESSEQUAL       reduce using rule 140 (factor -> ( expression ) .)
    >               reduce using rule 140 (factor -> ( expression ) .)
    MOREEQUAL       reduce using rule 140 (factor -> ( expression ) .)
    +               reduce using rule 140 (factor -> ( expression ) .)
    -               reduce using rule 140 (factor -> ( expression ) .)
    *               reduce using rule 140 (factor -> ( expression ) .)
    /               reduce using rule 140 (factor -> ( expression ) .)
    DIV             reduce using rule 140 (factor -> ( expression ) .)
    MOD             reduce using rule 140 (factor -> ( expression ) .)
    BY              reduce using rule 140 (factor -> ( expression ) .)
    DO              reduce using rule 140 (factor -> ( expression ) .)
    TO              reduce using rule 140 (factor -> ( expression ) .)
    ,               reduce using rule 140 (factor -> ( expression ) .)
    )               reduce using rule 140 (factor -> ( expression ) .)
    ;               reduce using rule 140 (factor -> ( expression ) .)
    THEN            reduce using rule 140 (factor -> ( expression ) .)
    ]               reduce using rule 140 (factor -> ( expression ) .)
    :               reduce using rule 140 (factor -> ( expression ) .)


state 192

    (125) expression -> expression MOREEQUAL expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    OR              reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    &               reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    #               reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    =               reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    <               reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    LESSEQUAL       reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    >               reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    MOREEQUAL       reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    )               reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    ;               reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    OF              reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    THEN            reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    DO              reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    ,               reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    ]               reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    TO              reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    BY              reduce using rule 125 (expression -> expression MOREEQUAL expression .)
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144

  ! +               [ reduce using rule 125 (expression -> expression MOREEQUAL expression .) ]
  ! -               [ reduce using rule 125 (expression -> expression MOREEQUAL expression .) ]
  ! *               [ reduce using rule 125 (expression -> expression MOREEQUAL expression .) ]
  ! /               [ reduce using rule 125 (expression -> expression MOREEQUAL expression .) ]
  ! DIV             [ reduce using rule 125 (expression -> expression MOREEQUAL expression .) ]
  ! MOD             [ reduce using rule 125 (expression -> expression MOREEQUAL expression .) ]
  ! OR              [ shift and go to state 143 ]
  ! &               [ shift and go to state 136 ]
  ! #               [ shift and go to state 135 ]
  ! =               [ shift and go to state 138 ]
  ! <               [ shift and go to state 137 ]
  ! LESSEQUAL       [ shift and go to state 145 ]
  ! >               [ shift and go to state 148 ]
  ! MOREEQUAL       [ shift and go to state 134 ]


state 193

    (120) expression -> expression # expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               reduce using rule 120 (expression -> expression # expression .)
    #               reduce using rule 120 (expression -> expression # expression .)
    =               reduce using rule 120 (expression -> expression # expression .)
    )               reduce using rule 120 (expression -> expression # expression .)
    ;               reduce using rule 120 (expression -> expression # expression .)
    OF              reduce using rule 120 (expression -> expression # expression .)
    THEN            reduce using rule 120 (expression -> expression # expression .)
    DO              reduce using rule 120 (expression -> expression # expression .)
    ,               reduce using rule 120 (expression -> expression # expression .)
    ]               reduce using rule 120 (expression -> expression # expression .)
    TO              reduce using rule 120 (expression -> expression # expression .)
    BY              reduce using rule 120 (expression -> expression # expression .)
    OR              shift and go to state 143
    &               shift and go to state 136
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144

  ! OR              [ reduce using rule 120 (expression -> expression # expression .) ]
  ! &               [ reduce using rule 120 (expression -> expression # expression .) ]
  ! <               [ reduce using rule 120 (expression -> expression # expression .) ]
  ! LESSEQUAL       [ reduce using rule 120 (expression -> expression # expression .) ]
  ! >               [ reduce using rule 120 (expression -> expression # expression .) ]
  ! MOREEQUAL       [ reduce using rule 120 (expression -> expression # expression .) ]
  ! +               [ reduce using rule 120 (expression -> expression # expression .) ]
  ! -               [ reduce using rule 120 (expression -> expression # expression .) ]
  ! *               [ reduce using rule 120 (expression -> expression # expression .) ]
  ! /               [ reduce using rule 120 (expression -> expression # expression .) ]
  ! DIV             [ reduce using rule 120 (expression -> expression # expression .) ]
  ! MOD             [ reduce using rule 120 (expression -> expression # expression .) ]
  ! #               [ shift and go to state 135 ]
  ! =               [ shift and go to state 138 ]


state 194

    (119) expression -> expression & boolMarker . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 252

state 195

    (122) expression -> expression < expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               reduce using rule 122 (expression -> expression < expression .)
    OR              reduce using rule 122 (expression -> expression < expression .)
    &               reduce using rule 122 (expression -> expression < expression .)
    #               reduce using rule 122 (expression -> expression < expression .)
    =               reduce using rule 122 (expression -> expression < expression .)
    <               reduce using rule 122 (expression -> expression < expression .)
    LESSEQUAL       reduce using rule 122 (expression -> expression < expression .)
    >               reduce using rule 122 (expression -> expression < expression .)
    MOREEQUAL       reduce using rule 122 (expression -> expression < expression .)
    )               reduce using rule 122 (expression -> expression < expression .)
    ;               reduce using rule 122 (expression -> expression < expression .)
    OF              reduce using rule 122 (expression -> expression < expression .)
    THEN            reduce using rule 122 (expression -> expression < expression .)
    DO              reduce using rule 122 (expression -> expression < expression .)
    ,               reduce using rule 122 (expression -> expression < expression .)
    ]               reduce using rule 122 (expression -> expression < expression .)
    TO              reduce using rule 122 (expression -> expression < expression .)
    BY              reduce using rule 122 (expression -> expression < expression .)
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144

  ! +               [ reduce using rule 122 (expression -> expression < expression .) ]
  ! -               [ reduce using rule 122 (expression -> expression < expression .) ]
  ! *               [ reduce using rule 122 (expression -> expression < expression .) ]
  ! /               [ reduce using rule 122 (expression -> expression < expression .) ]
  ! DIV             [ reduce using rule 122 (expression -> expression < expression .) ]
  ! MOD             [ reduce using rule 122 (expression -> expression < expression .) ]
  ! OR              [ shift and go to state 143 ]
  ! &               [ shift and go to state 136 ]
  ! #               [ shift and go to state 135 ]
  ! =               [ shift and go to state 138 ]
  ! <               [ shift and go to state 137 ]
  ! LESSEQUAL       [ shift and go to state 145 ]
  ! >               [ shift and go to state 148 ]
  ! MOREEQUAL       [ shift and go to state 134 ]


state 196

    (121) expression -> expression = expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               reduce using rule 121 (expression -> expression = expression .)
    #               reduce using rule 121 (expression -> expression = expression .)
    =               reduce using rule 121 (expression -> expression = expression .)
    )               reduce using rule 121 (expression -> expression = expression .)
    ;               reduce using rule 121 (expression -> expression = expression .)
    OF              reduce using rule 121 (expression -> expression = expression .)
    THEN            reduce using rule 121 (expression -> expression = expression .)
    DO              reduce using rule 121 (expression -> expression = expression .)
    ,               reduce using rule 121 (expression -> expression = expression .)
    ]               reduce using rule 121 (expression -> expression = expression .)
    TO              reduce using rule 121 (expression -> expression = expression .)
    BY              reduce using rule 121 (expression -> expression = expression .)
    OR              shift and go to state 143
    &               shift and go to state 136
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144

  ! OR              [ reduce using rule 121 (expression -> expression = expression .) ]
  ! &               [ reduce using rule 121 (expression -> expression = expression .) ]
  ! <               [ reduce using rule 121 (expression -> expression = expression .) ]
  ! LESSEQUAL       [ reduce using rule 121 (expression -> expression = expression .) ]
  ! >               [ reduce using rule 121 (expression -> expression = expression .) ]
  ! MOREEQUAL       [ reduce using rule 121 (expression -> expression = expression .) ]
  ! +               [ reduce using rule 121 (expression -> expression = expression .) ]
  ! -               [ reduce using rule 121 (expression -> expression = expression .) ]
  ! *               [ reduce using rule 121 (expression -> expression = expression .) ]
  ! /               [ reduce using rule 121 (expression -> expression = expression .) ]
  ! DIV             [ reduce using rule 121 (expression -> expression = expression .) ]
  ! MOD             [ reduce using rule 121 (expression -> expression = expression .) ]
  ! #               [ shift and go to state 135 ]
  ! =               [ shift and go to state 138 ]


state 197

    (126) expression -> expression + expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               reduce using rule 126 (expression -> expression + expression .)
    OR              reduce using rule 126 (expression -> expression + expression .)
    &               reduce using rule 126 (expression -> expression + expression .)
    #               reduce using rule 126 (expression -> expression + expression .)
    =               reduce using rule 126 (expression -> expression + expression .)
    <               reduce using rule 126 (expression -> expression + expression .)
    LESSEQUAL       reduce using rule 126 (expression -> expression + expression .)
    >               reduce using rule 126 (expression -> expression + expression .)
    MOREEQUAL       reduce using rule 126 (expression -> expression + expression .)
    +               reduce using rule 126 (expression -> expression + expression .)
    -               reduce using rule 126 (expression -> expression + expression .)
    )               reduce using rule 126 (expression -> expression + expression .)
    ;               reduce using rule 126 (expression -> expression + expression .)
    OF              reduce using rule 126 (expression -> expression + expression .)
    THEN            reduce using rule 126 (expression -> expression + expression .)
    DO              reduce using rule 126 (expression -> expression + expression .)
    ,               reduce using rule 126 (expression -> expression + expression .)
    ]               reduce using rule 126 (expression -> expression + expression .)
    TO              reduce using rule 126 (expression -> expression + expression .)
    BY              reduce using rule 126 (expression -> expression + expression .)
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144

  ! *               [ reduce using rule 126 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 126 (expression -> expression + expression .) ]
  ! DIV             [ reduce using rule 126 (expression -> expression + expression .) ]
  ! MOD             [ reduce using rule 126 (expression -> expression + expression .) ]
  ! OR              [ shift and go to state 143 ]
  ! &               [ shift and go to state 136 ]
  ! #               [ shift and go to state 135 ]
  ! =               [ shift and go to state 138 ]
  ! <               [ shift and go to state 137 ]
  ! LESSEQUAL       [ shift and go to state 145 ]
  ! >               [ shift and go to state 148 ]
  ! MOREEQUAL       [ shift and go to state 134 ]
  ! +               [ shift and go to state 139 ]
  ! -               [ shift and go to state 141 ]


state 198

    (128) expression -> expression * expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               reduce using rule 128 (expression -> expression * expression .)
    OR              reduce using rule 128 (expression -> expression * expression .)
    &               reduce using rule 128 (expression -> expression * expression .)
    #               reduce using rule 128 (expression -> expression * expression .)
    =               reduce using rule 128 (expression -> expression * expression .)
    <               reduce using rule 128 (expression -> expression * expression .)
    LESSEQUAL       reduce using rule 128 (expression -> expression * expression .)
    >               reduce using rule 128 (expression -> expression * expression .)
    MOREEQUAL       reduce using rule 128 (expression -> expression * expression .)
    +               reduce using rule 128 (expression -> expression * expression .)
    -               reduce using rule 128 (expression -> expression * expression .)
    *               reduce using rule 128 (expression -> expression * expression .)
    /               reduce using rule 128 (expression -> expression * expression .)
    DIV             reduce using rule 128 (expression -> expression * expression .)
    MOD             reduce using rule 128 (expression -> expression * expression .)
    )               reduce using rule 128 (expression -> expression * expression .)
    ;               reduce using rule 128 (expression -> expression * expression .)
    OF              reduce using rule 128 (expression -> expression * expression .)
    THEN            reduce using rule 128 (expression -> expression * expression .)
    DO              reduce using rule 128 (expression -> expression * expression .)
    ,               reduce using rule 128 (expression -> expression * expression .)
    ]               reduce using rule 128 (expression -> expression * expression .)
    TO              reduce using rule 128 (expression -> expression * expression .)
    BY              reduce using rule 128 (expression -> expression * expression .)

  ! OR              [ shift and go to state 143 ]
  ! &               [ shift and go to state 136 ]
  ! #               [ shift and go to state 135 ]
  ! =               [ shift and go to state 138 ]
  ! <               [ shift and go to state 137 ]
  ! LESSEQUAL       [ shift and go to state 145 ]
  ! >               [ shift and go to state 148 ]
  ! MOREEQUAL       [ shift and go to state 134 ]
  ! +               [ shift and go to state 139 ]
  ! -               [ shift and go to state 141 ]
  ! *               [ shift and go to state 140 ]
  ! /               [ shift and go to state 142 ]
  ! DIV             [ shift and go to state 147 ]
  ! MOD             [ shift and go to state 144 ]


state 199

    (127) expression -> expression - expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               reduce using rule 127 (expression -> expression - expression .)
    OR              reduce using rule 127 (expression -> expression - expression .)
    &               reduce using rule 127 (expression -> expression - expression .)
    #               reduce using rule 127 (expression -> expression - expression .)
    =               reduce using rule 127 (expression -> expression - expression .)
    <               reduce using rule 127 (expression -> expression - expression .)
    LESSEQUAL       reduce using rule 127 (expression -> expression - expression .)
    >               reduce using rule 127 (expression -> expression - expression .)
    MOREEQUAL       reduce using rule 127 (expression -> expression - expression .)
    +               reduce using rule 127 (expression -> expression - expression .)
    -               reduce using rule 127 (expression -> expression - expression .)
    )               reduce using rule 127 (expression -> expression - expression .)
    ;               reduce using rule 127 (expression -> expression - expression .)
    OF              reduce using rule 127 (expression -> expression - expression .)
    THEN            reduce using rule 127 (expression -> expression - expression .)
    DO              reduce using rule 127 (expression -> expression - expression .)
    ,               reduce using rule 127 (expression -> expression - expression .)
    ]               reduce using rule 127 (expression -> expression - expression .)
    TO              reduce using rule 127 (expression -> expression - expression .)
    BY              reduce using rule 127 (expression -> expression - expression .)
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144

  ! *               [ reduce using rule 127 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 127 (expression -> expression - expression .) ]
  ! DIV             [ reduce using rule 127 (expression -> expression - expression .) ]
  ! MOD             [ reduce using rule 127 (expression -> expression - expression .) ]
  ! OR              [ shift and go to state 143 ]
  ! &               [ shift and go to state 136 ]
  ! #               [ shift and go to state 135 ]
  ! =               [ shift and go to state 138 ]
  ! <               [ shift and go to state 137 ]
  ! LESSEQUAL       [ shift and go to state 145 ]
  ! >               [ shift and go to state 148 ]
  ! MOREEQUAL       [ shift and go to state 134 ]
  ! +               [ shift and go to state 139 ]
  ! -               [ shift and go to state 141 ]


state 200

    (129) expression -> expression / expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               reduce using rule 129 (expression -> expression / expression .)
    OR              reduce using rule 129 (expression -> expression / expression .)
    &               reduce using rule 129 (expression -> expression / expression .)
    #               reduce using rule 129 (expression -> expression / expression .)
    =               reduce using rule 129 (expression -> expression / expression .)
    <               reduce using rule 129 (expression -> expression / expression .)
    LESSEQUAL       reduce using rule 129 (expression -> expression / expression .)
    >               reduce using rule 129 (expression -> expression / expression .)
    MOREEQUAL       reduce using rule 129 (expression -> expression / expression .)
    +               reduce using rule 129 (expression -> expression / expression .)
    -               reduce using rule 129 (expression -> expression / expression .)
    *               reduce using rule 129 (expression -> expression / expression .)
    /               reduce using rule 129 (expression -> expression / expression .)
    DIV             reduce using rule 129 (expression -> expression / expression .)
    MOD             reduce using rule 129 (expression -> expression / expression .)
    )               reduce using rule 129 (expression -> expression / expression .)
    ;               reduce using rule 129 (expression -> expression / expression .)
    OF              reduce using rule 129 (expression -> expression / expression .)
    THEN            reduce using rule 129 (expression -> expression / expression .)
    DO              reduce using rule 129 (expression -> expression / expression .)
    ,               reduce using rule 129 (expression -> expression / expression .)
    ]               reduce using rule 129 (expression -> expression / expression .)
    TO              reduce using rule 129 (expression -> expression / expression .)
    BY              reduce using rule 129 (expression -> expression / expression .)

  ! OR              [ shift and go to state 143 ]
  ! &               [ shift and go to state 136 ]
  ! #               [ shift and go to state 135 ]
  ! =               [ shift and go to state 138 ]
  ! <               [ shift and go to state 137 ]
  ! LESSEQUAL       [ shift and go to state 145 ]
  ! >               [ shift and go to state 148 ]
  ! MOREEQUAL       [ shift and go to state 134 ]
  ! +               [ shift and go to state 139 ]
  ! -               [ shift and go to state 141 ]
  ! *               [ shift and go to state 140 ]
  ! /               [ shift and go to state 142 ]
  ! DIV             [ shift and go to state 147 ]
  ! MOD             [ shift and go to state 144 ]


state 201

    (118) expression -> expression OR boolMarker . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 253

state 202

    (131) expression -> expression MOD expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               reduce using rule 131 (expression -> expression MOD expression .)
    OR              reduce using rule 131 (expression -> expression MOD expression .)
    &               reduce using rule 131 (expression -> expression MOD expression .)
    #               reduce using rule 131 (expression -> expression MOD expression .)
    =               reduce using rule 131 (expression -> expression MOD expression .)
    <               reduce using rule 131 (expression -> expression MOD expression .)
    LESSEQUAL       reduce using rule 131 (expression -> expression MOD expression .)
    >               reduce using rule 131 (expression -> expression MOD expression .)
    MOREEQUAL       reduce using rule 131 (expression -> expression MOD expression .)
    +               reduce using rule 131 (expression -> expression MOD expression .)
    -               reduce using rule 131 (expression -> expression MOD expression .)
    *               reduce using rule 131 (expression -> expression MOD expression .)
    /               reduce using rule 131 (expression -> expression MOD expression .)
    DIV             reduce using rule 131 (expression -> expression MOD expression .)
    MOD             reduce using rule 131 (expression -> expression MOD expression .)
    )               reduce using rule 131 (expression -> expression MOD expression .)
    ;               reduce using rule 131 (expression -> expression MOD expression .)
    OF              reduce using rule 131 (expression -> expression MOD expression .)
    THEN            reduce using rule 131 (expression -> expression MOD expression .)
    DO              reduce using rule 131 (expression -> expression MOD expression .)
    ,               reduce using rule 131 (expression -> expression MOD expression .)
    ]               reduce using rule 131 (expression -> expression MOD expression .)
    TO              reduce using rule 131 (expression -> expression MOD expression .)
    BY              reduce using rule 131 (expression -> expression MOD expression .)

  ! OR              [ shift and go to state 143 ]
  ! &               [ shift and go to state 136 ]
  ! #               [ shift and go to state 135 ]
  ! =               [ shift and go to state 138 ]
  ! <               [ shift and go to state 137 ]
  ! LESSEQUAL       [ shift and go to state 145 ]
  ! >               [ shift and go to state 148 ]
  ! MOREEQUAL       [ shift and go to state 134 ]
  ! +               [ shift and go to state 139 ]
  ! -               [ shift and go to state 141 ]
  ! *               [ shift and go to state 140 ]
  ! /               [ shift and go to state 142 ]
  ! DIV             [ shift and go to state 147 ]
  ! MOD             [ shift and go to state 144 ]


state 203

    (123) expression -> expression LESSEQUAL expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    OR              reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    &               reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    #               reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    =               reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    <               reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    LESSEQUAL       reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    >               reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    MOREEQUAL       reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    )               reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    ;               reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    OF              reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    THEN            reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    DO              reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    ,               reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    ]               reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    TO              reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    BY              reduce using rule 123 (expression -> expression LESSEQUAL expression .)
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144

  ! +               [ reduce using rule 123 (expression -> expression LESSEQUAL expression .) ]
  ! -               [ reduce using rule 123 (expression -> expression LESSEQUAL expression .) ]
  ! *               [ reduce using rule 123 (expression -> expression LESSEQUAL expression .) ]
  ! /               [ reduce using rule 123 (expression -> expression LESSEQUAL expression .) ]
  ! DIV             [ reduce using rule 123 (expression -> expression LESSEQUAL expression .) ]
  ! MOD             [ reduce using rule 123 (expression -> expression LESSEQUAL expression .) ]
  ! OR              [ shift and go to state 143 ]
  ! &               [ shift and go to state 136 ]
  ! #               [ shift and go to state 135 ]
  ! =               [ shift and go to state 138 ]
  ! <               [ shift and go to state 137 ]
  ! LESSEQUAL       [ shift and go to state 145 ]
  ! >               [ shift and go to state 148 ]
  ! MOREEQUAL       [ shift and go to state 134 ]


state 204

    (13) constantDeclarationList -> ID = expression ; constantDeclarationList .

    CONST           reduce using rule 13 (constantDeclarationList -> ID = expression ; constantDeclarationList .)
    VAR             reduce using rule 13 (constantDeclarationList -> ID = expression ; constantDeclarationList .)
    PROCEDURE       reduce using rule 13 (constantDeclarationList -> ID = expression ; constantDeclarationList .)
    BEGIN           reduce using rule 13 (constantDeclarationList -> ID = expression ; constantDeclarationList .)
    END             reduce using rule 13 (constantDeclarationList -> ID = expression ; constantDeclarationList .)


state 205

    (130) expression -> expression DIV expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               reduce using rule 130 (expression -> expression DIV expression .)
    OR              reduce using rule 130 (expression -> expression DIV expression .)
    &               reduce using rule 130 (expression -> expression DIV expression .)
    #               reduce using rule 130 (expression -> expression DIV expression .)
    =               reduce using rule 130 (expression -> expression DIV expression .)
    <               reduce using rule 130 (expression -> expression DIV expression .)
    LESSEQUAL       reduce using rule 130 (expression -> expression DIV expression .)
    >               reduce using rule 130 (expression -> expression DIV expression .)
    MOREEQUAL       reduce using rule 130 (expression -> expression DIV expression .)
    +               reduce using rule 130 (expression -> expression DIV expression .)
    -               reduce using rule 130 (expression -> expression DIV expression .)
    *               reduce using rule 130 (expression -> expression DIV expression .)
    /               reduce using rule 130 (expression -> expression DIV expression .)
    DIV             reduce using rule 130 (expression -> expression DIV expression .)
    MOD             reduce using rule 130 (expression -> expression DIV expression .)
    )               reduce using rule 130 (expression -> expression DIV expression .)
    ;               reduce using rule 130 (expression -> expression DIV expression .)
    OF              reduce using rule 130 (expression -> expression DIV expression .)
    THEN            reduce using rule 130 (expression -> expression DIV expression .)
    DO              reduce using rule 130 (expression -> expression DIV expression .)
    ,               reduce using rule 130 (expression -> expression DIV expression .)
    ]               reduce using rule 130 (expression -> expression DIV expression .)
    TO              reduce using rule 130 (expression -> expression DIV expression .)
    BY              reduce using rule 130 (expression -> expression DIV expression .)

  ! OR              [ shift and go to state 143 ]
  ! &               [ shift and go to state 136 ]
  ! #               [ shift and go to state 135 ]
  ! =               [ shift and go to state 138 ]
  ! <               [ shift and go to state 137 ]
  ! LESSEQUAL       [ shift and go to state 145 ]
  ! >               [ shift and go to state 148 ]
  ! MOREEQUAL       [ shift and go to state 134 ]
  ! +               [ shift and go to state 139 ]
  ! -               [ shift and go to state 141 ]
  ! *               [ shift and go to state 140 ]
  ! /               [ shift and go to state 142 ]
  ! DIV             [ shift and go to state 147 ]
  ! MOD             [ shift and go to state 144 ]


state 206

    (124) expression -> expression > expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               reduce using rule 124 (expression -> expression > expression .)
    OR              reduce using rule 124 (expression -> expression > expression .)
    &               reduce using rule 124 (expression -> expression > expression .)
    #               reduce using rule 124 (expression -> expression > expression .)
    =               reduce using rule 124 (expression -> expression > expression .)
    <               reduce using rule 124 (expression -> expression > expression .)
    LESSEQUAL       reduce using rule 124 (expression -> expression > expression .)
    >               reduce using rule 124 (expression -> expression > expression .)
    MOREEQUAL       reduce using rule 124 (expression -> expression > expression .)
    )               reduce using rule 124 (expression -> expression > expression .)
    ;               reduce using rule 124 (expression -> expression > expression .)
    OF              reduce using rule 124 (expression -> expression > expression .)
    THEN            reduce using rule 124 (expression -> expression > expression .)
    DO              reduce using rule 124 (expression -> expression > expression .)
    ,               reduce using rule 124 (expression -> expression > expression .)
    ]               reduce using rule 124 (expression -> expression > expression .)
    TO              reduce using rule 124 (expression -> expression > expression .)
    BY              reduce using rule 124 (expression -> expression > expression .)
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144

  ! +               [ reduce using rule 124 (expression -> expression > expression .) ]
  ! -               [ reduce using rule 124 (expression -> expression > expression .) ]
  ! *               [ reduce using rule 124 (expression -> expression > expression .) ]
  ! /               [ reduce using rule 124 (expression -> expression > expression .) ]
  ! DIV             [ reduce using rule 124 (expression -> expression > expression .) ]
  ! MOD             [ reduce using rule 124 (expression -> expression > expression .) ]
  ! OR              [ shift and go to state 143 ]
  ! &               [ shift and go to state 136 ]
  ! #               [ shift and go to state 135 ]
  ! =               [ shift and go to state 138 ]
  ! <               [ shift and go to state 137 ]
  ! LESSEQUAL       [ shift and go to state 145 ]
  ! >               [ shift and go to state 148 ]
  ! MOREEQUAL       [ shift and go to state 134 ]


state 207

    (92) builtIn -> CAP ( expression ) .

    )               reduce using rule 92 (builtIn -> CAP ( expression ) .)
    ,               reduce using rule 92 (builtIn -> CAP ( expression ) .)
    OR              reduce using rule 92 (builtIn -> CAP ( expression ) .)
    &               reduce using rule 92 (builtIn -> CAP ( expression ) .)
    #               reduce using rule 92 (builtIn -> CAP ( expression ) .)
    =               reduce using rule 92 (builtIn -> CAP ( expression ) .)
    <               reduce using rule 92 (builtIn -> CAP ( expression ) .)
    LESSEQUAL       reduce using rule 92 (builtIn -> CAP ( expression ) .)
    >               reduce using rule 92 (builtIn -> CAP ( expression ) .)
    MOREEQUAL       reduce using rule 92 (builtIn -> CAP ( expression ) .)
    +               reduce using rule 92 (builtIn -> CAP ( expression ) .)
    -               reduce using rule 92 (builtIn -> CAP ( expression ) .)
    *               reduce using rule 92 (builtIn -> CAP ( expression ) .)
    /               reduce using rule 92 (builtIn -> CAP ( expression ) .)
    DIV             reduce using rule 92 (builtIn -> CAP ( expression ) .)
    MOD             reduce using rule 92 (builtIn -> CAP ( expression ) .)
    ;               reduce using rule 92 (builtIn -> CAP ( expression ) .)
    OF              reduce using rule 92 (builtIn -> CAP ( expression ) .)
    THEN            reduce using rule 92 (builtIn -> CAP ( expression ) .)
    DO              reduce using rule 92 (builtIn -> CAP ( expression ) .)
    ]               reduce using rule 92 (builtIn -> CAP ( expression ) .)
    :               reduce using rule 92 (builtIn -> CAP ( expression ) .)
    TO              reduce using rule 92 (builtIn -> CAP ( expression ) .)
    BY              reduce using rule 92 (builtIn -> CAP ( expression ) .)
    ASSIGN          reduce using rule 92 (builtIn -> CAP ( expression ) .)


state 208

    (57) statement -> WHILE boolMarker expression DO . boolMarker statementList END
    (116) boolMarker -> .

    IF              reduce using rule 116 (boolMarker -> .)
    CASE            reduce using rule 116 (boolMarker -> .)
    WHILE           reduce using rule 116 (boolMarker -> .)
    REPEAT          reduce using rule 116 (boolMarker -> .)
    FOR             reduce using rule 116 (boolMarker -> .)
    LOOP            reduce using rule 116 (boolMarker -> .)
    EXIT            reduce using rule 116 (boolMarker -> .)
    READINT         reduce using rule 116 (boolMarker -> .)
    READREAL        reduce using rule 116 (boolMarker -> .)
    RETURN          reduce using rule 116 (boolMarker -> .)
    DEC             reduce using rule 116 (boolMarker -> .)
    INC             reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)
    END             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 254

state 209

    (67) statement -> READREAL ( designator ) .

    ;               reduce using rule 67 (statement -> READREAL ( designator ) .)


state 210

    (87) builtIn -> MAX ( REAL ) .

    )               reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    ,               reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    OR              reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    &               reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    #               reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    =               reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    <               reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    LESSEQUAL       reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    >               reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    MOREEQUAL       reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    +               reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    -               reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    *               reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    /               reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    DIV             reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    MOD             reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    ;               reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    OF              reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    THEN            reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    DO              reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    ]               reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    :               reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    TO              reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    BY              reduce using rule 87 (builtIn -> MAX ( REAL ) .)
    ASSIGN          reduce using rule 87 (builtIn -> MAX ( REAL ) .)


state 211

    (89) builtIn -> MAX ( CHAR ) .

    )               reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    ,               reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    OR              reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    &               reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    #               reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    =               reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    <               reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    LESSEQUAL       reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    >               reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    MOREEQUAL       reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    +               reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    -               reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    *               reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    /               reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    DIV             reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    MOD             reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    ;               reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    OF              reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    THEN            reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    DO              reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    ]               reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    :               reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    TO              reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    BY              reduce using rule 89 (builtIn -> MAX ( CHAR ) .)
    ASSIGN          reduce using rule 89 (builtIn -> MAX ( CHAR ) .)


state 212

    (88) builtIn -> MAX ( BOOLEAN ) .

    )               reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    ,               reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    OR              reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    &               reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    #               reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    =               reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    <               reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    LESSEQUAL       reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    >               reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    MOREEQUAL       reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    +               reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    -               reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    *               reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    /               reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    DIV             reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    MOD             reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    ;               reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    OF              reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    THEN            reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    DO              reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    ]               reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    :               reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    TO              reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    BY              reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)
    ASSIGN          reduce using rule 88 (builtIn -> MAX ( BOOLEAN ) .)


state 213

    (86) builtIn -> MAX ( INTEGER ) .

    )               reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    ,               reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    OR              reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    &               reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    #               reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    =               reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    <               reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    LESSEQUAL       reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    >               reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    MOREEQUAL       reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    +               reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    -               reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    *               reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    /               reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    DIV             reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    MOD             reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    ;               reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    OF              reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    THEN            reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    DO              reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    ]               reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    :               reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    TO              reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    BY              reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)
    ASSIGN          reduce using rule 86 (builtIn -> MAX ( INTEGER ) .)


state 214

    (52) statement -> CASE expression OF caseList . optionalElse END
    (50) optionalElse -> . ELSE statementList
    (51) optionalElse -> .

    ELSE            shift and go to state 255
    END             reduce using rule 51 (optionalElse -> .)

    optionalElse                   shift and go to state 256

state 215

    (53) caseList -> case . | caseList
    (54) caseList -> case .

    |               shift and go to state 257
    ELSE            reduce using rule 54 (caseList -> case .)
    END             reduce using rule 54 (caseList -> case .)


state 216

    (55) case -> expression . : statementList
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               shift and go to state 258
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 217

    (73) statement -> DEC ( designator checkConstant . )
    (74) statement -> DEC ( designator checkConstant . , expression )

    )               shift and go to state 259
    ,               shift and go to state 260


state 218

    (44) statementList -> statementList boolMarker statement ; .

    ELSIF           reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    ELSE            reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    END             reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    IF              reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    CASE            reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    WHILE           reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    REPEAT          reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    FOR             reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    LOOP            reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    EXIT            reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    READINT         reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    READREAL        reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    RETURN          reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    DEC             reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    INC             reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    ID              reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    ABS             reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    SIZE            reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    MIN             reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    MAX             reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    CHR             reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    ORD             reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    CAP             reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    UNTIL           reduce using rule 44 (statementList -> statementList boolMarker statement ; .)
    |               reduce using rule 44 (statementList -> statementList boolMarker statement ; .)


state 219

    (98) suffix -> ( optionalExpressionList ) . suffix
    (95) suffix -> . . ID suffix
    (96) suffix -> . [ optionalExpressionList ] suffix
    (97) suffix -> . ^ suffix
    (98) suffix -> . ( optionalExpressionList ) suffix
    (99) suffix -> .

    .               shift and go to state 107
    [               shift and go to state 108
    ^               shift and go to state 109
    (               shift and go to state 106
    ASSIGN          reduce using rule 99 (suffix -> .)
    ;               reduce using rule 99 (suffix -> .)
    OR              reduce using rule 99 (suffix -> .)
    &               reduce using rule 99 (suffix -> .)
    #               reduce using rule 99 (suffix -> .)
    =               reduce using rule 99 (suffix -> .)
    <               reduce using rule 99 (suffix -> .)
    LESSEQUAL       reduce using rule 99 (suffix -> .)
    >               reduce using rule 99 (suffix -> .)
    MOREEQUAL       reduce using rule 99 (suffix -> .)
    +               reduce using rule 99 (suffix -> .)
    -               reduce using rule 99 (suffix -> .)
    *               reduce using rule 99 (suffix -> .)
    /               reduce using rule 99 (suffix -> .)
    DIV             reduce using rule 99 (suffix -> .)
    MOD             reduce using rule 99 (suffix -> .)
    OF              reduce using rule 99 (suffix -> .)
    THEN            reduce using rule 99 (suffix -> .)
    )               reduce using rule 99 (suffix -> .)
    DO              reduce using rule 99 (suffix -> .)
    ,               reduce using rule 99 (suffix -> .)
    ]               reduce using rule 99 (suffix -> .)
    :               reduce using rule 99 (suffix -> .)
    TO              reduce using rule 99 (suffix -> .)
    BY              reduce using rule 99 (suffix -> .)

    suffix                         shift and go to state 261

state 220

    (111) expressionList -> expression , . expressionList
    (111) expressionList -> . expression , expressionList
    (112) expressionList -> . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    expressionList                 shift and go to state 262
    factor                         shift and go to state 89
    expression                     shift and go to state 161

state 221

    (95) suffix -> . ID suffix .

    ASSIGN          reduce using rule 95 (suffix -> . ID suffix .)
    ;               reduce using rule 95 (suffix -> . ID suffix .)
    OR              reduce using rule 95 (suffix -> . ID suffix .)
    &               reduce using rule 95 (suffix -> . ID suffix .)
    #               reduce using rule 95 (suffix -> . ID suffix .)
    =               reduce using rule 95 (suffix -> . ID suffix .)
    <               reduce using rule 95 (suffix -> . ID suffix .)
    LESSEQUAL       reduce using rule 95 (suffix -> . ID suffix .)
    >               reduce using rule 95 (suffix -> . ID suffix .)
    MOREEQUAL       reduce using rule 95 (suffix -> . ID suffix .)
    +               reduce using rule 95 (suffix -> . ID suffix .)
    -               reduce using rule 95 (suffix -> . ID suffix .)
    *               reduce using rule 95 (suffix -> . ID suffix .)
    /               reduce using rule 95 (suffix -> . ID suffix .)
    DIV             reduce using rule 95 (suffix -> . ID suffix .)
    MOD             reduce using rule 95 (suffix -> . ID suffix .)
    OF              reduce using rule 95 (suffix -> . ID suffix .)
    THEN            reduce using rule 95 (suffix -> . ID suffix .)
    )               reduce using rule 95 (suffix -> . ID suffix .)
    DO              reduce using rule 95 (suffix -> . ID suffix .)
    ,               reduce using rule 95 (suffix -> . ID suffix .)
    ]               reduce using rule 95 (suffix -> . ID suffix .)
    :               reduce using rule 95 (suffix -> . ID suffix .)
    TO              reduce using rule 95 (suffix -> . ID suffix .)
    BY              reduce using rule 95 (suffix -> . ID suffix .)


state 222

    (96) suffix -> [ optionalExpressionList ] . suffix
    (95) suffix -> . . ID suffix
    (96) suffix -> . [ optionalExpressionList ] suffix
    (97) suffix -> . ^ suffix
    (98) suffix -> . ( optionalExpressionList ) suffix
    (99) suffix -> .

    .               shift and go to state 107
    [               shift and go to state 108
    ^               shift and go to state 109
    (               shift and go to state 106
    ASSIGN          reduce using rule 99 (suffix -> .)
    ;               reduce using rule 99 (suffix -> .)
    OR              reduce using rule 99 (suffix -> .)
    &               reduce using rule 99 (suffix -> .)
    #               reduce using rule 99 (suffix -> .)
    =               reduce using rule 99 (suffix -> .)
    <               reduce using rule 99 (suffix -> .)
    LESSEQUAL       reduce using rule 99 (suffix -> .)
    >               reduce using rule 99 (suffix -> .)
    MOREEQUAL       reduce using rule 99 (suffix -> .)
    +               reduce using rule 99 (suffix -> .)
    -               reduce using rule 99 (suffix -> .)
    *               reduce using rule 99 (suffix -> .)
    /               reduce using rule 99 (suffix -> .)
    DIV             reduce using rule 99 (suffix -> .)
    MOD             reduce using rule 99 (suffix -> .)
    OF              reduce using rule 99 (suffix -> .)
    THEN            reduce using rule 99 (suffix -> .)
    )               reduce using rule 99 (suffix -> .)
    DO              reduce using rule 99 (suffix -> .)
    ,               reduce using rule 99 (suffix -> .)
    ]               reduce using rule 99 (suffix -> .)
    :               reduce using rule 99 (suffix -> .)
    TO              reduce using rule 99 (suffix -> .)
    BY              reduce using rule 99 (suffix -> .)

    suffix                         shift and go to state 263

state 223

    (79) builtIn -> SIZE ( REAL ) .

    )               reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    ,               reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    OR              reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    &               reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    #               reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    =               reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    <               reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    LESSEQUAL       reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    >               reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    MOREEQUAL       reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    +               reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    -               reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    *               reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    /               reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    DIV             reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    MOD             reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    ;               reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    OF              reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    THEN            reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    DO              reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    ]               reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    :               reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    TO              reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    BY              reduce using rule 79 (builtIn -> SIZE ( REAL ) .)
    ASSIGN          reduce using rule 79 (builtIn -> SIZE ( REAL ) .)


state 224

    (81) builtIn -> SIZE ( CHAR ) .

    )               reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    ,               reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    OR              reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    &               reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    #               reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    =               reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    <               reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    LESSEQUAL       reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    >               reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    MOREEQUAL       reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    +               reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    -               reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    *               reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    /               reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    DIV             reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    MOD             reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    ;               reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    OF              reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    THEN            reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    DO              reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    ]               reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    :               reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    TO              reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    BY              reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)
    ASSIGN          reduce using rule 81 (builtIn -> SIZE ( CHAR ) .)


state 225

    (80) builtIn -> SIZE ( BOOLEAN ) .

    )               reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    ,               reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    OR              reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    &               reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    #               reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    =               reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    <               reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    LESSEQUAL       reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    >               reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    MOREEQUAL       reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    +               reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    -               reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    *               reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    /               reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    DIV             reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    MOD             reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    ;               reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    OF              reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    THEN            reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    DO              reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    ]               reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    :               reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    TO              reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    BY              reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)
    ASSIGN          reduce using rule 80 (builtIn -> SIZE ( BOOLEAN ) .)


state 226

    (78) builtIn -> SIZE ( INTEGER ) .

    )               reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    ,               reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    OR              reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    &               reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    #               reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    =               reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    <               reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    LESSEQUAL       reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    >               reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    MOREEQUAL       reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    +               reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    -               reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    *               reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    /               reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    DIV             reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    MOD             reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    ;               reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    OF              reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    THEN            reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    DO              reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    ]               reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    :               reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    TO              reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    BY              reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)
    ASSIGN          reduce using rule 78 (builtIn -> SIZE ( INTEGER ) .)


state 227

    (44) statementList -> statementList boolMarker . statement ;
    (47) statement -> . IF expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END
    (52) statement -> . CASE expression OF caseList optionalElse END
    (57) statement -> . WHILE boolMarker expression DO boolMarker statementList END
    (58) statement -> . REPEAT boolMarker statementList UNTIL boolMarker expression
    (59) statement -> . FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END
    (64) statement -> . LOOP boolMarker statementList END
    (65) statement -> . EXIT
    (66) statement -> . READINT ( designator )
    (67) statement -> . READREAL ( designator )
    (68) statement -> . RETURN
    (69) statement -> . RETURN expression
    (70) statement -> . designator
    (71) statement -> . designator checkConstant ASSIGN expression
    (73) statement -> . DEC ( designator checkConstant )
    (74) statement -> . DEC ( designator checkConstant , expression )
    (75) statement -> . INC ( designator checkConstant )
    (76) statement -> . INC ( designator checkConstant , expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    IF              shift and go to state 60
    CASE            shift and go to state 48
    WHILE           shift and go to state 45
    REPEAT          shift and go to state 54
    FOR             shift and go to state 55
    LOOP            shift and go to state 65
    EXIT            shift and go to state 63
    READINT         shift and go to state 56
    READREAL        shift and go to state 46
    RETURN          shift and go to state 43
    DEC             shift and go to state 49
    INC             shift and go to state 66
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 57
    builtIn                        shift and go to state 58
    statement                      shift and go to state 158

state 228

    (58) statement -> REPEAT boolMarker statementList UNTIL . boolMarker expression
    (116) boolMarker -> .

    -               reduce using rule 116 (boolMarker -> .)
    +               reduce using rule 116 (boolMarker -> .)
    NIL             reduce using rule 116 (boolMarker -> .)
    INTEGERCONSTANT reduce using rule 116 (boolMarker -> .)
    CHARACTERCONSTANT reduce using rule 116 (boolMarker -> .)
    REALCONSTANT    reduce using rule 116 (boolMarker -> .)
    STRINGCONSTANT  reduce using rule 116 (boolMarker -> .)
    BOOLEANCONSTANT reduce using rule 116 (boolMarker -> .)
    ~               reduce using rule 116 (boolMarker -> .)
    (               reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 264

state 229

    (59) statement -> FOR ID ASSIGN expression . forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression
    (60) forAssign -> .

    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144
    TO              reduce using rule 60 (forAssign -> .)

    forAssign                      shift and go to state 265

state 230

    (66) statement -> READINT ( designator ) .

    ;               reduce using rule 66 (statement -> READINT ( designator ) .)


state 231

    (71) statement -> designator checkConstant ASSIGN expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    ;               reduce using rule 71 (statement -> designator checkConstant ASSIGN expression .)
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 232

    (77) builtIn -> ABS ( expression ) .

    )               reduce using rule 77 (builtIn -> ABS ( expression ) .)
    ,               reduce using rule 77 (builtIn -> ABS ( expression ) .)
    OR              reduce using rule 77 (builtIn -> ABS ( expression ) .)
    &               reduce using rule 77 (builtIn -> ABS ( expression ) .)
    #               reduce using rule 77 (builtIn -> ABS ( expression ) .)
    =               reduce using rule 77 (builtIn -> ABS ( expression ) .)
    <               reduce using rule 77 (builtIn -> ABS ( expression ) .)
    LESSEQUAL       reduce using rule 77 (builtIn -> ABS ( expression ) .)
    >               reduce using rule 77 (builtIn -> ABS ( expression ) .)
    MOREEQUAL       reduce using rule 77 (builtIn -> ABS ( expression ) .)
    +               reduce using rule 77 (builtIn -> ABS ( expression ) .)
    -               reduce using rule 77 (builtIn -> ABS ( expression ) .)
    *               reduce using rule 77 (builtIn -> ABS ( expression ) .)
    /               reduce using rule 77 (builtIn -> ABS ( expression ) .)
    DIV             reduce using rule 77 (builtIn -> ABS ( expression ) .)
    MOD             reduce using rule 77 (builtIn -> ABS ( expression ) .)
    ;               reduce using rule 77 (builtIn -> ABS ( expression ) .)
    OF              reduce using rule 77 (builtIn -> ABS ( expression ) .)
    THEN            reduce using rule 77 (builtIn -> ABS ( expression ) .)
    DO              reduce using rule 77 (builtIn -> ABS ( expression ) .)
    ]               reduce using rule 77 (builtIn -> ABS ( expression ) .)
    :               reduce using rule 77 (builtIn -> ABS ( expression ) .)
    TO              reduce using rule 77 (builtIn -> ABS ( expression ) .)
    BY              reduce using rule 77 (builtIn -> ABS ( expression ) .)
    ASSIGN          reduce using rule 77 (builtIn -> ABS ( expression ) .)


state 233

    (47) statement -> IF expression THEN boolMarker . statementList nMarker boolMarker elsifList optionalElse END
    (44) statementList -> . statementList boolMarker statement ;
    (45) statementList -> . statement ;
    (46) statementList -> .
    (47) statement -> . IF expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END
    (52) statement -> . CASE expression OF caseList optionalElse END
    (57) statement -> . WHILE boolMarker expression DO boolMarker statementList END
    (58) statement -> . REPEAT boolMarker statementList UNTIL boolMarker expression
    (59) statement -> . FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END
    (64) statement -> . LOOP boolMarker statementList END
    (65) statement -> . EXIT
    (66) statement -> . READINT ( designator )
    (67) statement -> . READREAL ( designator )
    (68) statement -> . RETURN
    (69) statement -> . RETURN expression
    (70) statement -> . designator
    (71) statement -> . designator checkConstant ASSIGN expression
    (73) statement -> . DEC ( designator checkConstant )
    (74) statement -> . DEC ( designator checkConstant , expression )
    (75) statement -> . INC ( designator checkConstant )
    (76) statement -> . INC ( designator checkConstant , expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for READINT resolved as shift
  ! shift/reduce conflict for READREAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ABS resolved as shift
  ! shift/reduce conflict for SIZE resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAX resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
  ! shift/reduce conflict for CAP resolved as shift
    ELSIF           reduce using rule 46 (statementList -> .)
    ELSE            reduce using rule 46 (statementList -> .)
    END             reduce using rule 46 (statementList -> .)
    IF              shift and go to state 60
    CASE            shift and go to state 48
    WHILE           shift and go to state 45
    REPEAT          shift and go to state 54
    FOR             shift and go to state 55
    LOOP            shift and go to state 65
    EXIT            shift and go to state 63
    READINT         shift and go to state 56
    READREAL        shift and go to state 46
    RETURN          shift and go to state 43
    DEC             shift and go to state 49
    INC             shift and go to state 66
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

  ! IF              [ reduce using rule 46 (statementList -> .) ]
  ! CASE            [ reduce using rule 46 (statementList -> .) ]
  ! WHILE           [ reduce using rule 46 (statementList -> .) ]
  ! REPEAT          [ reduce using rule 46 (statementList -> .) ]
  ! FOR             [ reduce using rule 46 (statementList -> .) ]
  ! LOOP            [ reduce using rule 46 (statementList -> .) ]
  ! EXIT            [ reduce using rule 46 (statementList -> .) ]
  ! READINT         [ reduce using rule 46 (statementList -> .) ]
  ! READREAL        [ reduce using rule 46 (statementList -> .) ]
  ! RETURN          [ reduce using rule 46 (statementList -> .) ]
  ! DEC             [ reduce using rule 46 (statementList -> .) ]
  ! INC             [ reduce using rule 46 (statementList -> .) ]
  ! ID              [ reduce using rule 46 (statementList -> .) ]
  ! ABS             [ reduce using rule 46 (statementList -> .) ]
  ! SIZE            [ reduce using rule 46 (statementList -> .) ]
  ! MIN             [ reduce using rule 46 (statementList -> .) ]
  ! MAX             [ reduce using rule 46 (statementList -> .) ]
  ! CHR             [ reduce using rule 46 (statementList -> .) ]
  ! ORD             [ reduce using rule 46 (statementList -> .) ]
  ! CAP             [ reduce using rule 46 (statementList -> .) ]

    designator                     shift and go to state 57
    builtIn                        shift and go to state 58
    statementList                  shift and go to state 266
    statement                      shift and go to state 52

state 234

    (83) builtIn -> MIN ( REAL ) .

    )               reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    ,               reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    OR              reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    &               reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    #               reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    =               reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    <               reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    LESSEQUAL       reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    >               reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    MOREEQUAL       reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    +               reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    -               reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    *               reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    /               reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    DIV             reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    MOD             reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    ;               reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    OF              reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    THEN            reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    DO              reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    ]               reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    :               reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    TO              reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    BY              reduce using rule 83 (builtIn -> MIN ( REAL ) .)
    ASSIGN          reduce using rule 83 (builtIn -> MIN ( REAL ) .)


state 235

    (85) builtIn -> MIN ( CHAR ) .

    )               reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    ,               reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    OR              reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    &               reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    #               reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    =               reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    <               reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    LESSEQUAL       reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    >               reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    MOREEQUAL       reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    +               reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    -               reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    *               reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    /               reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    DIV             reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    MOD             reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    ;               reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    OF              reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    THEN            reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    DO              reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    ]               reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    :               reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    TO              reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    BY              reduce using rule 85 (builtIn -> MIN ( CHAR ) .)
    ASSIGN          reduce using rule 85 (builtIn -> MIN ( CHAR ) .)


state 236

    (84) builtIn -> MIN ( BOOLEAN ) .

    )               reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    ,               reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    OR              reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    &               reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    #               reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    =               reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    <               reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    LESSEQUAL       reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    >               reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    MOREEQUAL       reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    +               reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    -               reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    *               reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    /               reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    DIV             reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    MOD             reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    ;               reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    OF              reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    THEN            reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    DO              reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    ]               reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    :               reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    TO              reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    BY              reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)
    ASSIGN          reduce using rule 84 (builtIn -> MIN ( BOOLEAN ) .)


state 237

    (82) builtIn -> MIN ( INTEGER ) .

    )               reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    ,               reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    OR              reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    &               reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    #               reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    =               reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    <               reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    LESSEQUAL       reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    >               reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    MOREEQUAL       reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    +               reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    -               reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    *               reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    /               reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    DIV             reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    MOD             reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    ;               reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    OF              reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    THEN            reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    DO              reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    ]               reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    :               reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    TO              reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    BY              reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)
    ASSIGN          reduce using rule 82 (builtIn -> MIN ( INTEGER ) .)


state 238

    (90) builtIn -> CHR ( expression ) .

    )               reduce using rule 90 (builtIn -> CHR ( expression ) .)
    ,               reduce using rule 90 (builtIn -> CHR ( expression ) .)
    OR              reduce using rule 90 (builtIn -> CHR ( expression ) .)
    &               reduce using rule 90 (builtIn -> CHR ( expression ) .)
    #               reduce using rule 90 (builtIn -> CHR ( expression ) .)
    =               reduce using rule 90 (builtIn -> CHR ( expression ) .)
    <               reduce using rule 90 (builtIn -> CHR ( expression ) .)
    LESSEQUAL       reduce using rule 90 (builtIn -> CHR ( expression ) .)
    >               reduce using rule 90 (builtIn -> CHR ( expression ) .)
    MOREEQUAL       reduce using rule 90 (builtIn -> CHR ( expression ) .)
    +               reduce using rule 90 (builtIn -> CHR ( expression ) .)
    -               reduce using rule 90 (builtIn -> CHR ( expression ) .)
    *               reduce using rule 90 (builtIn -> CHR ( expression ) .)
    /               reduce using rule 90 (builtIn -> CHR ( expression ) .)
    DIV             reduce using rule 90 (builtIn -> CHR ( expression ) .)
    MOD             reduce using rule 90 (builtIn -> CHR ( expression ) .)
    ;               reduce using rule 90 (builtIn -> CHR ( expression ) .)
    OF              reduce using rule 90 (builtIn -> CHR ( expression ) .)
    THEN            reduce using rule 90 (builtIn -> CHR ( expression ) .)
    DO              reduce using rule 90 (builtIn -> CHR ( expression ) .)
    ]               reduce using rule 90 (builtIn -> CHR ( expression ) .)
    :               reduce using rule 90 (builtIn -> CHR ( expression ) .)
    TO              reduce using rule 90 (builtIn -> CHR ( expression ) .)
    BY              reduce using rule 90 (builtIn -> CHR ( expression ) .)
    ASSIGN          reduce using rule 90 (builtIn -> CHR ( expression ) .)


state 239

    (91) builtIn -> ORD ( expression ) .

    )               reduce using rule 91 (builtIn -> ORD ( expression ) .)
    ,               reduce using rule 91 (builtIn -> ORD ( expression ) .)
    OR              reduce using rule 91 (builtIn -> ORD ( expression ) .)
    &               reduce using rule 91 (builtIn -> ORD ( expression ) .)
    #               reduce using rule 91 (builtIn -> ORD ( expression ) .)
    =               reduce using rule 91 (builtIn -> ORD ( expression ) .)
    <               reduce using rule 91 (builtIn -> ORD ( expression ) .)
    LESSEQUAL       reduce using rule 91 (builtIn -> ORD ( expression ) .)
    >               reduce using rule 91 (builtIn -> ORD ( expression ) .)
    MOREEQUAL       reduce using rule 91 (builtIn -> ORD ( expression ) .)
    +               reduce using rule 91 (builtIn -> ORD ( expression ) .)
    -               reduce using rule 91 (builtIn -> ORD ( expression ) .)
    *               reduce using rule 91 (builtIn -> ORD ( expression ) .)
    /               reduce using rule 91 (builtIn -> ORD ( expression ) .)
    DIV             reduce using rule 91 (builtIn -> ORD ( expression ) .)
    MOD             reduce using rule 91 (builtIn -> ORD ( expression ) .)
    ;               reduce using rule 91 (builtIn -> ORD ( expression ) .)
    OF              reduce using rule 91 (builtIn -> ORD ( expression ) .)
    THEN            reduce using rule 91 (builtIn -> ORD ( expression ) .)
    DO              reduce using rule 91 (builtIn -> ORD ( expression ) .)
    ]               reduce using rule 91 (builtIn -> ORD ( expression ) .)
    :               reduce using rule 91 (builtIn -> ORD ( expression ) .)
    TO              reduce using rule 91 (builtIn -> ORD ( expression ) .)
    BY              reduce using rule 91 (builtIn -> ORD ( expression ) .)
    ASSIGN          reduce using rule 91 (builtIn -> ORD ( expression ) .)


state 240

    (64) statement -> LOOP boolMarker statementList END .

    ;               reduce using rule 64 (statement -> LOOP boolMarker statementList END .)


state 241

    (75) statement -> INC ( designator checkConstant . )
    (76) statement -> INC ( designator checkConstant . , expression )

    )               shift and go to state 267
    ,               shift and go to state 268


state 242

    (27) receiver -> ( optionalVAR ID : ID . )

    )               shift and go to state 269


state 243

    (38) formalParameter -> optionalVAR . identifierList : type
    (18) identifierList -> . ID
    (19) identifierList -> . ID , identifierList

    ID              shift and go to state 22

    identifierList                 shift and go to state 270

state 244

    (36) formalParameterList -> formalParameter . ; formalParameterList
    (37) formalParameterList -> formalParameter .

    ;               shift and go to state 271
    )               reduce using rule 37 (formalParameterList -> formalParameter .)


state 245

    (34) optionalFormalParameterList -> formalParameterList .

    )               reduce using rule 34 (optionalFormalParameterList -> formalParameterList .)


state 246

    (31) optionalFormalParameters -> ( optionalFormalParameterList . ) : qualident
    (32) optionalFormalParameters -> ( optionalFormalParameterList . )

    )               shift and go to state 272


state 247

    (23) procedureDeclaration -> PROCEDURE receiver ID createTable optionalFormalParameters ; . declarationList insertEntry statementBlock END ID popTable
    (9) declarationList -> . identifierDeclarationList procedureDeclarationList
    (10) identifierDeclarationList -> . CONST constantDeclarationList identifierDeclarationList
    (11) identifierDeclarationList -> . VAR variableDeclarationList identifierDeclarationList
    (12) identifierDeclarationList -> .

    CONST           shift and go to state 10
    VAR             shift and go to state 9
    PROCEDURE       reduce using rule 12 (identifierDeclarationList -> .)
    BEGIN           reduce using rule 12 (identifierDeclarationList -> .)
    END             reduce using rule 12 (identifierDeclarationList -> .)

    declarationList                shift and go to state 273
    identifierDeclarationList      shift and go to state 8

state 248

    (39) forwardDeclaration -> PROCEDURE ^ receiver ID createTable optionalFormalParameters . popTable2
    (40) popTable2 -> .

    ;               reduce using rule 40 (popTable2 -> .)

    popTable2                      shift and go to state 274

state 249

    (110) type -> POINTER TO ARRAY expression . OF type
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    OF              shift and go to state 275
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 250

    (15) variableDeclarationList -> identifierList : type ; clearVariables variableDeclarationList .

    CONST           reduce using rule 15 (variableDeclarationList -> identifierList : type ; clearVariables variableDeclarationList .)
    VAR             reduce using rule 15 (variableDeclarationList -> identifierList : type ; clearVariables variableDeclarationList .)
    PROCEDURE       reduce using rule 15 (variableDeclarationList -> identifierList : type ; clearVariables variableDeclarationList .)
    BEGIN           reduce using rule 15 (variableDeclarationList -> identifierList : type ; clearVariables variableDeclarationList .)
    END             reduce using rule 15 (variableDeclarationList -> identifierList : type ; clearVariables variableDeclarationList .)


state 251

    (109) type -> ARRAY expression OF type .

    ;               reduce using rule 109 (type -> ARRAY expression OF type .)
    )               reduce using rule 109 (type -> ARRAY expression OF type .)


state 252

    (119) expression -> expression & boolMarker expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               reduce using rule 119 (expression -> expression & boolMarker expression .)
    OR              reduce using rule 119 (expression -> expression & boolMarker expression .)
    &               reduce using rule 119 (expression -> expression & boolMarker expression .)
    #               reduce using rule 119 (expression -> expression & boolMarker expression .)
    =               reduce using rule 119 (expression -> expression & boolMarker expression .)
    )               reduce using rule 119 (expression -> expression & boolMarker expression .)
    ;               reduce using rule 119 (expression -> expression & boolMarker expression .)
    OF              reduce using rule 119 (expression -> expression & boolMarker expression .)
    THEN            reduce using rule 119 (expression -> expression & boolMarker expression .)
    DO              reduce using rule 119 (expression -> expression & boolMarker expression .)
    ,               reduce using rule 119 (expression -> expression & boolMarker expression .)
    ]               reduce using rule 119 (expression -> expression & boolMarker expression .)
    TO              reduce using rule 119 (expression -> expression & boolMarker expression .)
    BY              reduce using rule 119 (expression -> expression & boolMarker expression .)
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144

  ! <               [ reduce using rule 119 (expression -> expression & boolMarker expression .) ]
  ! LESSEQUAL       [ reduce using rule 119 (expression -> expression & boolMarker expression .) ]
  ! >               [ reduce using rule 119 (expression -> expression & boolMarker expression .) ]
  ! MOREEQUAL       [ reduce using rule 119 (expression -> expression & boolMarker expression .) ]
  ! +               [ reduce using rule 119 (expression -> expression & boolMarker expression .) ]
  ! -               [ reduce using rule 119 (expression -> expression & boolMarker expression .) ]
  ! *               [ reduce using rule 119 (expression -> expression & boolMarker expression .) ]
  ! /               [ reduce using rule 119 (expression -> expression & boolMarker expression .) ]
  ! DIV             [ reduce using rule 119 (expression -> expression & boolMarker expression .) ]
  ! MOD             [ reduce using rule 119 (expression -> expression & boolMarker expression .) ]
  ! OR              [ shift and go to state 143 ]
  ! &               [ shift and go to state 136 ]
  ! #               [ shift and go to state 135 ]
  ! =               [ shift and go to state 138 ]


state 253

    (118) expression -> expression OR boolMarker expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    :               reduce using rule 118 (expression -> expression OR boolMarker expression .)
    OR              reduce using rule 118 (expression -> expression OR boolMarker expression .)
    #               reduce using rule 118 (expression -> expression OR boolMarker expression .)
    =               reduce using rule 118 (expression -> expression OR boolMarker expression .)
    )               reduce using rule 118 (expression -> expression OR boolMarker expression .)
    ;               reduce using rule 118 (expression -> expression OR boolMarker expression .)
    OF              reduce using rule 118 (expression -> expression OR boolMarker expression .)
    THEN            reduce using rule 118 (expression -> expression OR boolMarker expression .)
    DO              reduce using rule 118 (expression -> expression OR boolMarker expression .)
    ,               reduce using rule 118 (expression -> expression OR boolMarker expression .)
    ]               reduce using rule 118 (expression -> expression OR boolMarker expression .)
    TO              reduce using rule 118 (expression -> expression OR boolMarker expression .)
    BY              reduce using rule 118 (expression -> expression OR boolMarker expression .)
    &               shift and go to state 136
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144

  ! &               [ reduce using rule 118 (expression -> expression OR boolMarker expression .) ]
  ! <               [ reduce using rule 118 (expression -> expression OR boolMarker expression .) ]
  ! LESSEQUAL       [ reduce using rule 118 (expression -> expression OR boolMarker expression .) ]
  ! >               [ reduce using rule 118 (expression -> expression OR boolMarker expression .) ]
  ! MOREEQUAL       [ reduce using rule 118 (expression -> expression OR boolMarker expression .) ]
  ! +               [ reduce using rule 118 (expression -> expression OR boolMarker expression .) ]
  ! -               [ reduce using rule 118 (expression -> expression OR boolMarker expression .) ]
  ! *               [ reduce using rule 118 (expression -> expression OR boolMarker expression .) ]
  ! /               [ reduce using rule 118 (expression -> expression OR boolMarker expression .) ]
  ! DIV             [ reduce using rule 118 (expression -> expression OR boolMarker expression .) ]
  ! MOD             [ reduce using rule 118 (expression -> expression OR boolMarker expression .) ]
  ! OR              [ shift and go to state 143 ]
  ! #               [ shift and go to state 135 ]
  ! =               [ shift and go to state 138 ]


state 254

    (57) statement -> WHILE boolMarker expression DO boolMarker . statementList END
    (44) statementList -> . statementList boolMarker statement ;
    (45) statementList -> . statement ;
    (46) statementList -> .
    (47) statement -> . IF expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END
    (52) statement -> . CASE expression OF caseList optionalElse END
    (57) statement -> . WHILE boolMarker expression DO boolMarker statementList END
    (58) statement -> . REPEAT boolMarker statementList UNTIL boolMarker expression
    (59) statement -> . FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END
    (64) statement -> . LOOP boolMarker statementList END
    (65) statement -> . EXIT
    (66) statement -> . READINT ( designator )
    (67) statement -> . READREAL ( designator )
    (68) statement -> . RETURN
    (69) statement -> . RETURN expression
    (70) statement -> . designator
    (71) statement -> . designator checkConstant ASSIGN expression
    (73) statement -> . DEC ( designator checkConstant )
    (74) statement -> . DEC ( designator checkConstant , expression )
    (75) statement -> . INC ( designator checkConstant )
    (76) statement -> . INC ( designator checkConstant , expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for READINT resolved as shift
  ! shift/reduce conflict for READREAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ABS resolved as shift
  ! shift/reduce conflict for SIZE resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAX resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
  ! shift/reduce conflict for CAP resolved as shift
    END             reduce using rule 46 (statementList -> .)
    IF              shift and go to state 60
    CASE            shift and go to state 48
    WHILE           shift and go to state 45
    REPEAT          shift and go to state 54
    FOR             shift and go to state 55
    LOOP            shift and go to state 65
    EXIT            shift and go to state 63
    READINT         shift and go to state 56
    READREAL        shift and go to state 46
    RETURN          shift and go to state 43
    DEC             shift and go to state 49
    INC             shift and go to state 66
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

  ! IF              [ reduce using rule 46 (statementList -> .) ]
  ! CASE            [ reduce using rule 46 (statementList -> .) ]
  ! WHILE           [ reduce using rule 46 (statementList -> .) ]
  ! REPEAT          [ reduce using rule 46 (statementList -> .) ]
  ! FOR             [ reduce using rule 46 (statementList -> .) ]
  ! LOOP            [ reduce using rule 46 (statementList -> .) ]
  ! EXIT            [ reduce using rule 46 (statementList -> .) ]
  ! READINT         [ reduce using rule 46 (statementList -> .) ]
  ! READREAL        [ reduce using rule 46 (statementList -> .) ]
  ! RETURN          [ reduce using rule 46 (statementList -> .) ]
  ! DEC             [ reduce using rule 46 (statementList -> .) ]
  ! INC             [ reduce using rule 46 (statementList -> .) ]
  ! ID              [ reduce using rule 46 (statementList -> .) ]
  ! ABS             [ reduce using rule 46 (statementList -> .) ]
  ! SIZE            [ reduce using rule 46 (statementList -> .) ]
  ! MIN             [ reduce using rule 46 (statementList -> .) ]
  ! MAX             [ reduce using rule 46 (statementList -> .) ]
  ! CHR             [ reduce using rule 46 (statementList -> .) ]
  ! ORD             [ reduce using rule 46 (statementList -> .) ]
  ! CAP             [ reduce using rule 46 (statementList -> .) ]

    designator                     shift and go to state 57
    builtIn                        shift and go to state 58
    statementList                  shift and go to state 276
    statement                      shift and go to state 52

state 255

    (50) optionalElse -> ELSE . statementList
    (44) statementList -> . statementList boolMarker statement ;
    (45) statementList -> . statement ;
    (46) statementList -> .
    (47) statement -> . IF expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END
    (52) statement -> . CASE expression OF caseList optionalElse END
    (57) statement -> . WHILE boolMarker expression DO boolMarker statementList END
    (58) statement -> . REPEAT boolMarker statementList UNTIL boolMarker expression
    (59) statement -> . FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END
    (64) statement -> . LOOP boolMarker statementList END
    (65) statement -> . EXIT
    (66) statement -> . READINT ( designator )
    (67) statement -> . READREAL ( designator )
    (68) statement -> . RETURN
    (69) statement -> . RETURN expression
    (70) statement -> . designator
    (71) statement -> . designator checkConstant ASSIGN expression
    (73) statement -> . DEC ( designator checkConstant )
    (74) statement -> . DEC ( designator checkConstant , expression )
    (75) statement -> . INC ( designator checkConstant )
    (76) statement -> . INC ( designator checkConstant , expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for READINT resolved as shift
  ! shift/reduce conflict for READREAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ABS resolved as shift
  ! shift/reduce conflict for SIZE resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAX resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
  ! shift/reduce conflict for CAP resolved as shift
    END             reduce using rule 46 (statementList -> .)
    IF              shift and go to state 60
    CASE            shift and go to state 48
    WHILE           shift and go to state 45
    REPEAT          shift and go to state 54
    FOR             shift and go to state 55
    LOOP            shift and go to state 65
    EXIT            shift and go to state 63
    READINT         shift and go to state 56
    READREAL        shift and go to state 46
    RETURN          shift and go to state 43
    DEC             shift and go to state 49
    INC             shift and go to state 66
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

  ! IF              [ reduce using rule 46 (statementList -> .) ]
  ! CASE            [ reduce using rule 46 (statementList -> .) ]
  ! WHILE           [ reduce using rule 46 (statementList -> .) ]
  ! REPEAT          [ reduce using rule 46 (statementList -> .) ]
  ! FOR             [ reduce using rule 46 (statementList -> .) ]
  ! LOOP            [ reduce using rule 46 (statementList -> .) ]
  ! EXIT            [ reduce using rule 46 (statementList -> .) ]
  ! READINT         [ reduce using rule 46 (statementList -> .) ]
  ! READREAL        [ reduce using rule 46 (statementList -> .) ]
  ! RETURN          [ reduce using rule 46 (statementList -> .) ]
  ! DEC             [ reduce using rule 46 (statementList -> .) ]
  ! INC             [ reduce using rule 46 (statementList -> .) ]
  ! ID              [ reduce using rule 46 (statementList -> .) ]
  ! ABS             [ reduce using rule 46 (statementList -> .) ]
  ! SIZE            [ reduce using rule 46 (statementList -> .) ]
  ! MIN             [ reduce using rule 46 (statementList -> .) ]
  ! MAX             [ reduce using rule 46 (statementList -> .) ]
  ! CHR             [ reduce using rule 46 (statementList -> .) ]
  ! ORD             [ reduce using rule 46 (statementList -> .) ]
  ! CAP             [ reduce using rule 46 (statementList -> .) ]

    designator                     shift and go to state 57
    builtIn                        shift and go to state 58
    statementList                  shift and go to state 277
    statement                      shift and go to state 52

state 256

    (52) statement -> CASE expression OF caseList optionalElse . END

    END             shift and go to state 278


state 257

    (53) caseList -> case | . caseList
    (53) caseList -> . case | caseList
    (54) caseList -> . case
    (55) case -> . expression : statementList
    (56) case -> .
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    |               reduce using rule 56 (case -> .)
    ELSE            reduce using rule 56 (case -> .)
    END             reduce using rule 56 (case -> .)
    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    case                           shift and go to state 215
    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    caseList                       shift and go to state 279
    expression                     shift and go to state 216

state 258

    (55) case -> expression : . statementList
    (44) statementList -> . statementList boolMarker statement ;
    (45) statementList -> . statement ;
    (46) statementList -> .
    (47) statement -> . IF expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END
    (52) statement -> . CASE expression OF caseList optionalElse END
    (57) statement -> . WHILE boolMarker expression DO boolMarker statementList END
    (58) statement -> . REPEAT boolMarker statementList UNTIL boolMarker expression
    (59) statement -> . FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END
    (64) statement -> . LOOP boolMarker statementList END
    (65) statement -> . EXIT
    (66) statement -> . READINT ( designator )
    (67) statement -> . READREAL ( designator )
    (68) statement -> . RETURN
    (69) statement -> . RETURN expression
    (70) statement -> . designator
    (71) statement -> . designator checkConstant ASSIGN expression
    (73) statement -> . DEC ( designator checkConstant )
    (74) statement -> . DEC ( designator checkConstant , expression )
    (75) statement -> . INC ( designator checkConstant )
    (76) statement -> . INC ( designator checkConstant , expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for READINT resolved as shift
  ! shift/reduce conflict for READREAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ABS resolved as shift
  ! shift/reduce conflict for SIZE resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAX resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
  ! shift/reduce conflict for CAP resolved as shift
    |               reduce using rule 46 (statementList -> .)
    ELSE            reduce using rule 46 (statementList -> .)
    END             reduce using rule 46 (statementList -> .)
    IF              shift and go to state 60
    CASE            shift and go to state 48
    WHILE           shift and go to state 45
    REPEAT          shift and go to state 54
    FOR             shift and go to state 55
    LOOP            shift and go to state 65
    EXIT            shift and go to state 63
    READINT         shift and go to state 56
    READREAL        shift and go to state 46
    RETURN          shift and go to state 43
    DEC             shift and go to state 49
    INC             shift and go to state 66
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

  ! IF              [ reduce using rule 46 (statementList -> .) ]
  ! CASE            [ reduce using rule 46 (statementList -> .) ]
  ! WHILE           [ reduce using rule 46 (statementList -> .) ]
  ! REPEAT          [ reduce using rule 46 (statementList -> .) ]
  ! FOR             [ reduce using rule 46 (statementList -> .) ]
  ! LOOP            [ reduce using rule 46 (statementList -> .) ]
  ! EXIT            [ reduce using rule 46 (statementList -> .) ]
  ! READINT         [ reduce using rule 46 (statementList -> .) ]
  ! READREAL        [ reduce using rule 46 (statementList -> .) ]
  ! RETURN          [ reduce using rule 46 (statementList -> .) ]
  ! DEC             [ reduce using rule 46 (statementList -> .) ]
  ! INC             [ reduce using rule 46 (statementList -> .) ]
  ! ID              [ reduce using rule 46 (statementList -> .) ]
  ! ABS             [ reduce using rule 46 (statementList -> .) ]
  ! SIZE            [ reduce using rule 46 (statementList -> .) ]
  ! MIN             [ reduce using rule 46 (statementList -> .) ]
  ! MAX             [ reduce using rule 46 (statementList -> .) ]
  ! CHR             [ reduce using rule 46 (statementList -> .) ]
  ! ORD             [ reduce using rule 46 (statementList -> .) ]
  ! CAP             [ reduce using rule 46 (statementList -> .) ]

    designator                     shift and go to state 57
    builtIn                        shift and go to state 58
    statementList                  shift and go to state 280
    statement                      shift and go to state 52

state 259

    (73) statement -> DEC ( designator checkConstant ) .

    ;               reduce using rule 73 (statement -> DEC ( designator checkConstant ) .)


state 260

    (74) statement -> DEC ( designator checkConstant , . expression )
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 281

state 261

    (98) suffix -> ( optionalExpressionList ) suffix .

    ASSIGN          reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    ;               reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    OR              reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    &               reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    #               reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    =               reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    <               reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    LESSEQUAL       reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    >               reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    MOREEQUAL       reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    +               reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    -               reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    *               reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    /               reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    DIV             reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    MOD             reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    OF              reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    THEN            reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    )               reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    DO              reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    ,               reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    ]               reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    :               reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    TO              reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)
    BY              reduce using rule 98 (suffix -> ( optionalExpressionList ) suffix .)


state 262

    (111) expressionList -> expression , expressionList .

    )               reduce using rule 111 (expressionList -> expression , expressionList .)
    ]               reduce using rule 111 (expressionList -> expression , expressionList .)


state 263

    (96) suffix -> [ optionalExpressionList ] suffix .

    ASSIGN          reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    ;               reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    OR              reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    &               reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    #               reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    =               reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    <               reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    LESSEQUAL       reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    >               reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    MOREEQUAL       reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    +               reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    -               reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    *               reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    /               reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    DIV             reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    MOD             reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    OF              reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    THEN            reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    )               reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    DO              reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    ,               reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    ]               reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    :               reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    TO              reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)
    BY              reduce using rule 96 (suffix -> [ optionalExpressionList ] suffix .)


state 264

    (58) statement -> REPEAT boolMarker statementList UNTIL boolMarker . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 282

state 265

    (59) statement -> FOR ID ASSIGN expression forAssign . TO expression toValue optionalBY DO boolMarker statementList boolMarker END

    TO              shift and go to state 283


state 266

    (47) statement -> IF expression THEN boolMarker statementList . nMarker boolMarker elsifList optionalElse END
    (44) statementList -> statementList . boolMarker statement ;
    (117) nMarker -> .
    (116) boolMarker -> .

    ELSIF           reduce using rule 117 (nMarker -> .)
    ELSE            reduce using rule 117 (nMarker -> .)
    END             reduce using rule 117 (nMarker -> .)
    IF              reduce using rule 116 (boolMarker -> .)
    CASE            reduce using rule 116 (boolMarker -> .)
    WHILE           reduce using rule 116 (boolMarker -> .)
    REPEAT          reduce using rule 116 (boolMarker -> .)
    FOR             reduce using rule 116 (boolMarker -> .)
    LOOP            reduce using rule 116 (boolMarker -> .)
    EXIT            reduce using rule 116 (boolMarker -> .)
    READINT         reduce using rule 116 (boolMarker -> .)
    READREAL        reduce using rule 116 (boolMarker -> .)
    RETURN          reduce using rule 116 (boolMarker -> .)
    DEC             reduce using rule 116 (boolMarker -> .)
    INC             reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 227
    nMarker                        shift and go to state 284

state 267

    (75) statement -> INC ( designator checkConstant ) .

    ;               reduce using rule 75 (statement -> INC ( designator checkConstant ) .)


state 268

    (76) statement -> INC ( designator checkConstant , . expression )
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 285

state 269

    (27) receiver -> ( optionalVAR ID : ID ) .

    ID              reduce using rule 27 (receiver -> ( optionalVAR ID : ID ) .)


state 270

    (38) formalParameter -> optionalVAR identifierList . : type

    :               shift and go to state 286


state 271

    (36) formalParameterList -> formalParameter ; . formalParameterList
    (36) formalParameterList -> . formalParameter ; formalParameterList
    (37) formalParameterList -> . formalParameter
    (38) formalParameter -> . optionalVAR identifierList : type
    (29) optionalVAR -> . VAR
    (30) optionalVAR -> .

    VAR             shift and go to state 70
    ID              reduce using rule 30 (optionalVAR -> .)

    formalParameter                shift and go to state 244
    optionalVAR                    shift and go to state 243
    formalParameterList            shift and go to state 287

state 272

    (31) optionalFormalParameters -> ( optionalFormalParameterList ) . : qualident
    (32) optionalFormalParameters -> ( optionalFormalParameterList ) .

    :               shift and go to state 288
    ;               reduce using rule 32 (optionalFormalParameters -> ( optionalFormalParameterList ) .)


state 273

    (23) procedureDeclaration -> PROCEDURE receiver ID createTable optionalFormalParameters ; declarationList . insertEntry statementBlock END ID popTable
    (24) insertEntry -> .

    BEGIN           reduce using rule 24 (insertEntry -> .)
    END             reduce using rule 24 (insertEntry -> .)

    insertEntry                    shift and go to state 289

state 274

    (39) forwardDeclaration -> PROCEDURE ^ receiver ID createTable optionalFormalParameters popTable2 .

    ;               reduce using rule 39 (forwardDeclaration -> PROCEDURE ^ receiver ID createTable optionalFormalParameters popTable2 .)


state 275

    (110) type -> POINTER TO ARRAY expression OF . type
    (108) type -> . qualident
    (109) type -> . ARRAY expression OF type
    (110) type -> . POINTER TO ARRAY expression OF type
    (102) qualident -> . ID
    (103) qualident -> . ID . ID
    (104) qualident -> . INTEGER
    (105) qualident -> . CHAR
    (106) qualident -> . REAL
    (107) qualident -> . BOOLEAN

    ARRAY           shift and go to state 80
    POINTER         shift and go to state 75
    ID              shift and go to state 81
    INTEGER         shift and go to state 78
    CHAR            shift and go to state 76
    REAL            shift and go to state 73
    BOOLEAN         shift and go to state 77

    type                           shift and go to state 290
    qualident                      shift and go to state 74

state 276

    (57) statement -> WHILE boolMarker expression DO boolMarker statementList . END
    (44) statementList -> statementList . boolMarker statement ;
    (116) boolMarker -> .

    END             shift and go to state 291
    IF              reduce using rule 116 (boolMarker -> .)
    CASE            reduce using rule 116 (boolMarker -> .)
    WHILE           reduce using rule 116 (boolMarker -> .)
    REPEAT          reduce using rule 116 (boolMarker -> .)
    FOR             reduce using rule 116 (boolMarker -> .)
    LOOP            reduce using rule 116 (boolMarker -> .)
    EXIT            reduce using rule 116 (boolMarker -> .)
    READINT         reduce using rule 116 (boolMarker -> .)
    READREAL        reduce using rule 116 (boolMarker -> .)
    RETURN          reduce using rule 116 (boolMarker -> .)
    DEC             reduce using rule 116 (boolMarker -> .)
    INC             reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 227

state 277

    (50) optionalElse -> ELSE statementList .
    (44) statementList -> statementList . boolMarker statement ;
    (116) boolMarker -> .

    END             reduce using rule 50 (optionalElse -> ELSE statementList .)
    IF              reduce using rule 116 (boolMarker -> .)
    CASE            reduce using rule 116 (boolMarker -> .)
    WHILE           reduce using rule 116 (boolMarker -> .)
    REPEAT          reduce using rule 116 (boolMarker -> .)
    FOR             reduce using rule 116 (boolMarker -> .)
    LOOP            reduce using rule 116 (boolMarker -> .)
    EXIT            reduce using rule 116 (boolMarker -> .)
    READINT         reduce using rule 116 (boolMarker -> .)
    READREAL        reduce using rule 116 (boolMarker -> .)
    RETURN          reduce using rule 116 (boolMarker -> .)
    DEC             reduce using rule 116 (boolMarker -> .)
    INC             reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 227

state 278

    (52) statement -> CASE expression OF caseList optionalElse END .

    ;               reduce using rule 52 (statement -> CASE expression OF caseList optionalElse END .)


state 279

    (53) caseList -> case | caseList .

    ELSE            reduce using rule 53 (caseList -> case | caseList .)
    END             reduce using rule 53 (caseList -> case | caseList .)


state 280

    (55) case -> expression : statementList .
    (44) statementList -> statementList . boolMarker statement ;
    (116) boolMarker -> .

    |               reduce using rule 55 (case -> expression : statementList .)
    ELSE            reduce using rule 55 (case -> expression : statementList .)
    END             reduce using rule 55 (case -> expression : statementList .)
    IF              reduce using rule 116 (boolMarker -> .)
    CASE            reduce using rule 116 (boolMarker -> .)
    WHILE           reduce using rule 116 (boolMarker -> .)
    REPEAT          reduce using rule 116 (boolMarker -> .)
    FOR             reduce using rule 116 (boolMarker -> .)
    LOOP            reduce using rule 116 (boolMarker -> .)
    EXIT            reduce using rule 116 (boolMarker -> .)
    READINT         reduce using rule 116 (boolMarker -> .)
    READREAL        reduce using rule 116 (boolMarker -> .)
    RETURN          reduce using rule 116 (boolMarker -> .)
    DEC             reduce using rule 116 (boolMarker -> .)
    INC             reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 227

state 281

    (74) statement -> DEC ( designator checkConstant , expression . )
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    )               shift and go to state 292
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 282

    (58) statement -> REPEAT boolMarker statementList UNTIL boolMarker expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    ;               reduce using rule 58 (statement -> REPEAT boolMarker statementList UNTIL boolMarker expression .)
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 283

    (59) statement -> FOR ID ASSIGN expression forAssign TO . expression toValue optionalBY DO boolMarker statementList boolMarker END
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 293

state 284

    (47) statement -> IF expression THEN boolMarker statementList nMarker . boolMarker elsifList optionalElse END
    (116) boolMarker -> .

    ELSIF           reduce using rule 116 (boolMarker -> .)
    ELSE            reduce using rule 116 (boolMarker -> .)
    END             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 294

state 285

    (76) statement -> INC ( designator checkConstant , expression . )
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    )               shift and go to state 295
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 286

    (38) formalParameter -> optionalVAR identifierList : . type
    (108) type -> . qualident
    (109) type -> . ARRAY expression OF type
    (110) type -> . POINTER TO ARRAY expression OF type
    (102) qualident -> . ID
    (103) qualident -> . ID . ID
    (104) qualident -> . INTEGER
    (105) qualident -> . CHAR
    (106) qualident -> . REAL
    (107) qualident -> . BOOLEAN

    ARRAY           shift and go to state 80
    POINTER         shift and go to state 75
    ID              shift and go to state 81
    INTEGER         shift and go to state 78
    CHAR            shift and go to state 76
    REAL            shift and go to state 73
    BOOLEAN         shift and go to state 77

    type                           shift and go to state 296
    qualident                      shift and go to state 74

state 287

    (36) formalParameterList -> formalParameter ; formalParameterList .

    )               reduce using rule 36 (formalParameterList -> formalParameter ; formalParameterList .)


state 288

    (31) optionalFormalParameters -> ( optionalFormalParameterList ) : . qualident
    (102) qualident -> . ID
    (103) qualident -> . ID . ID
    (104) qualident -> . INTEGER
    (105) qualident -> . CHAR
    (106) qualident -> . REAL
    (107) qualident -> . BOOLEAN

    ID              shift and go to state 81
    INTEGER         shift and go to state 78
    CHAR            shift and go to state 76
    REAL            shift and go to state 73
    BOOLEAN         shift and go to state 77

    qualident                      shift and go to state 297

state 289

    (23) procedureDeclaration -> PROCEDURE receiver ID createTable optionalFormalParameters ; declarationList insertEntry . statementBlock END ID popTable
    (41) statementBlock -> . BEGIN beginquad statementList boolMarker
    (42) statementBlock -> .

    BEGIN           shift and go to state 15
    END             reduce using rule 42 (statementBlock -> .)

    statementBlock                 shift and go to state 298

state 290

    (110) type -> POINTER TO ARRAY expression OF type .

    ;               reduce using rule 110 (type -> POINTER TO ARRAY expression OF type .)
    )               reduce using rule 110 (type -> POINTER TO ARRAY expression OF type .)


state 291

    (57) statement -> WHILE boolMarker expression DO boolMarker statementList END .

    ;               reduce using rule 57 (statement -> WHILE boolMarker expression DO boolMarker statementList END .)


state 292

    (74) statement -> DEC ( designator checkConstant , expression ) .

    ;               reduce using rule 74 (statement -> DEC ( designator checkConstant , expression ) .)


state 293

    (59) statement -> FOR ID ASSIGN expression forAssign TO expression . toValue optionalBY DO boolMarker statementList boolMarker END
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression
    (61) toValue -> .

    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144
    BY              reduce using rule 61 (toValue -> .)
    DO              reduce using rule 61 (toValue -> .)

    toValue                        shift and go to state 299

state 294

    (47) statement -> IF expression THEN boolMarker statementList nMarker boolMarker . elsifList optionalElse END
    (48) elsifList -> . ELSIF expression THEN boolMarker statementList nMarker boolMarker elsifList
    (49) elsifList -> .

    ELSIF           shift and go to state 301
    ELSE            reduce using rule 49 (elsifList -> .)
    END             reduce using rule 49 (elsifList -> .)

    elsifList                      shift and go to state 300

state 295

    (76) statement -> INC ( designator checkConstant , expression ) .

    ;               reduce using rule 76 (statement -> INC ( designator checkConstant , expression ) .)


state 296

    (38) formalParameter -> optionalVAR identifierList : type .

    ;               reduce using rule 38 (formalParameter -> optionalVAR identifierList : type .)
    )               reduce using rule 38 (formalParameter -> optionalVAR identifierList : type .)


state 297

    (31) optionalFormalParameters -> ( optionalFormalParameterList ) : qualident .

    ;               reduce using rule 31 (optionalFormalParameters -> ( optionalFormalParameterList ) : qualident .)


state 298

    (23) procedureDeclaration -> PROCEDURE receiver ID createTable optionalFormalParameters ; declarationList insertEntry statementBlock . END ID popTable

    END             shift and go to state 302


state 299

    (59) statement -> FOR ID ASSIGN expression forAssign TO expression toValue . optionalBY DO boolMarker statementList boolMarker END
    (62) optionalBY -> . BY expression
    (63) optionalBY -> .

    BY              shift and go to state 303
    DO              reduce using rule 63 (optionalBY -> .)

    optionalBY                     shift and go to state 304

state 300

    (47) statement -> IF expression THEN boolMarker statementList nMarker boolMarker elsifList . optionalElse END
    (50) optionalElse -> . ELSE statementList
    (51) optionalElse -> .

    ELSE            shift and go to state 255
    END             reduce using rule 51 (optionalElse -> .)

    optionalElse                   shift and go to state 305

state 301

    (48) elsifList -> ELSIF . expression THEN boolMarker statementList nMarker boolMarker elsifList
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 306

state 302

    (23) procedureDeclaration -> PROCEDURE receiver ID createTable optionalFormalParameters ; declarationList insertEntry statementBlock END . ID popTable

    ID              shift and go to state 307


state 303

    (62) optionalBY -> BY . expression
    (113) expression -> . - expression
    (114) expression -> . + expression
    (115) expression -> . factor
    (118) expression -> . expression OR boolMarker expression
    (119) expression -> . expression & boolMarker expression
    (120) expression -> . expression # expression
    (121) expression -> . expression = expression
    (122) expression -> . expression < expression
    (123) expression -> . expression LESSEQUAL expression
    (124) expression -> . expression > expression
    (125) expression -> . expression MOREEQUAL expression
    (126) expression -> . expression + expression
    (127) expression -> . expression - expression
    (128) expression -> . expression * expression
    (129) expression -> . expression / expression
    (130) expression -> . expression DIV expression
    (131) expression -> . expression MOD expression
    (132) factor -> . NIL
    (133) factor -> . designator
    (134) factor -> . INTEGERCONSTANT
    (135) factor -> . CHARACTERCONSTANT
    (136) factor -> . REALCONSTANT
    (137) factor -> . STRINGCONSTANT
    (138) factor -> . BOOLEANCONSTANT
    (139) factor -> . ~ factor
    (140) factor -> . ( expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    -               shift and go to state 88
    +               shift and go to state 87
    NIL             shift and go to state 93
    INTEGERCONSTANT shift and go to state 84
    CHARACTERCONSTANT shift and go to state 91
    REALCONSTANT    shift and go to state 90
    STRINGCONSTANT  shift and go to state 83
    BOOLEANCONSTANT shift and go to state 85
    ~               shift and go to state 94
    (               shift and go to state 86
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 92
    builtIn                        shift and go to state 58
    factor                         shift and go to state 89
    expression                     shift and go to state 308

state 304

    (59) statement -> FOR ID ASSIGN expression forAssign TO expression toValue optionalBY . DO boolMarker statementList boolMarker END

    DO              shift and go to state 309


state 305

    (47) statement -> IF expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse . END

    END             shift and go to state 310


state 306

    (48) elsifList -> ELSIF expression . THEN boolMarker statementList nMarker boolMarker elsifList
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    THEN            shift and go to state 311
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 307

    (23) procedureDeclaration -> PROCEDURE receiver ID createTable optionalFormalParameters ; declarationList insertEntry statementBlock END ID . popTable
    (25) popTable -> .

    ;               reduce using rule 25 (popTable -> .)

    popTable                       shift and go to state 312

state 308

    (62) optionalBY -> BY expression .
    (118) expression -> expression . OR boolMarker expression
    (119) expression -> expression . & boolMarker expression
    (120) expression -> expression . # expression
    (121) expression -> expression . = expression
    (122) expression -> expression . < expression
    (123) expression -> expression . LESSEQUAL expression
    (124) expression -> expression . > expression
    (125) expression -> expression . MOREEQUAL expression
    (126) expression -> expression . + expression
    (127) expression -> expression . - expression
    (128) expression -> expression . * expression
    (129) expression -> expression . / expression
    (130) expression -> expression . DIV expression
    (131) expression -> expression . MOD expression

    DO              reduce using rule 62 (optionalBY -> BY expression .)
    OR              shift and go to state 143
    &               shift and go to state 136
    #               shift and go to state 135
    =               shift and go to state 138
    <               shift and go to state 137
    LESSEQUAL       shift and go to state 145
    >               shift and go to state 148
    MOREEQUAL       shift and go to state 134
    +               shift and go to state 139
    -               shift and go to state 141
    *               shift and go to state 140
    /               shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 144


state 309

    (59) statement -> FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO . boolMarker statementList boolMarker END
    (116) boolMarker -> .

    IF              reduce using rule 116 (boolMarker -> .)
    CASE            reduce using rule 116 (boolMarker -> .)
    WHILE           reduce using rule 116 (boolMarker -> .)
    REPEAT          reduce using rule 116 (boolMarker -> .)
    FOR             reduce using rule 116 (boolMarker -> .)
    LOOP            reduce using rule 116 (boolMarker -> .)
    EXIT            reduce using rule 116 (boolMarker -> .)
    READINT         reduce using rule 116 (boolMarker -> .)
    READREAL        reduce using rule 116 (boolMarker -> .)
    RETURN          reduce using rule 116 (boolMarker -> .)
    DEC             reduce using rule 116 (boolMarker -> .)
    INC             reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)
    END             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 313

state 310

    (47) statement -> IF expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END .

    ;               reduce using rule 47 (statement -> IF expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END .)


state 311

    (48) elsifList -> ELSIF expression THEN . boolMarker statementList nMarker boolMarker elsifList
    (116) boolMarker -> .

    IF              reduce using rule 116 (boolMarker -> .)
    CASE            reduce using rule 116 (boolMarker -> .)
    WHILE           reduce using rule 116 (boolMarker -> .)
    REPEAT          reduce using rule 116 (boolMarker -> .)
    FOR             reduce using rule 116 (boolMarker -> .)
    LOOP            reduce using rule 116 (boolMarker -> .)
    EXIT            reduce using rule 116 (boolMarker -> .)
    READINT         reduce using rule 116 (boolMarker -> .)
    READREAL        reduce using rule 116 (boolMarker -> .)
    RETURN          reduce using rule 116 (boolMarker -> .)
    DEC             reduce using rule 116 (boolMarker -> .)
    INC             reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)
    ELSIF           reduce using rule 116 (boolMarker -> .)
    ELSE            reduce using rule 116 (boolMarker -> .)
    END             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 314

state 312

    (23) procedureDeclaration -> PROCEDURE receiver ID createTable optionalFormalParameters ; declarationList insertEntry statementBlock END ID popTable .

    ;               reduce using rule 23 (procedureDeclaration -> PROCEDURE receiver ID createTable optionalFormalParameters ; declarationList insertEntry statementBlock END ID popTable .)


state 313

    (59) statement -> FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker . statementList boolMarker END
    (44) statementList -> . statementList boolMarker statement ;
    (45) statementList -> . statement ;
    (46) statementList -> .
    (47) statement -> . IF expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END
    (52) statement -> . CASE expression OF caseList optionalElse END
    (57) statement -> . WHILE boolMarker expression DO boolMarker statementList END
    (58) statement -> . REPEAT boolMarker statementList UNTIL boolMarker expression
    (59) statement -> . FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END
    (64) statement -> . LOOP boolMarker statementList END
    (65) statement -> . EXIT
    (66) statement -> . READINT ( designator )
    (67) statement -> . READREAL ( designator )
    (68) statement -> . RETURN
    (69) statement -> . RETURN expression
    (70) statement -> . designator
    (71) statement -> . designator checkConstant ASSIGN expression
    (73) statement -> . DEC ( designator checkConstant )
    (74) statement -> . DEC ( designator checkConstant , expression )
    (75) statement -> . INC ( designator checkConstant )
    (76) statement -> . INC ( designator checkConstant , expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for READINT resolved as shift
  ! shift/reduce conflict for READREAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ABS resolved as shift
  ! shift/reduce conflict for SIZE resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAX resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
  ! shift/reduce conflict for CAP resolved as shift
    END             reduce using rule 46 (statementList -> .)
    IF              shift and go to state 60
    CASE            shift and go to state 48
    WHILE           shift and go to state 45
    REPEAT          shift and go to state 54
    FOR             shift and go to state 55
    LOOP            shift and go to state 65
    EXIT            shift and go to state 63
    READINT         shift and go to state 56
    READREAL        shift and go to state 46
    RETURN          shift and go to state 43
    DEC             shift and go to state 49
    INC             shift and go to state 66
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

  ! IF              [ reduce using rule 46 (statementList -> .) ]
  ! CASE            [ reduce using rule 46 (statementList -> .) ]
  ! WHILE           [ reduce using rule 46 (statementList -> .) ]
  ! REPEAT          [ reduce using rule 46 (statementList -> .) ]
  ! FOR             [ reduce using rule 46 (statementList -> .) ]
  ! LOOP            [ reduce using rule 46 (statementList -> .) ]
  ! EXIT            [ reduce using rule 46 (statementList -> .) ]
  ! READINT         [ reduce using rule 46 (statementList -> .) ]
  ! READREAL        [ reduce using rule 46 (statementList -> .) ]
  ! RETURN          [ reduce using rule 46 (statementList -> .) ]
  ! DEC             [ reduce using rule 46 (statementList -> .) ]
  ! INC             [ reduce using rule 46 (statementList -> .) ]
  ! ID              [ reduce using rule 46 (statementList -> .) ]
  ! ABS             [ reduce using rule 46 (statementList -> .) ]
  ! SIZE            [ reduce using rule 46 (statementList -> .) ]
  ! MIN             [ reduce using rule 46 (statementList -> .) ]
  ! MAX             [ reduce using rule 46 (statementList -> .) ]
  ! CHR             [ reduce using rule 46 (statementList -> .) ]
  ! ORD             [ reduce using rule 46 (statementList -> .) ]
  ! CAP             [ reduce using rule 46 (statementList -> .) ]

    designator                     shift and go to state 57
    statementList                  shift and go to state 315
    builtIn                        shift and go to state 58
    statement                      shift and go to state 52

state 314

    (48) elsifList -> ELSIF expression THEN boolMarker . statementList nMarker boolMarker elsifList
    (44) statementList -> . statementList boolMarker statement ;
    (45) statementList -> . statement ;
    (46) statementList -> .
    (47) statement -> . IF expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END
    (52) statement -> . CASE expression OF caseList optionalElse END
    (57) statement -> . WHILE boolMarker expression DO boolMarker statementList END
    (58) statement -> . REPEAT boolMarker statementList UNTIL boolMarker expression
    (59) statement -> . FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END
    (64) statement -> . LOOP boolMarker statementList END
    (65) statement -> . EXIT
    (66) statement -> . READINT ( designator )
    (67) statement -> . READREAL ( designator )
    (68) statement -> . RETURN
    (69) statement -> . RETURN expression
    (70) statement -> . designator
    (71) statement -> . designator checkConstant ASSIGN expression
    (73) statement -> . DEC ( designator checkConstant )
    (74) statement -> . DEC ( designator checkConstant , expression )
    (75) statement -> . INC ( designator checkConstant )
    (76) statement -> . INC ( designator checkConstant , expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for EXIT resolved as shift
  ! shift/reduce conflict for READINT resolved as shift
  ! shift/reduce conflict for READREAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ABS resolved as shift
  ! shift/reduce conflict for SIZE resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAX resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
  ! shift/reduce conflict for CAP resolved as shift
    ELSIF           reduce using rule 46 (statementList -> .)
    ELSE            reduce using rule 46 (statementList -> .)
    END             reduce using rule 46 (statementList -> .)
    IF              shift and go to state 60
    CASE            shift and go to state 48
    WHILE           shift and go to state 45
    REPEAT          shift and go to state 54
    FOR             shift and go to state 55
    LOOP            shift and go to state 65
    EXIT            shift and go to state 63
    READINT         shift and go to state 56
    READREAL        shift and go to state 46
    RETURN          shift and go to state 43
    DEC             shift and go to state 49
    INC             shift and go to state 66
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

  ! IF              [ reduce using rule 46 (statementList -> .) ]
  ! CASE            [ reduce using rule 46 (statementList -> .) ]
  ! WHILE           [ reduce using rule 46 (statementList -> .) ]
  ! REPEAT          [ reduce using rule 46 (statementList -> .) ]
  ! FOR             [ reduce using rule 46 (statementList -> .) ]
  ! LOOP            [ reduce using rule 46 (statementList -> .) ]
  ! EXIT            [ reduce using rule 46 (statementList -> .) ]
  ! READINT         [ reduce using rule 46 (statementList -> .) ]
  ! READREAL        [ reduce using rule 46 (statementList -> .) ]
  ! RETURN          [ reduce using rule 46 (statementList -> .) ]
  ! DEC             [ reduce using rule 46 (statementList -> .) ]
  ! INC             [ reduce using rule 46 (statementList -> .) ]
  ! ID              [ reduce using rule 46 (statementList -> .) ]
  ! ABS             [ reduce using rule 46 (statementList -> .) ]
  ! SIZE            [ reduce using rule 46 (statementList -> .) ]
  ! MIN             [ reduce using rule 46 (statementList -> .) ]
  ! MAX             [ reduce using rule 46 (statementList -> .) ]
  ! CHR             [ reduce using rule 46 (statementList -> .) ]
  ! ORD             [ reduce using rule 46 (statementList -> .) ]
  ! CAP             [ reduce using rule 46 (statementList -> .) ]

    designator                     shift and go to state 57
    builtIn                        shift and go to state 58
    statementList                  shift and go to state 316
    statement                      shift and go to state 52

state 315

    (59) statement -> FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList . boolMarker END
    (44) statementList -> statementList . boolMarker statement ;
    (116) boolMarker -> .

    END             reduce using rule 116 (boolMarker -> .)
    IF              reduce using rule 116 (boolMarker -> .)
    CASE            reduce using rule 116 (boolMarker -> .)
    WHILE           reduce using rule 116 (boolMarker -> .)
    REPEAT          reduce using rule 116 (boolMarker -> .)
    FOR             reduce using rule 116 (boolMarker -> .)
    LOOP            reduce using rule 116 (boolMarker -> .)
    EXIT            reduce using rule 116 (boolMarker -> .)
    READINT         reduce using rule 116 (boolMarker -> .)
    READREAL        reduce using rule 116 (boolMarker -> .)
    RETURN          reduce using rule 116 (boolMarker -> .)
    DEC             reduce using rule 116 (boolMarker -> .)
    INC             reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 317

state 316

    (48) elsifList -> ELSIF expression THEN boolMarker statementList . nMarker boolMarker elsifList
    (44) statementList -> statementList . boolMarker statement ;
    (117) nMarker -> .
    (116) boolMarker -> .

    ELSIF           reduce using rule 117 (nMarker -> .)
    ELSE            reduce using rule 117 (nMarker -> .)
    END             reduce using rule 117 (nMarker -> .)
    IF              reduce using rule 116 (boolMarker -> .)
    CASE            reduce using rule 116 (boolMarker -> .)
    WHILE           reduce using rule 116 (boolMarker -> .)
    REPEAT          reduce using rule 116 (boolMarker -> .)
    FOR             reduce using rule 116 (boolMarker -> .)
    LOOP            reduce using rule 116 (boolMarker -> .)
    EXIT            reduce using rule 116 (boolMarker -> .)
    READINT         reduce using rule 116 (boolMarker -> .)
    READREAL        reduce using rule 116 (boolMarker -> .)
    RETURN          reduce using rule 116 (boolMarker -> .)
    DEC             reduce using rule 116 (boolMarker -> .)
    INC             reduce using rule 116 (boolMarker -> .)
    ID              reduce using rule 116 (boolMarker -> .)
    ABS             reduce using rule 116 (boolMarker -> .)
    SIZE            reduce using rule 116 (boolMarker -> .)
    MIN             reduce using rule 116 (boolMarker -> .)
    MAX             reduce using rule 116 (boolMarker -> .)
    CHR             reduce using rule 116 (boolMarker -> .)
    ORD             reduce using rule 116 (boolMarker -> .)
    CAP             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 227
    nMarker                        shift and go to state 318

state 317

    (59) statement -> FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker . END
    (44) statementList -> statementList boolMarker . statement ;
    (47) statement -> . IF expression THEN boolMarker statementList nMarker boolMarker elsifList optionalElse END
    (52) statement -> . CASE expression OF caseList optionalElse END
    (57) statement -> . WHILE boolMarker expression DO boolMarker statementList END
    (58) statement -> . REPEAT boolMarker statementList UNTIL boolMarker expression
    (59) statement -> . FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END
    (64) statement -> . LOOP boolMarker statementList END
    (65) statement -> . EXIT
    (66) statement -> . READINT ( designator )
    (67) statement -> . READREAL ( designator )
    (68) statement -> . RETURN
    (69) statement -> . RETURN expression
    (70) statement -> . designator
    (71) statement -> . designator checkConstant ASSIGN expression
    (73) statement -> . DEC ( designator checkConstant )
    (74) statement -> . DEC ( designator checkConstant , expression )
    (75) statement -> . INC ( designator checkConstant )
    (76) statement -> . INC ( designator checkConstant , expression )
    (93) designator -> . ID suffix
    (94) designator -> . builtIn
    (77) builtIn -> . ABS ( expression )
    (78) builtIn -> . SIZE ( INTEGER )
    (79) builtIn -> . SIZE ( REAL )
    (80) builtIn -> . SIZE ( BOOLEAN )
    (81) builtIn -> . SIZE ( CHAR )
    (82) builtIn -> . MIN ( INTEGER )
    (83) builtIn -> . MIN ( REAL )
    (84) builtIn -> . MIN ( BOOLEAN )
    (85) builtIn -> . MIN ( CHAR )
    (86) builtIn -> . MAX ( INTEGER )
    (87) builtIn -> . MAX ( REAL )
    (88) builtIn -> . MAX ( BOOLEAN )
    (89) builtIn -> . MAX ( CHAR )
    (90) builtIn -> . CHR ( expression )
    (91) builtIn -> . ORD ( expression )
    (92) builtIn -> . CAP ( expression )

    END             shift and go to state 319
    IF              shift and go to state 60
    CASE            shift and go to state 48
    WHILE           shift and go to state 45
    REPEAT          shift and go to state 54
    FOR             shift and go to state 55
    LOOP            shift and go to state 65
    EXIT            shift and go to state 63
    READINT         shift and go to state 56
    READREAL        shift and go to state 46
    RETURN          shift and go to state 43
    DEC             shift and go to state 49
    INC             shift and go to state 66
    ID              shift and go to state 51
    ABS             shift and go to state 59
    SIZE            shift and go to state 53
    MIN             shift and go to state 61
    MAX             shift and go to state 47
    CHR             shift and go to state 62
    ORD             shift and go to state 64
    CAP             shift and go to state 44

    designator                     shift and go to state 57
    builtIn                        shift and go to state 58
    statement                      shift and go to state 158

state 318

    (48) elsifList -> ELSIF expression THEN boolMarker statementList nMarker . boolMarker elsifList
    (116) boolMarker -> .

    ELSIF           reduce using rule 116 (boolMarker -> .)
    ELSE            reduce using rule 116 (boolMarker -> .)
    END             reduce using rule 116 (boolMarker -> .)

    boolMarker                     shift and go to state 320

state 319

    (59) statement -> FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END .

    ;               reduce using rule 59 (statement -> FOR ID ASSIGN expression forAssign TO expression toValue optionalBY DO boolMarker statementList boolMarker END .)


state 320

    (48) elsifList -> ELSIF expression THEN boolMarker statementList nMarker boolMarker . elsifList
    (48) elsifList -> . ELSIF expression THEN boolMarker statementList nMarker boolMarker elsifList
    (49) elsifList -> .

    ELSIF           shift and go to state 301
    ELSE            reduce using rule 49 (elsifList -> .)
    END             reduce using rule 49 (elsifList -> .)

    elsifList                      shift and go to state 321

state 321

    (48) elsifList -> ELSIF expression THEN boolMarker statementList nMarker boolMarker elsifList .

    ELSE            reduce using rule 48 (elsifList -> ELSIF expression THEN boolMarker statementList nMarker boolMarker elsifList .)
    END             reduce using rule 48 (elsifList -> ELSIF expression THEN boolMarker statementList nMarker boolMarker elsifList .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IF in state 29 resolved as shift
WARNING: shift/reduce conflict for CASE in state 29 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 29 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 29 resolved as shift
WARNING: shift/reduce conflict for FOR in state 29 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 29 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 29 resolved as shift
WARNING: shift/reduce conflict for READINT in state 29 resolved as shift
WARNING: shift/reduce conflict for READREAL in state 29 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 29 resolved as shift
WARNING: shift/reduce conflict for DEC in state 29 resolved as shift
WARNING: shift/reduce conflict for INC in state 29 resolved as shift
WARNING: shift/reduce conflict for ID in state 29 resolved as shift
WARNING: shift/reduce conflict for ABS in state 29 resolved as shift
WARNING: shift/reduce conflict for SIZE in state 29 resolved as shift
WARNING: shift/reduce conflict for MIN in state 29 resolved as shift
WARNING: shift/reduce conflict for MAX in state 29 resolved as shift
WARNING: shift/reduce conflict for CHR in state 29 resolved as shift
WARNING: shift/reduce conflict for ORD in state 29 resolved as shift
WARNING: shift/reduce conflict for CAP in state 29 resolved as shift
WARNING: shift/reduce conflict for IF in state 112 resolved as shift
WARNING: shift/reduce conflict for CASE in state 112 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 112 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 112 resolved as shift
WARNING: shift/reduce conflict for FOR in state 112 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 112 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 112 resolved as shift
WARNING: shift/reduce conflict for READINT in state 112 resolved as shift
WARNING: shift/reduce conflict for READREAL in state 112 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 112 resolved as shift
WARNING: shift/reduce conflict for DEC in state 112 resolved as shift
WARNING: shift/reduce conflict for INC in state 112 resolved as shift
WARNING: shift/reduce conflict for ID in state 112 resolved as shift
WARNING: shift/reduce conflict for ABS in state 112 resolved as shift
WARNING: shift/reduce conflict for SIZE in state 112 resolved as shift
WARNING: shift/reduce conflict for MIN in state 112 resolved as shift
WARNING: shift/reduce conflict for MAX in state 112 resolved as shift
WARNING: shift/reduce conflict for CHR in state 112 resolved as shift
WARNING: shift/reduce conflict for ORD in state 112 resolved as shift
WARNING: shift/reduce conflict for CAP in state 112 resolved as shift
WARNING: shift/reduce conflict for IF in state 121 resolved as shift
WARNING: shift/reduce conflict for CASE in state 121 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 121 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 121 resolved as shift
WARNING: shift/reduce conflict for FOR in state 121 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 121 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 121 resolved as shift
WARNING: shift/reduce conflict for READINT in state 121 resolved as shift
WARNING: shift/reduce conflict for READREAL in state 121 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 121 resolved as shift
WARNING: shift/reduce conflict for DEC in state 121 resolved as shift
WARNING: shift/reduce conflict for INC in state 121 resolved as shift
WARNING: shift/reduce conflict for ID in state 121 resolved as shift
WARNING: shift/reduce conflict for ABS in state 121 resolved as shift
WARNING: shift/reduce conflict for SIZE in state 121 resolved as shift
WARNING: shift/reduce conflict for MIN in state 121 resolved as shift
WARNING: shift/reduce conflict for MAX in state 121 resolved as shift
WARNING: shift/reduce conflict for CHR in state 121 resolved as shift
WARNING: shift/reduce conflict for ORD in state 121 resolved as shift
WARNING: shift/reduce conflict for CAP in state 121 resolved as shift
WARNING: shift/reduce conflict for IF in state 233 resolved as shift
WARNING: shift/reduce conflict for CASE in state 233 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 233 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 233 resolved as shift
WARNING: shift/reduce conflict for FOR in state 233 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 233 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 233 resolved as shift
WARNING: shift/reduce conflict for READINT in state 233 resolved as shift
WARNING: shift/reduce conflict for READREAL in state 233 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 233 resolved as shift
WARNING: shift/reduce conflict for DEC in state 233 resolved as shift
WARNING: shift/reduce conflict for INC in state 233 resolved as shift
WARNING: shift/reduce conflict for ID in state 233 resolved as shift
WARNING: shift/reduce conflict for ABS in state 233 resolved as shift
WARNING: shift/reduce conflict for SIZE in state 233 resolved as shift
WARNING: shift/reduce conflict for MIN in state 233 resolved as shift
WARNING: shift/reduce conflict for MAX in state 233 resolved as shift
WARNING: shift/reduce conflict for CHR in state 233 resolved as shift
WARNING: shift/reduce conflict for ORD in state 233 resolved as shift
WARNING: shift/reduce conflict for CAP in state 233 resolved as shift
WARNING: shift/reduce conflict for IF in state 254 resolved as shift
WARNING: shift/reduce conflict for CASE in state 254 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 254 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 254 resolved as shift
WARNING: shift/reduce conflict for FOR in state 254 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 254 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 254 resolved as shift
WARNING: shift/reduce conflict for READINT in state 254 resolved as shift
WARNING: shift/reduce conflict for READREAL in state 254 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 254 resolved as shift
WARNING: shift/reduce conflict for DEC in state 254 resolved as shift
WARNING: shift/reduce conflict for INC in state 254 resolved as shift
WARNING: shift/reduce conflict for ID in state 254 resolved as shift
WARNING: shift/reduce conflict for ABS in state 254 resolved as shift
WARNING: shift/reduce conflict for SIZE in state 254 resolved as shift
WARNING: shift/reduce conflict for MIN in state 254 resolved as shift
WARNING: shift/reduce conflict for MAX in state 254 resolved as shift
WARNING: shift/reduce conflict for CHR in state 254 resolved as shift
WARNING: shift/reduce conflict for ORD in state 254 resolved as shift
WARNING: shift/reduce conflict for CAP in state 254 resolved as shift
WARNING: shift/reduce conflict for IF in state 255 resolved as shift
WARNING: shift/reduce conflict for CASE in state 255 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 255 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 255 resolved as shift
WARNING: shift/reduce conflict for FOR in state 255 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 255 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 255 resolved as shift
WARNING: shift/reduce conflict for READINT in state 255 resolved as shift
WARNING: shift/reduce conflict for READREAL in state 255 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 255 resolved as shift
WARNING: shift/reduce conflict for DEC in state 255 resolved as shift
WARNING: shift/reduce conflict for INC in state 255 resolved as shift
WARNING: shift/reduce conflict for ID in state 255 resolved as shift
WARNING: shift/reduce conflict for ABS in state 255 resolved as shift
WARNING: shift/reduce conflict for SIZE in state 255 resolved as shift
WARNING: shift/reduce conflict for MIN in state 255 resolved as shift
WARNING: shift/reduce conflict for MAX in state 255 resolved as shift
WARNING: shift/reduce conflict for CHR in state 255 resolved as shift
WARNING: shift/reduce conflict for ORD in state 255 resolved as shift
WARNING: shift/reduce conflict for CAP in state 255 resolved as shift
WARNING: shift/reduce conflict for IF in state 258 resolved as shift
WARNING: shift/reduce conflict for CASE in state 258 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 258 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 258 resolved as shift
WARNING: shift/reduce conflict for FOR in state 258 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 258 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 258 resolved as shift
WARNING: shift/reduce conflict for READINT in state 258 resolved as shift
WARNING: shift/reduce conflict for READREAL in state 258 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 258 resolved as shift
WARNING: shift/reduce conflict for DEC in state 258 resolved as shift
WARNING: shift/reduce conflict for INC in state 258 resolved as shift
WARNING: shift/reduce conflict for ID in state 258 resolved as shift
WARNING: shift/reduce conflict for ABS in state 258 resolved as shift
WARNING: shift/reduce conflict for SIZE in state 258 resolved as shift
WARNING: shift/reduce conflict for MIN in state 258 resolved as shift
WARNING: shift/reduce conflict for MAX in state 258 resolved as shift
WARNING: shift/reduce conflict for CHR in state 258 resolved as shift
WARNING: shift/reduce conflict for ORD in state 258 resolved as shift
WARNING: shift/reduce conflict for CAP in state 258 resolved as shift
WARNING: shift/reduce conflict for IF in state 313 resolved as shift
WARNING: shift/reduce conflict for CASE in state 313 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 313 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 313 resolved as shift
WARNING: shift/reduce conflict for FOR in state 313 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 313 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 313 resolved as shift
WARNING: shift/reduce conflict for READINT in state 313 resolved as shift
WARNING: shift/reduce conflict for READREAL in state 313 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 313 resolved as shift
WARNING: shift/reduce conflict for DEC in state 313 resolved as shift
WARNING: shift/reduce conflict for INC in state 313 resolved as shift
WARNING: shift/reduce conflict for ID in state 313 resolved as shift
WARNING: shift/reduce conflict for ABS in state 313 resolved as shift
WARNING: shift/reduce conflict for SIZE in state 313 resolved as shift
WARNING: shift/reduce conflict for MIN in state 313 resolved as shift
WARNING: shift/reduce conflict for MAX in state 313 resolved as shift
WARNING: shift/reduce conflict for CHR in state 313 resolved as shift
WARNING: shift/reduce conflict for ORD in state 313 resolved as shift
WARNING: shift/reduce conflict for CAP in state 313 resolved as shift
WARNING: shift/reduce conflict for IF in state 314 resolved as shift
WARNING: shift/reduce conflict for CASE in state 314 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 314 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 314 resolved as shift
WARNING: shift/reduce conflict for FOR in state 314 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 314 resolved as shift
WARNING: shift/reduce conflict for EXIT in state 314 resolved as shift
WARNING: shift/reduce conflict for READINT in state 314 resolved as shift
WARNING: shift/reduce conflict for READREAL in state 314 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 314 resolved as shift
WARNING: shift/reduce conflict for DEC in state 314 resolved as shift
WARNING: shift/reduce conflict for INC in state 314 resolved as shift
WARNING: shift/reduce conflict for ID in state 314 resolved as shift
WARNING: shift/reduce conflict for ABS in state 314 resolved as shift
WARNING: shift/reduce conflict for SIZE in state 314 resolved as shift
WARNING: shift/reduce conflict for MIN in state 314 resolved as shift
WARNING: shift/reduce conflict for MAX in state 314 resolved as shift
WARNING: shift/reduce conflict for CHR in state 314 resolved as shift
WARNING: shift/reduce conflict for ORD in state 314 resolved as shift
WARNING: shift/reduce conflict for CAP in state 314 resolved as shift
